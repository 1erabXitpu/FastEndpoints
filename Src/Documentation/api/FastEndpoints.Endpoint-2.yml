### YamlMime:ManagedReference
items:
- uid: FastEndpoints.Endpoint`2
  commentId: T:FastEndpoints.Endpoint`2
  id: Endpoint`2
  parent: FastEndpoints
  children:
  - FastEndpoints.Endpoint`2.AddError(System.Linq.Expressions.Expression{Func{`0,System.Object}},System.String)
  - FastEndpoints.Endpoint`2.AddError(System.String)
  - FastEndpoints.Endpoint`2.AllowAnnonymous
  - FastEndpoints.Endpoint`2.AllowFileUploads
  - FastEndpoints.Endpoint`2.AnyClaim(System.String[])
  - FastEndpoints.Endpoint`2.AnyPermission(System.String[])
  - FastEndpoints.Endpoint`2.BaseURL
  - FastEndpoints.Endpoint`2.Claims(System.Boolean,System.String[])
  - FastEndpoints.Endpoint`2.Claims(System.String[])
  - FastEndpoints.Endpoint`2.Config
  - FastEndpoints.Endpoint`2.DontThrowIfValidationFails
  - FastEndpoints.Endpoint`2.Env
  - FastEndpoints.Endpoint`2.Files
  - FastEndpoints.Endpoint`2.Form
  - FastEndpoints.Endpoint`2.HandleAsync(`0,CancellationToken)
  - FastEndpoints.Endpoint`2.HttpContext
  - FastEndpoints.Endpoint`2.HttpMethod
  - FastEndpoints.Endpoint`2.Logger
  - FastEndpoints.Endpoint`2.Options(Action{Microsoft.AspNetCore.Builder.DelegateEndpointConventionBuilder})
  - FastEndpoints.Endpoint`2.Permissions(System.Boolean,System.String[])
  - FastEndpoints.Endpoint`2.Permissions(System.String[])
  - FastEndpoints.Endpoint`2.Policies(System.String[])
  - FastEndpoints.Endpoint`2.PostProcessors(FastEndpoints.IPostProcessor{`0,`1}[])
  - FastEndpoints.Endpoint`2.PreProcessors(FastEndpoints.IPreProcessor{`0}[])
  - FastEndpoints.Endpoint`2.PublishAsync``1(``0,FastEndpoints.Mode,CancellationToken)
  - FastEndpoints.Endpoint`2.Resolve(Type)
  - FastEndpoints.Endpoint`2.Resolve``1
  - FastEndpoints.Endpoint`2.Response
  - FastEndpoints.Endpoint`2.Roles(System.String[])
  - FastEndpoints.Endpoint`2.Routes(System.String[])
  - FastEndpoints.Endpoint`2.SendAsync(`1,System.Int32,CancellationToken)
  - FastEndpoints.Endpoint`2.SendBytesAsync(System.Byte[],System.String,System.String,CancellationToken)
  - FastEndpoints.Endpoint`2.SendErrorsAsync(CancellationToken)
  - FastEndpoints.Endpoint`2.SendFileAsync(FileInfo,System.String,CancellationToken)
  - FastEndpoints.Endpoint`2.SendForbiddenAsync
  - FastEndpoints.Endpoint`2.SendNoContentAsync
  - FastEndpoints.Endpoint`2.SendNotFoundAsync
  - FastEndpoints.Endpoint`2.SendOkAsync
  - FastEndpoints.Endpoint`2.SendStreamAsync(Stream,System.String,System.Nullable{System.Int64},System.String,CancellationToken)
  - FastEndpoints.Endpoint`2.SendUnauthorizedAsync
  - FastEndpoints.Endpoint`2.ThrowError(System.Linq.Expressions.Expression{Func{`0,System.Object}},System.String)
  - FastEndpoints.Endpoint`2.ThrowError(System.String)
  - FastEndpoints.Endpoint`2.ThrowIfAnyErrors
  - FastEndpoints.Endpoint`2.TryResolve(Type)
  - FastEndpoints.Endpoint`2.TryResolve``1
  - FastEndpoints.Endpoint`2.User
  - FastEndpoints.Endpoint`2.ValidationFailed
  - FastEndpoints.Endpoint`2.ValidationFailures
  - FastEndpoints.Endpoint`2.Verbs(FastEndpoints.Http[])
  langs:
  - csharp
  - vb
  name: Endpoint<TRequest, TResponse>
  nameWithType: Endpoint<TRequest, TResponse>
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>
  type: Class
  source:
    id: Endpoint
    path: D:\SOURCE-CONTROL\FastEndpoints\Src\Documentation\src\Endpoint.cs
    startLine: 69
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nuse this base class for defining endpoints that use both request and response dtos.\n"
  example: []
  syntax:
    content: >-
      public abstract class Endpoint<TRequest, TResponse> : BaseEndpoint, IEndpoint where TRequest : new()

          where TResponse : new()
    typeParameters:
    - id: TRequest
      description: the type of the request dto
    - id: TResponse
      description: the type of the response dto
    content.vb: >-
      Public MustInherit Class Endpoint(Of TRequest As New, TResponse As New)

          Inherits BaseEndpoint

          Implements IEndpoint
  inheritance:
  - System.Object
  - FastEndpoints.BaseEndpoint
  derivedClasses:
  - FastEndpoints.Endpoint`1
  - FastEndpoints.EndpointWithoutRequest`1
  implements:
  - FastEndpoints.IEndpoint
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: Endpoint(Of TRequest, TResponse)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse)
  name.vb: Endpoint(Of TRequest, TResponse)
- uid: FastEndpoints.Endpoint`2.HttpContext
  commentId: P:FastEndpoints.Endpoint`2.HttpContext
  id: HttpContext
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: HttpContext
  nameWithType: Endpoint<TRequest, TResponse>.HttpContext
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.HttpContext
  type: Property
  source:
    id: HttpContext
    path: D:\SOURCE-CONTROL\FastEndpoints\Src\Documentation\src\Endpoint.cs
    startLine: 78
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nthe http context of the current request\n"
  example: []
  syntax:
    content: protected HttpContext HttpContext { get; }
    parameters: []
    return:
      type: Microsoft.AspNetCore.Http.HttpContext
    content.vb: Protected ReadOnly Property HttpContext As HttpContext
  overload: FastEndpoints.Endpoint`2.HttpContext*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).HttpContext
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).HttpContext
- uid: FastEndpoints.Endpoint`2.User
  commentId: P:FastEndpoints.Endpoint`2.User
  id: User
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: User
  nameWithType: Endpoint<TRequest, TResponse>.User
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.User
  type: Property
  source:
    id: User
    path: D:\SOURCE-CONTROL\FastEndpoints\Src\Documentation\src\Endpoint.cs
    startLine: 83
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nthe current user principal\n"
  example: []
  syntax:
    content: protected ClaimsPrincipal User { get; }
    parameters: []
    return:
      type: System.Security.Claims.ClaimsPrincipal
    content.vb: Protected ReadOnly Property User As ClaimsPrincipal
  overload: FastEndpoints.Endpoint`2.User*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).User
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).User
- uid: FastEndpoints.Endpoint`2.Response
  commentId: P:FastEndpoints.Endpoint`2.Response
  id: Response
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: Response
  nameWithType: Endpoint<TRequest, TResponse>.Response
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Response
  type: Property
  source:
    id: Response
    path: D:\SOURCE-CONTROL\FastEndpoints\Src\Documentation\src\Endpoint.cs
    startLine: 87
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nthe response that is sent to the client.\n"
  example: []
  syntax:
    content: protected TResponse Response { get; set; }
    parameters: []
    return:
      type: '{TResponse}'
    content.vb: Protected Property Response As TResponse
  overload: FastEndpoints.Endpoint`2.Response*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Response
  modifiers.csharp:
  - protected
  - get
  - set
  modifiers.vb:
  - Protected
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Response
- uid: FastEndpoints.Endpoint`2.Config
  commentId: P:FastEndpoints.Endpoint`2.Config
  id: Config
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: Config
  nameWithType: Endpoint<TRequest, TResponse>.Config
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Config
  type: Property
  source:
    id: Config
    path: D:\SOURCE-CONTROL\FastEndpoints\Src\Documentation\src\Endpoint.cs
    startLine: 91
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\ngives access to the configuration\n"
  example: []
  syntax:
    content: protected IConfiguration Config { get; }
    parameters: []
    return:
      type: Microsoft.Extensions.Configuration.IConfiguration
    content.vb: Protected ReadOnly Property Config As IConfiguration
  overload: FastEndpoints.Endpoint`2.Config*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Config
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Config
- uid: FastEndpoints.Endpoint`2.Env
  commentId: P:FastEndpoints.Endpoint`2.Env
  id: Env
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: Env
  nameWithType: Endpoint<TRequest, TResponse>.Env
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Env
  type: Property
  source:
    id: Env
    path: D:\SOURCE-CONTROL\FastEndpoints\Src\Documentation\src\Endpoint.cs
    startLine: 95
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\ngives access to the hosting environment\n"
  example: []
  syntax:
    content: protected IWebHostEnvironment Env { get; }
    parameters: []
    return:
      type: Microsoft.AspNetCore.Hosting.IWebHostEnvironment
    content.vb: Protected ReadOnly Property Env As IWebHostEnvironment
  overload: FastEndpoints.Endpoint`2.Env*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Env
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Env
- uid: FastEndpoints.Endpoint`2.Logger
  commentId: P:FastEndpoints.Endpoint`2.Logger
  id: Logger
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: Logger
  nameWithType: Endpoint<TRequest, TResponse>.Logger
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Logger
  type: Property
  source:
    id: Logger
    path: D:\SOURCE-CONTROL\FastEndpoints\Src\Documentation\src\Endpoint.cs
    startLine: 99
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nthe logger for the current endpoint type\n"
  example: []
  syntax:
    content: protected ILogger Logger { get; }
    parameters: []
    return:
      type: Microsoft.Extensions.Logging.ILogger
    content.vb: Protected ReadOnly Property Logger As ILogger
  overload: FastEndpoints.Endpoint`2.Logger*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Logger
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Logger
- uid: FastEndpoints.Endpoint`2.BaseURL
  commentId: P:FastEndpoints.Endpoint`2.BaseURL
  id: BaseURL
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: BaseURL
  nameWithType: Endpoint<TRequest, TResponse>.BaseURL
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.BaseURL
  type: Property
  source:
    id: BaseURL
    path: D:\SOURCE-CONTROL\FastEndpoints\Src\Documentation\src\Endpoint.cs
    startLine: 103
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nthe base url of the current request\n"
  example: []
  syntax:
    content: protected string BaseURL { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Protected ReadOnly Property BaseURL As String
  overload: FastEndpoints.Endpoint`2.BaseURL*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).BaseURL
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).BaseURL
- uid: FastEndpoints.Endpoint`2.HttpMethod
  commentId: P:FastEndpoints.Endpoint`2.HttpMethod
  id: HttpMethod
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: HttpMethod
  nameWithType: Endpoint<TRequest, TResponse>.HttpMethod
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.HttpMethod
  type: Property
  source:
    id: HttpMethod
    path: D:\SOURCE-CONTROL\FastEndpoints\Src\Documentation\src\Endpoint.cs
    startLine: 107
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nthe http method of the current request\n"
  example: []
  syntax:
    content: protected Http HttpMethod { get; }
    parameters: []
    return:
      type: FastEndpoints.Http
    content.vb: Protected ReadOnly Property HttpMethod As Http
  overload: FastEndpoints.Endpoint`2.HttpMethod*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).HttpMethod
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).HttpMethod
- uid: FastEndpoints.Endpoint`2.ValidationFailures
  commentId: P:FastEndpoints.Endpoint`2.ValidationFailures
  id: ValidationFailures
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: ValidationFailures
  nameWithType: Endpoint<TRequest, TResponse>.ValidationFailures
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.ValidationFailures
  type: Property
  source:
    id: ValidationFailures
    path: D:\SOURCE-CONTROL\FastEndpoints\Src\Documentation\src\Endpoint.cs
    startLine: 111
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nthe list of validation failures for the current request dto\n"
  example: []
  syntax:
    content: public List<ValidationFailure> ValidationFailures { get; }
    parameters: []
    return:
      type: List{ValidationFailure}
    content.vb: Public ReadOnly Property ValidationFailures As List(Of ValidationFailure)
  overload: FastEndpoints.Endpoint`2.ValidationFailures*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).ValidationFailures
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).ValidationFailures
- uid: FastEndpoints.Endpoint`2.ValidationFailed
  commentId: P:FastEndpoints.Endpoint`2.ValidationFailed
  id: ValidationFailed
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: ValidationFailed
  nameWithType: Endpoint<TRequest, TResponse>.ValidationFailed
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.ValidationFailed
  type: Property
  source:
    id: ValidationFailed
    path: D:\SOURCE-CONTROL\FastEndpoints\Src\Documentation\src\Endpoint.cs
    startLine: 115
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nindicates if there are any validation failures for the current request\n"
  example: []
  syntax:
    content: public bool ValidationFailed { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property ValidationFailed As Boolean
  overload: FastEndpoints.Endpoint`2.ValidationFailed*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).ValidationFailed
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).ValidationFailed
- uid: FastEndpoints.Endpoint`2.Form
  commentId: P:FastEndpoints.Endpoint`2.Form
  id: Form
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: Form
  nameWithType: Endpoint<TRequest, TResponse>.Form
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Form
  type: Property
  source:
    id: Form
    path: D:\SOURCE-CONTROL\FastEndpoints\Src\Documentation\src\Endpoint.cs
    startLine: 119
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nthe form sent with the request. only populated if content-type is &apos;application/x-www-form-urlencoded&apos; or &apos;multipart/form-data&apos;\n"
  example: []
  syntax:
    content: protected IFormCollection Form { get; }
    parameters: []
    return:
      type: Microsoft.AspNetCore.Http.IFormCollection
    content.vb: Protected ReadOnly Property Form As IFormCollection
  overload: FastEndpoints.Endpoint`2.Form*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Form
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Form
- uid: FastEndpoints.Endpoint`2.Files
  commentId: P:FastEndpoints.Endpoint`2.Files
  id: Files
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: Files
  nameWithType: Endpoint<TRequest, TResponse>.Files
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Files
  type: Property
  source:
    id: Files
    path: D:\SOURCE-CONTROL\FastEndpoints\Src\Documentation\src\Endpoint.cs
    startLine: 123
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nthe files sent with the request. only populated is content-type is &apos;multipart/form-data&apos;\n"
  example: []
  syntax:
    content: protected IFormFileCollection Files { get; }
    parameters: []
    return:
      type: Microsoft.AspNetCore.Http.IFormFileCollection
    content.vb: Protected ReadOnly Property Files As IFormFileCollection
  overload: FastEndpoints.Endpoint`2.Files*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Files
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Files
- uid: FastEndpoints.Endpoint`2.Routes(System.String[])
  commentId: M:FastEndpoints.Endpoint`2.Routes(System.String[])
  id: Routes(System.String[])
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: Routes(String[])
  nameWithType: Endpoint<TRequest, TResponse>.Routes(String[])
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Routes(System.String[])
  type: Method
  source:
    id: Routes
    path: D:\SOURCE-CONTROL\FastEndpoints\Src\Documentation\src\Endpoint.cs
    startLine: 129
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nspecify one or more route patterns this endpoint should be listening for\n"
  example: []
  syntax:
    content: protected void Routes(params string[] patterns)
    parameters:
    - id: patterns
      type: System.String[]
      description: ''
    content.vb: Protected Sub Routes(ParamArray patterns As String())
  overload: FastEndpoints.Endpoint`2.Routes*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Routes(String())
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Routes(System.String())
  name.vb: Routes(String())
- uid: FastEndpoints.Endpoint`2.Verbs(FastEndpoints.Http[])
  commentId: M:FastEndpoints.Endpoint`2.Verbs(FastEndpoints.Http[])
  id: Verbs(FastEndpoints.Http[])
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: Verbs(Http[])
  nameWithType: Endpoint<TRequest, TResponse>.Verbs(Http[])
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Verbs(FastEndpoints.Http[])
  type: Method
  source:
    id: Verbs
    path: D:\SOURCE-CONTROL\FastEndpoints\Src\Documentation\src\Endpoint.cs
    startLine: 142
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nspecify one or more http method verbs this endpoint should be accepting requests for\n"
  example: []
  syntax:
    content: protected void Verbs(params Http[] methods)
    parameters:
    - id: methods
      type: FastEndpoints.Http[]
      description: ''
    content.vb: Protected Sub Verbs(ParamArray methods As Http())
  overload: FastEndpoints.Endpoint`2.Verbs*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Verbs(Http())
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Verbs(FastEndpoints.Http())
  name.vb: Verbs(Http())
- uid: FastEndpoints.Endpoint`2.DontThrowIfValidationFails
  commentId: M:FastEndpoints.Endpoint`2.DontThrowIfValidationFails
  id: DontThrowIfValidationFails
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: DontThrowIfValidationFails()
  nameWithType: Endpoint<TRequest, TResponse>.DontThrowIfValidationFails()
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.DontThrowIfValidationFails()
  type: Method
  source:
    id: DontThrowIfValidationFails
    path: D:\SOURCE-CONTROL\FastEndpoints\Src\Documentation\src\Endpoint.cs
    startLine: 146
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\ndisable auto validation failure responses (400 bad request with error details) for this endpoint\n"
  example: []
  syntax:
    content: protected void DontThrowIfValidationFails()
    content.vb: Protected Sub DontThrowIfValidationFails
  overload: FastEndpoints.Endpoint`2.DontThrowIfValidationFails*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).DontThrowIfValidationFails()
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).DontThrowIfValidationFails()
- uid: FastEndpoints.Endpoint`2.AllowAnnonymous
  commentId: M:FastEndpoints.Endpoint`2.AllowAnnonymous
  id: AllowAnnonymous
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: AllowAnnonymous()
  nameWithType: Endpoint<TRequest, TResponse>.AllowAnnonymous()
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.AllowAnnonymous()
  type: Method
  source:
    id: AllowAnnonymous
    path: D:\SOURCE-CONTROL\FastEndpoints\Src\Documentation\src\Endpoint.cs
    startLine: 150
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nallow unauthenticated requests to this endpoint\n"
  example: []
  syntax:
    content: protected void AllowAnnonymous()
    content.vb: Protected Sub AllowAnnonymous
  overload: FastEndpoints.Endpoint`2.AllowAnnonymous*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).AllowAnnonymous()
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).AllowAnnonymous()
- uid: FastEndpoints.Endpoint`2.AllowFileUploads
  commentId: M:FastEndpoints.Endpoint`2.AllowFileUploads
  id: AllowFileUploads
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: AllowFileUploads()
  nameWithType: Endpoint<TRequest, TResponse>.AllowFileUploads()
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.AllowFileUploads()
  type: Method
  source:
    id: AllowFileUploads
    path: D:\SOURCE-CONTROL\FastEndpoints\Src\Documentation\src\Endpoint.cs
    startLine: 154
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nenable file uploads with multipart/form-data content type\n"
  example: []
  syntax:
    content: protected void AllowFileUploads()
    content.vb: Protected Sub AllowFileUploads
  overload: FastEndpoints.Endpoint`2.AllowFileUploads*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).AllowFileUploads()
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).AllowFileUploads()
- uid: FastEndpoints.Endpoint`2.Policies(System.String[])
  commentId: M:FastEndpoints.Endpoint`2.Policies(System.String[])
  id: Policies(System.String[])
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: Policies(String[])
  nameWithType: Endpoint<TRequest, TResponse>.Policies(String[])
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Policies(System.String[])
  type: Method
  source:
    id: Policies
    path: D:\SOURCE-CONTROL\FastEndpoints\Src\Documentation\src\Endpoint.cs
    startLine: 159
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nspecify one or more authorization policy names you have added to the middleware pipeline during app startup/ service configuration that should be applied to this endpoint.\n"
  example: []
  syntax:
    content: protected void Policies(params string[] policyNames)
    parameters:
    - id: policyNames
      type: System.String[]
      description: one or more policy names (must have been added to the pipeline on startup)
    content.vb: Protected Sub Policies(ParamArray policyNames As String())
  overload: FastEndpoints.Endpoint`2.Policies*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Policies(String())
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Policies(System.String())
  name.vb: Policies(String())
- uid: FastEndpoints.Endpoint`2.Roles(System.String[])
  commentId: M:FastEndpoints.Endpoint`2.Roles(System.String[])
  id: Roles(System.String[])
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: Roles(String[])
  nameWithType: Endpoint<TRequest, TResponse>.Roles(String[])
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Roles(System.String[])
  type: Method
  source:
    id: Roles
    path: D:\SOURCE-CONTROL\FastEndpoints\Src\Documentation\src\Endpoint.cs
    startLine: 164
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nspecify that the current claim principal/ user should posses at least one of the roles (claim type) mentioned here. access will be forbidden if the user doesn&apos;t have any of the specified roles.\n"
  example: []
  syntax:
    content: protected void Roles(params string[] rolesNames)
    parameters:
    - id: rolesNames
      type: System.String[]
      description: one or more roles that has access
    content.vb: Protected Sub Roles(ParamArray rolesNames As String())
  overload: FastEndpoints.Endpoint`2.Roles*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Roles(String())
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Roles(System.String())
  name.vb: Roles(String())
- uid: FastEndpoints.Endpoint`2.Permissions(System.String[])
  commentId: M:FastEndpoints.Endpoint`2.Permissions(System.String[])
  id: Permissions(System.String[])
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: Permissions(String[])
  nameWithType: Endpoint<TRequest, TResponse>.Permissions(String[])
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Permissions(System.String[])
  type: Method
  source:
    id: Permissions
    path: D:\SOURCE-CONTROL\FastEndpoints\Src\Documentation\src\Endpoint.cs
    startLine: 169
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nspecify the permissions a user principal should posses in order to access this endpoint. they must posses ALL of the permissions mentioned here. if not, a 403 forbidden response will be sent.\n"
  example: []
  syntax:
    content: protected void Permissions(params string[] permissions)
    parameters:
    - id: permissions
      type: System.String[]
      description: the permissions needed to access this endpoint
    content.vb: Protected Sub Permissions(ParamArray permissions As String())
  overload: FastEndpoints.Endpoint`2.Permissions*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Permissions(String())
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Permissions(System.String())
  name.vb: Permissions(String())
- uid: FastEndpoints.Endpoint`2.Permissions(System.Boolean,System.String[])
  commentId: M:FastEndpoints.Endpoint`2.Permissions(System.Boolean,System.String[])
  id: Permissions(System.Boolean,System.String[])
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: Permissions(Boolean, String[])
  nameWithType: Endpoint<TRequest, TResponse>.Permissions(Boolean, String[])
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Permissions(System.Boolean, System.String[])
  type: Method
  source:
    id: Permissions
    path: D:\SOURCE-CONTROL\FastEndpoints\Src\Documentation\src\Endpoint.cs
    startLine: 175
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nspecify the permissions a user principal should posses in order to access this endpoint.\n"
  example: []
  syntax:
    content: protected void Permissions(bool allowAny, params string[] permissions)
    parameters:
    - id: allowAny
      type: System.Boolean
      description: if set to true, having any 1 of the specified permissions will enable access
    - id: permissions
      type: System.String[]
      description: the permissions
    content.vb: Protected Sub Permissions(allowAny As Boolean, ParamArray permissions As String())
  overload: FastEndpoints.Endpoint`2.Permissions*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Permissions(Boolean, String())
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Permissions(System.Boolean, System.String())
  name.vb: Permissions(Boolean, String())
- uid: FastEndpoints.Endpoint`2.AnyPermission(System.String[])
  commentId: M:FastEndpoints.Endpoint`2.AnyPermission(System.String[])
  id: AnyPermission(System.String[])
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: AnyPermission(String[])
  nameWithType: Endpoint<TRequest, TResponse>.AnyPermission(String[])
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.AnyPermission(System.String[])
  type: Method
  source:
    id: AnyPermission
    path: D:\SOURCE-CONTROL\FastEndpoints\Src\Documentation\src\Endpoint.cs
    startLine: 184
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nspecify to allow access if the user has any of the given permissions\n"
  example: []
  syntax:
    content: protected void AnyPermission(params string[] permissions)
    parameters:
    - id: permissions
      type: System.String[]
      description: the permissions
    content.vb: Protected Sub AnyPermission(ParamArray permissions As String())
  overload: FastEndpoints.Endpoint`2.AnyPermission*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).AnyPermission(String())
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).AnyPermission(System.String())
  name.vb: AnyPermission(String())
- uid: FastEndpoints.Endpoint`2.Claims(System.String[])
  commentId: M:FastEndpoints.Endpoint`2.Claims(System.String[])
  id: Claims(System.String[])
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: Claims(String[])
  nameWithType: Endpoint<TRequest, TResponse>.Claims(String[])
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Claims(System.String[])
  type: Method
  source:
    id: Claims
    path: D:\SOURCE-CONTROL\FastEndpoints\Src\Documentation\src\Endpoint.cs
    startLine: 189
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nspecify the claim types a user principal should posses in order to access this endpoint. they must posses ALL of the claim types mentioned here. if not, a 403 forbidden response will be sent.\n"
  example: []
  syntax:
    content: protected void Claims(params string[] claims)
    parameters:
    - id: claims
      type: System.String[]
      description: the claims needed to access this endpoint
    content.vb: Protected Sub Claims(ParamArray claims As String())
  overload: FastEndpoints.Endpoint`2.Claims*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Claims(String())
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Claims(System.String())
  name.vb: Claims(String())
- uid: FastEndpoints.Endpoint`2.Claims(System.Boolean,System.String[])
  commentId: M:FastEndpoints.Endpoint`2.Claims(System.Boolean,System.String[])
  id: Claims(System.Boolean,System.String[])
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: Claims(Boolean, String[])
  nameWithType: Endpoint<TRequest, TResponse>.Claims(Boolean, String[])
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Claims(System.Boolean, System.String[])
  type: Method
  source:
    id: Claims
    path: D:\SOURCE-CONTROL\FastEndpoints\Src\Documentation\src\Endpoint.cs
    startLine: 195
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nspecify the claim types a user principal should posses in order to access this endpoint.\n"
  example: []
  syntax:
    content: protected void Claims(bool allowAny, params string[] claims)
    parameters:
    - id: allowAny
      type: System.Boolean
      description: if set to true, having any 1 of the specified permissions will enable access
    - id: claims
      type: System.String[]
      description: the claims
    content.vb: Protected Sub Claims(allowAny As Boolean, ParamArray claims As String())
  overload: FastEndpoints.Endpoint`2.Claims*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Claims(Boolean, String())
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Claims(System.Boolean, System.String())
  name.vb: Claims(Boolean, String())
- uid: FastEndpoints.Endpoint`2.AnyClaim(System.String[])
  commentId: M:FastEndpoints.Endpoint`2.AnyClaim(System.String[])
  id: AnyClaim(System.String[])
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: AnyClaim(String[])
  nameWithType: Endpoint<TRequest, TResponse>.AnyClaim(String[])
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.AnyClaim(System.String[])
  type: Method
  source:
    id: AnyClaim
    path: D:\SOURCE-CONTROL\FastEndpoints\Src\Documentation\src\Endpoint.cs
    startLine: 204
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nspecify to allow access if the user has any of the given claims\n"
  example: []
  syntax:
    content: protected void AnyClaim(params string[] claims)
    parameters:
    - id: claims
      type: System.String[]
      description: the claims
    content.vb: Protected Sub AnyClaim(ParamArray claims As String())
  overload: FastEndpoints.Endpoint`2.AnyClaim*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).AnyClaim(String())
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).AnyClaim(System.String())
  name.vb: AnyClaim(String())
- uid: FastEndpoints.Endpoint`2.PreProcessors(FastEndpoints.IPreProcessor{`0}[])
  commentId: M:FastEndpoints.Endpoint`2.PreProcessors(FastEndpoints.IPreProcessor{`0}[])
  id: PreProcessors(FastEndpoints.IPreProcessor{`0}[])
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: PreProcessors(IPreProcessor<TRequest>[])
  nameWithType: Endpoint<TRequest, TResponse>.PreProcessors(IPreProcessor<TRequest>[])
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.PreProcessors(FastEndpoints.IPreProcessor<TRequest>[])
  type: Method
  source:
    id: PreProcessors
    path: D:\SOURCE-CONTROL\FastEndpoints\Src\Documentation\src\Endpoint.cs
    startLine: 209
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nconfigure a collection of pre-processors to be executed before the main handler function is called. processors are executed in the order they are defined here.\n"
  example: []
  syntax:
    content: protected void PreProcessors(params IPreProcessor<TRequest>[] preProcessors)
    parameters:
    - id: preProcessors
      type: FastEndpoints.IPreProcessor{{TRequest}}[]
      description: the pre processors to be executed
    content.vb: Protected Sub PreProcessors(ParamArray preProcessors As IPreProcessor(Of TRequest)())
  overload: FastEndpoints.Endpoint`2.PreProcessors*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).PreProcessors(IPreProcessor(Of TRequest)())
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).PreProcessors(FastEndpoints.IPreProcessor(Of TRequest)())
  name.vb: PreProcessors(IPreProcessor(Of TRequest)())
- uid: FastEndpoints.Endpoint`2.PostProcessors(FastEndpoints.IPostProcessor{`0,`1}[])
  commentId: M:FastEndpoints.Endpoint`2.PostProcessors(FastEndpoints.IPostProcessor{`0,`1}[])
  id: PostProcessors(FastEndpoints.IPostProcessor{`0,`1}[])
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: PostProcessors(IPostProcessor<TRequest, TResponse>[])
  nameWithType: Endpoint<TRequest, TResponse>.PostProcessors(IPostProcessor<TRequest, TResponse>[])
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.PostProcessors(FastEndpoints.IPostProcessor<TRequest, TResponse>[])
  type: Method
  source:
    id: PostProcessors
    path: D:\SOURCE-CONTROL\FastEndpoints\Src\Documentation\src\Endpoint.cs
    startLine: 214
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nconfigure a collection of post-processors to be executed after the main handler function is done. processors are executed in the order they are defined here.\n"
  example: []
  syntax:
    content: protected void PostProcessors(params IPostProcessor<TRequest, TResponse>[] postProcessors)
    parameters:
    - id: postProcessors
      type: FastEndpoints.IPostProcessor{{TRequest},{TResponse}}[]
      description: the post processors to be executed
    content.vb: Protected Sub PostProcessors(ParamArray postProcessors As IPostProcessor(Of TRequest, TResponse)())
  overload: FastEndpoints.Endpoint`2.PostProcessors*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).PostProcessors(IPostProcessor(Of TRequest, TResponse)())
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).PostProcessors(FastEndpoints.IPostProcessor(Of TRequest, TResponse)())
  name.vb: PostProcessors(IPostProcessor(Of TRequest, TResponse)())
- uid: FastEndpoints.Endpoint`2.Options(Action{Microsoft.AspNetCore.Builder.DelegateEndpointConventionBuilder})
  commentId: M:FastEndpoints.Endpoint`2.Options(Action{Microsoft.AspNetCore.Builder.DelegateEndpointConventionBuilder})
  id: Options(Action{Microsoft.AspNetCore.Builder.DelegateEndpointConventionBuilder})
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: Options(Action<DelegateEndpointConventionBuilder>)
  nameWithType: Endpoint<TRequest, TResponse>.Options(Action<DelegateEndpointConventionBuilder>)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Options(Action<Microsoft.AspNetCore.Builder.DelegateEndpointConventionBuilder>)
  type: Method
  source:
    id: Options
    path: D:\SOURCE-CONTROL\FastEndpoints\Src\Documentation\src\Endpoint.cs
    startLine: 219
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nset endpoint configurations options using an endpoint builder action\n"
  example: []
  syntax:
    content: protected void Options(Action<DelegateEndpointConventionBuilder> builder)
    parameters:
    - id: builder
      type: Action{Microsoft.AspNetCore.Builder.DelegateEndpointConventionBuilder}
      description: the builder for this endpoint
    content.vb: Protected Sub Options(builder As Action(Of DelegateEndpointConventionBuilder))
  overload: FastEndpoints.Endpoint`2.Options*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Options(Action(Of DelegateEndpointConventionBuilder))
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Options(Action(Of Microsoft.AspNetCore.Builder.DelegateEndpointConventionBuilder))
  name.vb: Options(Action(Of DelegateEndpointConventionBuilder))
- uid: FastEndpoints.Endpoint`2.HandleAsync(`0,CancellationToken)
  commentId: M:FastEndpoints.Endpoint`2.HandleAsync(`0,CancellationToken)
  id: HandleAsync(`0,CancellationToken)
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: HandleAsync(TRequest, CancellationToken)
  nameWithType: Endpoint<TRequest, TResponse>.HandleAsync(TRequest, CancellationToken)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.HandleAsync(TRequest, CancellationToken)
  type: Method
  source:
    id: HandleAsync
    path: D:\SOURCE-CONTROL\FastEndpoints\Src\Documentation\src\Endpoint.cs
    startLine: 226
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nthe handler method for the endpoint. this method is called for each request received.\n"
  example: []
  syntax:
    content: protected abstract Task HandleAsync(TRequest req, CancellationToken ct)
    parameters:
    - id: req
      type: '{TRequest}'
      description: the request dto
    - id: ct
      type: CancellationToken
      description: a cancellation token
    return:
      type: Task
    content.vb: Protected MustOverride Function HandleAsync(req As TRequest, ct As CancellationToken) As Task
  overload: FastEndpoints.Endpoint`2.HandleAsync*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).HandleAsync(TRequest, CancellationToken)
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).HandleAsync(TRequest, CancellationToken)
- uid: FastEndpoints.Endpoint`2.AddError(System.String)
  commentId: M:FastEndpoints.Endpoint`2.AddError(System.String)
  id: AddError(System.String)
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: AddError(String)
  nameWithType: Endpoint<TRequest, TResponse>.AddError(String)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.AddError(System.String)
  type: Method
  source:
    id: AddError
    path: D:\SOURCE-CONTROL\FastEndpoints\Src\Documentation\src\Endpoint.cs
    startLine: 256
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nadds a &quot;GeneralError&quot; to the current list of validation failures\n"
  example: []
  syntax:
    content: protected void AddError(string message)
    parameters:
    - id: message
      type: System.String
      description: the error message
    content.vb: Protected Sub AddError(message As String)
  overload: FastEndpoints.Endpoint`2.AddError*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).AddError(String)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).AddError(System.String)
- uid: FastEndpoints.Endpoint`2.AddError(System.Linq.Expressions.Expression{Func{`0,System.Object}},System.String)
  commentId: M:FastEndpoints.Endpoint`2.AddError(System.Linq.Expressions.Expression{Func{`0,System.Object}},System.String)
  id: AddError(System.Linq.Expressions.Expression{Func{`0,System.Object}},System.String)
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: AddError(Expression<Func<TRequest, Object>>, String)
  nameWithType: Endpoint<TRequest, TResponse>.AddError(Expression<Func<TRequest, Object>>, String)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.AddError(System.Linq.Expressions.Expression<Func<TRequest, System.Object>>, System.String)
  type: Method
  source:
    id: AddError
    path: D:\SOURCE-CONTROL\FastEndpoints\Src\Documentation\src\Endpoint.cs
    startLine: 264
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nadds an error message for the specified property of the request dto\n"
  example: []
  syntax:
    content: protected void AddError(Expression<Func<TRequest, object>> property, string errorMessage)
    parameters:
    - id: property
      type: System.Linq.Expressions.Expression{Func{{TRequest},System.Object}}
      description: the property to add teh error message for
    - id: errorMessage
      type: System.String
      description: the error message
    content.vb: Protected Sub AddError(property As Expression(Of Func(Of TRequest, Object)), errorMessage As String)
  overload: FastEndpoints.Endpoint`2.AddError*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).AddError(Expression(Of Func(Of TRequest, Object)), String)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).AddError(System.Linq.Expressions.Expression(Of Func(Of TRequest, System.Object)), System.String)
  name.vb: AddError(Expression(Of Func(Of TRequest, Object)), String)
- uid: FastEndpoints.Endpoint`2.ThrowIfAnyErrors
  commentId: M:FastEndpoints.Endpoint`2.ThrowIfAnyErrors
  id: ThrowIfAnyErrors
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: ThrowIfAnyErrors()
  nameWithType: Endpoint<TRequest, TResponse>.ThrowIfAnyErrors()
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.ThrowIfAnyErrors()
  type: Method
  source:
    id: ThrowIfAnyErrors
    path: D:\SOURCE-CONTROL\FastEndpoints\Src\Documentation\src\Endpoint.cs
    startLine: 273
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\ninterrupt the flow of handler execution and send a 400 bad request with error details if there are any validation failures in the current request. if there are no validation failures, execution will continue past this call.\n"
  example: []
  syntax:
    content: protected void ThrowIfAnyErrors()
    content.vb: Protected Sub ThrowIfAnyErrors
  overload: FastEndpoints.Endpoint`2.ThrowIfAnyErrors*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).ThrowIfAnyErrors()
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).ThrowIfAnyErrors()
- uid: FastEndpoints.Endpoint`2.ThrowError(System.String)
  commentId: M:FastEndpoints.Endpoint`2.ThrowError(System.String)
  id: ThrowError(System.String)
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: ThrowError(String)
  nameWithType: Endpoint<TRequest, TResponse>.ThrowError(String)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.ThrowError(System.String)
  type: Method
  source:
    id: ThrowError
    path: D:\SOURCE-CONTROL\FastEndpoints\Src\Documentation\src\Endpoint.cs
    startLine: 282
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nadd a &quot;GeneralError&quot; to the validation failure list and send back a 400 bad request with error details immediately interrupting handler execution flow. if there are any vallidation failures, no execution will continue past this call.\n"
  example: []
  syntax:
    content: protected void ThrowError(string message)
    parameters:
    - id: message
      type: System.String
      description: the error message
    content.vb: Protected Sub ThrowError(message As String)
  overload: FastEndpoints.Endpoint`2.ThrowError*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).ThrowError(String)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).ThrowError(System.String)
- uid: FastEndpoints.Endpoint`2.ThrowError(System.Linq.Expressions.Expression{Func{`0,System.Object}},System.String)
  commentId: M:FastEndpoints.Endpoint`2.ThrowError(System.Linq.Expressions.Expression{Func{`0,System.Object}},System.String)
  id: ThrowError(System.Linq.Expressions.Expression{Func{`0,System.Object}},System.String)
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: ThrowError(Expression<Func<TRequest, Object>>, String)
  nameWithType: Endpoint<TRequest, TResponse>.ThrowError(Expression<Func<TRequest, Object>>, String)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.ThrowError(System.Linq.Expressions.Expression<Func<TRequest, System.Object>>, System.String)
  type: Method
  source:
    id: ThrowError
    path: D:\SOURCE-CONTROL\FastEndpoints\Src\Documentation\src\Endpoint.cs
    startLine: 293
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nadds an error message for the specified property of the request dto and sends back a 400 bad request with error details immediately interrupting handler execution flow. no execution will continue past this call.\n"
  example: []
  syntax:
    content: protected void ThrowError(Expression<Func<TRequest, object>> property, string errorMessage)
    parameters:
    - id: property
      type: System.Linq.Expressions.Expression{Func{{TRequest},System.Object}}
      description: ''
    - id: errorMessage
      type: System.String
      description: ''
    content.vb: Protected Sub ThrowError(property As Expression(Of Func(Of TRequest, Object)), errorMessage As String)
  overload: FastEndpoints.Endpoint`2.ThrowError*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).ThrowError(Expression(Of Func(Of TRequest, Object)), String)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).ThrowError(System.Linq.Expressions.Expression(Of Func(Of TRequest, System.Object)), System.String)
  name.vb: ThrowError(Expression(Of Func(Of TRequest, Object)), String)
- uid: FastEndpoints.Endpoint`2.SendAsync(`1,System.Int32,CancellationToken)
  commentId: M:FastEndpoints.Endpoint`2.SendAsync(`1,System.Int32,CancellationToken)
  id: SendAsync(`1,System.Int32,CancellationToken)
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: SendAsync(TResponse, Int32, CancellationToken)
  nameWithType: Endpoint<TRequest, TResponse>.SendAsync(TResponse, Int32, CancellationToken)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.SendAsync(TResponse, System.Int32, CancellationToken)
  type: Method
  source:
    id: SendAsync
    path: D:\SOURCE-CONTROL\FastEndpoints\Src\Documentation\src\Endpoint.cs
    startLine: 305
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nsend the supplied response dto serialized as json to the client.\n"
  example: []
  syntax:
    content: protected Task SendAsync(TResponse response, int statusCode = 200, CancellationToken cancellation = null)
    parameters:
    - id: response
      type: '{TResponse}'
      description: the object to serialize to json
    - id: statusCode
      type: System.Int32
      description: optional custom http status code
    - id: cancellation
      type: CancellationToken
      description: optional cancellation token
    return:
      type: Task
    content.vb: Protected Function SendAsync(response As TResponse, statusCode As Integer = 200, cancellation As CancellationToken = Nothing) As Task
  overload: FastEndpoints.Endpoint`2.SendAsync*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).SendAsync(TResponse, Int32, CancellationToken)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).SendAsync(TResponse, System.Int32, CancellationToken)
- uid: FastEndpoints.Endpoint`2.SendOkAsync
  commentId: M:FastEndpoints.Endpoint`2.SendOkAsync
  id: SendOkAsync
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: SendOkAsync()
  nameWithType: Endpoint<TRequest, TResponse>.SendOkAsync()
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.SendOkAsync()
  type: Method
  source:
    id: SendOkAsync
    path: D:\SOURCE-CONTROL\FastEndpoints\Src\Documentation\src\Endpoint.cs
    startLine: 315
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nsend an http 200 ok response without any body\n"
  example: []
  syntax:
    content: protected Task SendOkAsync()
    return:
      type: Task
    content.vb: Protected Function SendOkAsync As Task
  overload: FastEndpoints.Endpoint`2.SendOkAsync*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).SendOkAsync()
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).SendOkAsync()
- uid: FastEndpoints.Endpoint`2.SendErrorsAsync(CancellationToken)
  commentId: M:FastEndpoints.Endpoint`2.SendErrorsAsync(CancellationToken)
  id: SendErrorsAsync(CancellationToken)
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: SendErrorsAsync(CancellationToken)
  nameWithType: Endpoint<TRequest, TResponse>.SendErrorsAsync(CancellationToken)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.SendErrorsAsync(CancellationToken)
  type: Method
  source:
    id: SendErrorsAsync
    path: D:\SOURCE-CONTROL\FastEndpoints\Src\Documentation\src\Endpoint.cs
    startLine: 325
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nsend a 400 bad request with error details of the current validation failures\n"
  example: []
  syntax:
    content: protected Task SendErrorsAsync(CancellationToken cancellation = null)
    parameters:
    - id: cancellation
      type: CancellationToken
      description: ''
    return:
      type: Task
    content.vb: Protected Function SendErrorsAsync(cancellation As CancellationToken = Nothing) As Task
  overload: FastEndpoints.Endpoint`2.SendErrorsAsync*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).SendErrorsAsync(CancellationToken)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).SendErrorsAsync(CancellationToken)
- uid: FastEndpoints.Endpoint`2.SendNoContentAsync
  commentId: M:FastEndpoints.Endpoint`2.SendNoContentAsync
  id: SendNoContentAsync
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: SendNoContentAsync()
  nameWithType: Endpoint<TRequest, TResponse>.SendNoContentAsync()
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.SendNoContentAsync()
  type: Method
  source:
    id: SendNoContentAsync
    path: D:\SOURCE-CONTROL\FastEndpoints\Src\Documentation\src\Endpoint.cs
    startLine: 334
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nsend a 204 no content response\n"
  example: []
  syntax:
    content: protected Task SendNoContentAsync()
    return:
      type: Task
    content.vb: Protected Function SendNoContentAsync As Task
  overload: FastEndpoints.Endpoint`2.SendNoContentAsync*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).SendNoContentAsync()
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).SendNoContentAsync()
- uid: FastEndpoints.Endpoint`2.SendNotFoundAsync
  commentId: M:FastEndpoints.Endpoint`2.SendNotFoundAsync
  id: SendNotFoundAsync
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: SendNotFoundAsync()
  nameWithType: Endpoint<TRequest, TResponse>.SendNotFoundAsync()
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.SendNotFoundAsync()
  type: Method
  source:
    id: SendNotFoundAsync
    path: D:\SOURCE-CONTROL\FastEndpoints\Src\Documentation\src\Endpoint.cs
    startLine: 343
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nsend a 404 not found response\n"
  example: []
  syntax:
    content: protected Task SendNotFoundAsync()
    return:
      type: Task
    content.vb: Protected Function SendNotFoundAsync As Task
  overload: FastEndpoints.Endpoint`2.SendNotFoundAsync*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).SendNotFoundAsync()
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).SendNotFoundAsync()
- uid: FastEndpoints.Endpoint`2.SendUnauthorizedAsync
  commentId: M:FastEndpoints.Endpoint`2.SendUnauthorizedAsync
  id: SendUnauthorizedAsync
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: SendUnauthorizedAsync()
  nameWithType: Endpoint<TRequest, TResponse>.SendUnauthorizedAsync()
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.SendUnauthorizedAsync()
  type: Method
  source:
    id: SendUnauthorizedAsync
    path: D:\SOURCE-CONTROL\FastEndpoints\Src\Documentation\src\Endpoint.cs
    startLine: 352
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nsend a 401 unauthorized response\n"
  example: []
  syntax:
    content: protected Task SendUnauthorizedAsync()
    return:
      type: Task
    content.vb: Protected Function SendUnauthorizedAsync As Task
  overload: FastEndpoints.Endpoint`2.SendUnauthorizedAsync*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).SendUnauthorizedAsync()
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).SendUnauthorizedAsync()
- uid: FastEndpoints.Endpoint`2.SendForbiddenAsync
  commentId: M:FastEndpoints.Endpoint`2.SendForbiddenAsync
  id: SendForbiddenAsync
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: SendForbiddenAsync()
  nameWithType: Endpoint<TRequest, TResponse>.SendForbiddenAsync()
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.SendForbiddenAsync()
  type: Method
  source:
    id: SendForbiddenAsync
    path: D:\SOURCE-CONTROL\FastEndpoints\Src\Documentation\src\Endpoint.cs
    startLine: 361
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nsend a 403 unauthorized response\n"
  example: []
  syntax:
    content: protected Task SendForbiddenAsync()
    return:
      type: Task
    content.vb: Protected Function SendForbiddenAsync As Task
  overload: FastEndpoints.Endpoint`2.SendForbiddenAsync*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).SendForbiddenAsync()
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).SendForbiddenAsync()
- uid: FastEndpoints.Endpoint`2.SendBytesAsync(System.Byte[],System.String,System.String,CancellationToken)
  commentId: M:FastEndpoints.Endpoint`2.SendBytesAsync(System.Byte[],System.String,System.String,CancellationToken)
  id: SendBytesAsync(System.Byte[],System.String,System.String,CancellationToken)
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: SendBytesAsync(Byte[], String, String, CancellationToken)
  nameWithType: Endpoint<TRequest, TResponse>.SendBytesAsync(Byte[], String, String, CancellationToken)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.SendBytesAsync(System.Byte[], System.String, System.String, CancellationToken)
  type: Method
  source:
    id: SendBytesAsync
    path: D:\SOURCE-CONTROL\FastEndpoints\Src\Documentation\src\Endpoint.cs
    startLine: 373
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nsend a byte array to the client\n"
  example: []
  syntax:
    content: protected async Task SendBytesAsync(byte[] bytes, string fileName = null, string contentType = "application/octet-stream", CancellationToken cancellation = null)
    parameters:
    - id: bytes
      type: System.Byte[]
      description: the bytes to send
    - id: fileName
      type: System.String
    - id: contentType
      type: System.String
      description: optional content type to set on the http response
    - id: cancellation
      type: CancellationToken
      description: optional cancellation token
    return:
      type: Task
    content.vb: Protected Function SendBytesAsync(bytes As Byte(), fileName As String = Nothing, contentType As String = "application/octet-stream", cancellation As CancellationToken = Nothing) As Task
  overload: FastEndpoints.Endpoint`2.SendBytesAsync*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).SendBytesAsync(Byte(), String, String, CancellationToken)
  modifiers.csharp:
  - protected
  - async
  modifiers.vb:
  - Protected
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).SendBytesAsync(System.Byte(), System.String, System.String, CancellationToken)
  name.vb: SendBytesAsync(Byte(), String, String, CancellationToken)
- uid: FastEndpoints.Endpoint`2.SendFileAsync(FileInfo,System.String,CancellationToken)
  commentId: M:FastEndpoints.Endpoint`2.SendFileAsync(FileInfo,System.String,CancellationToken)
  id: SendFileAsync(FileInfo,System.String,CancellationToken)
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: SendFileAsync(FileInfo, String, CancellationToken)
  nameWithType: Endpoint<TRequest, TResponse>.SendFileAsync(FileInfo, String, CancellationToken)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.SendFileAsync(FileInfo, System.String, CancellationToken)
  type: Method
  source:
    id: SendFileAsync
    path: D:\SOURCE-CONTROL\FastEndpoints\Src\Documentation\src\Endpoint.cs
    startLine: 385
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nsend a file to the client\n"
  example: []
  syntax:
    content: protected Task SendFileAsync(FileInfo fileInfo, string contentType = "application/octet-stream", CancellationToken cancellation = null)
    parameters:
    - id: fileInfo
      type: FileInfo
      description: ''
    - id: contentType
      type: System.String
      description: optional content type to set on the http response
    - id: cancellation
      type: CancellationToken
      description: optional cancellation token
    return:
      type: Task
    content.vb: Protected Function SendFileAsync(fileInfo As FileInfo, contentType As String = "application/octet-stream", cancellation As CancellationToken = Nothing) As Task
  overload: FastEndpoints.Endpoint`2.SendFileAsync*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).SendFileAsync(FileInfo, String, CancellationToken)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).SendFileAsync(FileInfo, System.String, CancellationToken)
- uid: FastEndpoints.Endpoint`2.SendStreamAsync(Stream,System.String,System.Nullable{System.Int64},System.String,CancellationToken)
  commentId: M:FastEndpoints.Endpoint`2.SendStreamAsync(Stream,System.String,System.Nullable{System.Int64},System.String,CancellationToken)
  id: SendStreamAsync(Stream,System.String,System.Nullable{System.Int64},System.String,CancellationToken)
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: SendStreamAsync(Stream, String, Nullable<Int64>, String, CancellationToken)
  nameWithType: Endpoint<TRequest, TResponse>.SendStreamAsync(Stream, String, Nullable<Int64>, String, CancellationToken)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.SendStreamAsync(Stream, System.String, System.Nullable<System.Int64>, System.String, CancellationToken)
  type: Method
  source:
    id: SendStreamAsync
    path: D:\SOURCE-CONTROL\FastEndpoints\Src\Documentation\src\Endpoint.cs
    startLine: 398
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nsend the contents of a stream to the client\n"
  example: []
  syntax:
    content: protected Task SendStreamAsync(Stream stream, string fileName = null, long? fileLengthBytes = null, string contentType = "application/octet-stream", CancellationToken cancellation = null)
    parameters:
    - id: stream
      type: Stream
      description: the stream to read the data from
    - id: fileName
      type: System.String
      description: and optional file name to set in the content-disposition header
    - id: fileLengthBytes
      type: System.Nullable{System.Int64}
      description: optional total size of the file/stream
    - id: contentType
      type: System.String
      description: optional content type to set on the http response
    - id: cancellation
      type: CancellationToken
      description: optional cancellation token
    return:
      type: Task
    content.vb: Protected Function SendStreamAsync(stream As Stream, fileName As String = Nothing, fileLengthBytes As Long? = Nothing, contentType As String = "application/octet-stream", cancellation As CancellationToken = Nothing) As Task
  overload: FastEndpoints.Endpoint`2.SendStreamAsync*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).SendStreamAsync(Stream, String, Nullable(Of Int64), String, CancellationToken)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).SendStreamAsync(Stream, System.String, System.Nullable(Of System.Int64), System.String, CancellationToken)
  name.vb: SendStreamAsync(Stream, String, Nullable(Of Int64), String, CancellationToken)
- uid: FastEndpoints.Endpoint`2.PublishAsync``1(``0,FastEndpoints.Mode,CancellationToken)
  commentId: M:FastEndpoints.Endpoint`2.PublishAsync``1(``0,FastEndpoints.Mode,CancellationToken)
  id: PublishAsync``1(``0,FastEndpoints.Mode,CancellationToken)
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: PublishAsync<TEvent>(TEvent, Mode, CancellationToken)
  nameWithType: Endpoint<TRequest, TResponse>.PublishAsync<TEvent>(TEvent, Mode, CancellationToken)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.PublishAsync<TEvent>(TEvent, FastEndpoints.Mode, CancellationToken)
  type: Method
  source:
    id: PublishAsync
    path: D:\SOURCE-CONTROL\FastEndpoints\Src\Documentation\src\Endpoint.cs
    startLine: 420
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\npublish the given model/dto to all the subscribers of the event notification\n"
  example: []
  syntax:
    content: >-
      protected Task PublishAsync<TEvent>(TEvent eventModel, Mode waitMode = Mode.WaitForAll, CancellationToken cancellation = null)

          where TEvent : class
    parameters:
    - id: eventModel
      type: '{TEvent}'
      description: the notification event model/dto to publish
    - id: waitMode
      type: FastEndpoints.Mode
      description: specify whether to wait for none, any or all of the subscribers to complete their work
    - id: cancellation
      type: CancellationToken
      description: an optional cancellation token
    typeParameters:
    - id: TEvent
    return:
      type: Task
      description: >-
        a Task that matches the wait mode specified.

        Mode.WaitForNone returns an already completed Task (fire and forget).

        Mode.WaitForAny returns a Task that will complete when any of the subscribers complete their work.

        Mode.WaitForAll return a Task that will complete only when all of the subscribers complete their work.
    content.vb: Protected Function PublishAsync(Of TEvent As Class)(eventModel As TEvent, waitMode As Mode = Mode.WaitForAll, cancellation As CancellationToken = Nothing) As Task
  overload: FastEndpoints.Endpoint`2.PublishAsync*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).PublishAsync(Of TEvent)(TEvent, Mode, CancellationToken)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).PublishAsync(Of TEvent)(TEvent, FastEndpoints.Mode, CancellationToken)
  name.vb: PublishAsync(Of TEvent)(TEvent, Mode, CancellationToken)
- uid: FastEndpoints.Endpoint`2.TryResolve``1
  commentId: M:FastEndpoints.Endpoint`2.TryResolve``1
  id: TryResolve``1
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: TryResolve<TService>()
  nameWithType: Endpoint<TRequest, TResponse>.TryResolve<TService>()
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.TryResolve<TService>()
  type: Method
  source:
    id: TryResolve
    path: D:\SOURCE-CONTROL\FastEndpoints\Src\Documentation\src\Endpoint.cs
    startLine: 427
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\ntry to resolve an instance for the given type from the dependency injection container. will return null if unresolvable.\n"
  example: []
  syntax:
    content: protected TService TryResolve<TService>()
    typeParameters:
    - id: TService
      description: the type of the service to resolve
    return:
      type: '{TService}'
    content.vb: Protected Function TryResolve(Of TService) As TService
  overload: FastEndpoints.Endpoint`2.TryResolve*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).TryResolve(Of TService)()
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).TryResolve(Of TService)()
  name.vb: TryResolve(Of TService)()
- uid: FastEndpoints.Endpoint`2.TryResolve(Type)
  commentId: M:FastEndpoints.Endpoint`2.TryResolve(Type)
  id: TryResolve(Type)
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: TryResolve(Type)
  nameWithType: Endpoint<TRequest, TResponse>.TryResolve(Type)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.TryResolve(Type)
  type: Method
  source:
    id: TryResolve
    path: D:\SOURCE-CONTROL\FastEndpoints\Src\Documentation\src\Endpoint.cs
    startLine: 433
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\ntry to resolve an instance for the given type from the dependency injection container. will return null if unresolvable.\n"
  example: []
  syntax:
    content: protected object TryResolve(Type typeOfService)
    parameters:
    - id: typeOfService
      type: Type
      description: the type of the service to resolve
    return:
      type: System.Object
    content.vb: Protected Function TryResolve(typeOfService As Type) As Object
  overload: FastEndpoints.Endpoint`2.TryResolve*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).TryResolve(Type)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).TryResolve(Type)
- uid: FastEndpoints.Endpoint`2.Resolve``1
  commentId: M:FastEndpoints.Endpoint`2.Resolve``1
  id: Resolve``1
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: Resolve<TService>()
  nameWithType: Endpoint<TRequest, TResponse>.Resolve<TService>()
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Resolve<TService>()
  type: Method
  source:
    id: Resolve
    path: D:\SOURCE-CONTROL\FastEndpoints\Src\Documentation\src\Endpoint.cs
    startLine: 440
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nresolve an instance for the given type from the dependency injection container. will throw if unresolvable.\n"
  example: []
  syntax:
    content: protected TService Resolve<TService>()
    typeParameters:
    - id: TService
      description: the type of the service to resolve
    return:
      type: '{TService}'
    content.vb: Protected Function Resolve(Of TService) As TService
  overload: FastEndpoints.Endpoint`2.Resolve*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Resolve(Of TService)()
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Resolve(Of TService)()
  name.vb: Resolve(Of TService)()
- uid: FastEndpoints.Endpoint`2.Resolve(Type)
  commentId: M:FastEndpoints.Endpoint`2.Resolve(Type)
  id: Resolve(Type)
  parent: FastEndpoints.Endpoint`2
  langs:
  - csharp
  - vb
  name: Resolve(Type)
  nameWithType: Endpoint<TRequest, TResponse>.Resolve(Type)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Resolve(Type)
  type: Method
  source:
    id: Resolve
    path: D:\SOURCE-CONTROL\FastEndpoints\Src\Documentation\src\Endpoint.cs
    startLine: 447
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nresolve an instance for the given type from the dependency injection container. will throw if unresolvable.\n"
  example: []
  syntax:
    content: protected object Resolve(Type typeOfService)
    parameters:
    - id: typeOfService
      type: Type
      description: the type of the service to resolve
    return:
      type: System.Object
    content.vb: Protected Function Resolve(typeOfService As Type) As Object
  overload: FastEndpoints.Endpoint`2.Resolve*
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Resolve(Type)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Resolve(Type)
references:
- uid: FastEndpoints
  commentId: N:FastEndpoints
  name: FastEndpoints
  nameWithType: FastEndpoints
  fullName: FastEndpoints
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: FastEndpoints.BaseEndpoint
  commentId: T:FastEndpoints.BaseEndpoint
  parent: FastEndpoints
  name: BaseEndpoint
  nameWithType: BaseEndpoint
  fullName: FastEndpoints.BaseEndpoint
- uid: FastEndpoints.IEndpoint
  commentId: T:FastEndpoints.IEndpoint
  parent: FastEndpoints
  name: IEndpoint
  nameWithType: IEndpoint
  fullName: FastEndpoints.IEndpoint
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: FastEndpoints.Endpoint`2.HttpContext*
  commentId: Overload:FastEndpoints.Endpoint`2.HttpContext
  name: HttpContext
  nameWithType: Endpoint<TRequest, TResponse>.HttpContext
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.HttpContext
  nameWithType.vb: Endpoint(Of TRequest, TResponse).HttpContext
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).HttpContext
- uid: Microsoft.AspNetCore.Http.HttpContext
  commentId: T:Microsoft.AspNetCore.Http.HttpContext
  parent: Microsoft.AspNetCore.Http
  isExternal: true
  name: HttpContext
  nameWithType: HttpContext
  fullName: Microsoft.AspNetCore.Http.HttpContext
- uid: Microsoft.AspNetCore.Http
  commentId: N:Microsoft.AspNetCore.Http
  isExternal: true
  name: Microsoft.AspNetCore.Http
  nameWithType: Microsoft.AspNetCore.Http
  fullName: Microsoft.AspNetCore.Http
- uid: FastEndpoints.Endpoint`2.User*
  commentId: Overload:FastEndpoints.Endpoint`2.User
  name: User
  nameWithType: Endpoint<TRequest, TResponse>.User
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.User
  nameWithType.vb: Endpoint(Of TRequest, TResponse).User
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).User
- uid: System.Security.Claims.ClaimsPrincipal
  commentId: T:System.Security.Claims.ClaimsPrincipal
  parent: System.Security.Claims
  isExternal: true
  name: ClaimsPrincipal
  nameWithType: ClaimsPrincipal
  fullName: System.Security.Claims.ClaimsPrincipal
- uid: System.Security.Claims
  commentId: N:System.Security.Claims
  isExternal: true
  name: System.Security.Claims
  nameWithType: System.Security.Claims
  fullName: System.Security.Claims
- uid: FastEndpoints.Endpoint`2.Response*
  commentId: Overload:FastEndpoints.Endpoint`2.Response
  name: Response
  nameWithType: Endpoint<TRequest, TResponse>.Response
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Response
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Response
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Response
- uid: '{TResponse}'
  commentId: '!:TResponse'
  definition: TResponse
  name: TResponse
  nameWithType: TResponse
  fullName: TResponse
- uid: TResponse
  name: TResponse
  nameWithType: TResponse
  fullName: TResponse
- uid: FastEndpoints.Endpoint`2.Config*
  commentId: Overload:FastEndpoints.Endpoint`2.Config
  name: Config
  nameWithType: Endpoint<TRequest, TResponse>.Config
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Config
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Config
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Config
- uid: Microsoft.Extensions.Configuration.IConfiguration
  commentId: T:Microsoft.Extensions.Configuration.IConfiguration
  parent: Microsoft.Extensions.Configuration
  isExternal: true
  name: IConfiguration
  nameWithType: IConfiguration
  fullName: Microsoft.Extensions.Configuration.IConfiguration
- uid: Microsoft.Extensions.Configuration
  commentId: N:Microsoft.Extensions.Configuration
  isExternal: true
  name: Microsoft.Extensions.Configuration
  nameWithType: Microsoft.Extensions.Configuration
  fullName: Microsoft.Extensions.Configuration
- uid: FastEndpoints.Endpoint`2.Env*
  commentId: Overload:FastEndpoints.Endpoint`2.Env
  name: Env
  nameWithType: Endpoint<TRequest, TResponse>.Env
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Env
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Env
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Env
- uid: Microsoft.AspNetCore.Hosting.IWebHostEnvironment
  commentId: T:Microsoft.AspNetCore.Hosting.IWebHostEnvironment
  parent: Microsoft.AspNetCore.Hosting
  isExternal: true
  name: IWebHostEnvironment
  nameWithType: IWebHostEnvironment
  fullName: Microsoft.AspNetCore.Hosting.IWebHostEnvironment
- uid: Microsoft.AspNetCore.Hosting
  commentId: N:Microsoft.AspNetCore.Hosting
  isExternal: true
  name: Microsoft.AspNetCore.Hosting
  nameWithType: Microsoft.AspNetCore.Hosting
  fullName: Microsoft.AspNetCore.Hosting
- uid: FastEndpoints.Endpoint`2.Logger*
  commentId: Overload:FastEndpoints.Endpoint`2.Logger
  name: Logger
  nameWithType: Endpoint<TRequest, TResponse>.Logger
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Logger
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Logger
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Logger
- uid: Microsoft.Extensions.Logging.ILogger
  commentId: T:Microsoft.Extensions.Logging.ILogger
  parent: Microsoft.Extensions.Logging
  isExternal: true
  name: ILogger
  nameWithType: ILogger
  fullName: Microsoft.Extensions.Logging.ILogger
- uid: Microsoft.Extensions.Logging
  commentId: N:Microsoft.Extensions.Logging
  isExternal: true
  name: Microsoft.Extensions.Logging
  nameWithType: Microsoft.Extensions.Logging
  fullName: Microsoft.Extensions.Logging
- uid: FastEndpoints.Endpoint`2.BaseURL*
  commentId: Overload:FastEndpoints.Endpoint`2.BaseURL
  name: BaseURL
  nameWithType: Endpoint<TRequest, TResponse>.BaseURL
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.BaseURL
  nameWithType.vb: Endpoint(Of TRequest, TResponse).BaseURL
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).BaseURL
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: FastEndpoints.Endpoint`2.HttpMethod*
  commentId: Overload:FastEndpoints.Endpoint`2.HttpMethod
  name: HttpMethod
  nameWithType: Endpoint<TRequest, TResponse>.HttpMethod
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.HttpMethod
  nameWithType.vb: Endpoint(Of TRequest, TResponse).HttpMethod
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).HttpMethod
- uid: FastEndpoints.Http
  commentId: T:FastEndpoints.Http
  parent: FastEndpoints
  name: Http
  nameWithType: Http
  fullName: FastEndpoints.Http
- uid: FastEndpoints.Endpoint`2.ValidationFailures*
  commentId: Overload:FastEndpoints.Endpoint`2.ValidationFailures
  name: ValidationFailures
  nameWithType: Endpoint<TRequest, TResponse>.ValidationFailures
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.ValidationFailures
  nameWithType.vb: Endpoint(Of TRequest, TResponse).ValidationFailures
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).ValidationFailures
- uid: List{ValidationFailure}
  commentId: '!:List{ValidationFailure}'
  definition: List`1
  name: List<ValidationFailure>
  nameWithType: List<ValidationFailure>
  fullName: List<ValidationFailure>
  nameWithType.vb: List(Of ValidationFailure)
  fullName.vb: List(Of ValidationFailure)
  name.vb: List(Of ValidationFailure)
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: ValidationFailure
    name: ValidationFailure
    nameWithType: ValidationFailure
    fullName: ValidationFailure
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: ValidationFailure
    name: ValidationFailure
    nameWithType: ValidationFailure
    fullName: ValidationFailure
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: List`1
  isExternal: true
  name: List<>
  nameWithType: List<>
  fullName: List<>
  nameWithType.vb: List(Of )
  fullName.vb: List(Of )
  name.vb: List(Of )
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint`2.ValidationFailed*
  commentId: Overload:FastEndpoints.Endpoint`2.ValidationFailed
  name: ValidationFailed
  nameWithType: Endpoint<TRequest, TResponse>.ValidationFailed
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.ValidationFailed
  nameWithType.vb: Endpoint(Of TRequest, TResponse).ValidationFailed
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).ValidationFailed
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: FastEndpoints.Endpoint`2.Form*
  commentId: Overload:FastEndpoints.Endpoint`2.Form
  name: Form
  nameWithType: Endpoint<TRequest, TResponse>.Form
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Form
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Form
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Form
- uid: Microsoft.AspNetCore.Http.IFormCollection
  commentId: T:Microsoft.AspNetCore.Http.IFormCollection
  parent: Microsoft.AspNetCore.Http
  isExternal: true
  name: IFormCollection
  nameWithType: IFormCollection
  fullName: Microsoft.AspNetCore.Http.IFormCollection
- uid: FastEndpoints.Endpoint`2.Files*
  commentId: Overload:FastEndpoints.Endpoint`2.Files
  name: Files
  nameWithType: Endpoint<TRequest, TResponse>.Files
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Files
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Files
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Files
- uid: Microsoft.AspNetCore.Http.IFormFileCollection
  commentId: T:Microsoft.AspNetCore.Http.IFormFileCollection
  parent: Microsoft.AspNetCore.Http
  isExternal: true
  name: IFormFileCollection
  nameWithType: IFormFileCollection
  fullName: Microsoft.AspNetCore.Http.IFormFileCollection
- uid: FastEndpoints.Endpoint`2.Routes*
  commentId: Overload:FastEndpoints.Endpoint`2.Routes
  name: Routes
  nameWithType: Endpoint<TRequest, TResponse>.Routes
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Routes
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Routes
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Routes
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: FastEndpoints.Endpoint`2.Verbs*
  commentId: Overload:FastEndpoints.Endpoint`2.Verbs
  name: Verbs
  nameWithType: Endpoint<TRequest, TResponse>.Verbs
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Verbs
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Verbs
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Verbs
- uid: FastEndpoints.Http[]
  isExternal: true
  name: Http[]
  nameWithType: Http[]
  fullName: FastEndpoints.Http[]
  nameWithType.vb: Http()
  fullName.vb: FastEndpoints.Http()
  name.vb: Http()
  spec.csharp:
  - uid: FastEndpoints.Http
    name: Http
    nameWithType: Http
    fullName: FastEndpoints.Http
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: FastEndpoints.Http
    name: Http
    nameWithType: Http
    fullName: FastEndpoints.Http
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: FastEndpoints.Endpoint`2.DontThrowIfValidationFails*
  commentId: Overload:FastEndpoints.Endpoint`2.DontThrowIfValidationFails
  name: DontThrowIfValidationFails
  nameWithType: Endpoint<TRequest, TResponse>.DontThrowIfValidationFails
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.DontThrowIfValidationFails
  nameWithType.vb: Endpoint(Of TRequest, TResponse).DontThrowIfValidationFails
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).DontThrowIfValidationFails
- uid: FastEndpoints.Endpoint`2.AllowAnnonymous*
  commentId: Overload:FastEndpoints.Endpoint`2.AllowAnnonymous
  name: AllowAnnonymous
  nameWithType: Endpoint<TRequest, TResponse>.AllowAnnonymous
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.AllowAnnonymous
  nameWithType.vb: Endpoint(Of TRequest, TResponse).AllowAnnonymous
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).AllowAnnonymous
- uid: FastEndpoints.Endpoint`2.AllowFileUploads*
  commentId: Overload:FastEndpoints.Endpoint`2.AllowFileUploads
  name: AllowFileUploads
  nameWithType: Endpoint<TRequest, TResponse>.AllowFileUploads
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.AllowFileUploads
  nameWithType.vb: Endpoint(Of TRequest, TResponse).AllowFileUploads
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).AllowFileUploads
- uid: FastEndpoints.Endpoint`2.Policies*
  commentId: Overload:FastEndpoints.Endpoint`2.Policies
  name: Policies
  nameWithType: Endpoint<TRequest, TResponse>.Policies
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Policies
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Policies
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Policies
- uid: FastEndpoints.Endpoint`2.Roles*
  commentId: Overload:FastEndpoints.Endpoint`2.Roles
  name: Roles
  nameWithType: Endpoint<TRequest, TResponse>.Roles
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Roles
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Roles
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Roles
- uid: FastEndpoints.Endpoint`2.Permissions*
  commentId: Overload:FastEndpoints.Endpoint`2.Permissions
  name: Permissions
  nameWithType: Endpoint<TRequest, TResponse>.Permissions
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Permissions
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Permissions
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Permissions
- uid: FastEndpoints.Endpoint`2.AnyPermission*
  commentId: Overload:FastEndpoints.Endpoint`2.AnyPermission
  name: AnyPermission
  nameWithType: Endpoint<TRequest, TResponse>.AnyPermission
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.AnyPermission
  nameWithType.vb: Endpoint(Of TRequest, TResponse).AnyPermission
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).AnyPermission
- uid: FastEndpoints.Endpoint`2.Claims*
  commentId: Overload:FastEndpoints.Endpoint`2.Claims
  name: Claims
  nameWithType: Endpoint<TRequest, TResponse>.Claims
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Claims
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Claims
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Claims
- uid: FastEndpoints.Endpoint`2.AnyClaim*
  commentId: Overload:FastEndpoints.Endpoint`2.AnyClaim
  name: AnyClaim
  nameWithType: Endpoint<TRequest, TResponse>.AnyClaim
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.AnyClaim
  nameWithType.vb: Endpoint(Of TRequest, TResponse).AnyClaim
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).AnyClaim
- uid: FastEndpoints.Endpoint`2.PreProcessors*
  commentId: Overload:FastEndpoints.Endpoint`2.PreProcessors
  name: PreProcessors
  nameWithType: Endpoint<TRequest, TResponse>.PreProcessors
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.PreProcessors
  nameWithType.vb: Endpoint(Of TRequest, TResponse).PreProcessors
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).PreProcessors
- uid: FastEndpoints.IPreProcessor{{TRequest}}[]
  isExternal: true
  name: IPreProcessor<TRequest>[]
  nameWithType: IPreProcessor<TRequest>[]
  fullName: FastEndpoints.IPreProcessor<TRequest>[]
  nameWithType.vb: IPreProcessor(Of TRequest)()
  fullName.vb: FastEndpoints.IPreProcessor(Of TRequest)()
  name.vb: IPreProcessor(Of TRequest)()
  spec.csharp:
  - uid: FastEndpoints.IPreProcessor`1
    name: IPreProcessor
    nameWithType: IPreProcessor
    fullName: FastEndpoints.IPreProcessor
  - name: <
    nameWithType: <
    fullName: <
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: FastEndpoints.IPreProcessor`1
    name: IPreProcessor
    nameWithType: IPreProcessor
    fullName: FastEndpoints.IPreProcessor
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: )
    nameWithType: )
    fullName: )
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: FastEndpoints.Endpoint`2.PostProcessors*
  commentId: Overload:FastEndpoints.Endpoint`2.PostProcessors
  name: PostProcessors
  nameWithType: Endpoint<TRequest, TResponse>.PostProcessors
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.PostProcessors
  nameWithType.vb: Endpoint(Of TRequest, TResponse).PostProcessors
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).PostProcessors
- uid: FastEndpoints.IPostProcessor{{TRequest},{TResponse}}[]
  isExternal: true
  name: IPostProcessor<TRequest, TResponse>[]
  nameWithType: IPostProcessor<TRequest, TResponse>[]
  fullName: FastEndpoints.IPostProcessor<TRequest, TResponse>[]
  nameWithType.vb: IPostProcessor(Of TRequest, TResponse)()
  fullName.vb: FastEndpoints.IPostProcessor(Of TRequest, TResponse)()
  name.vb: IPostProcessor(Of TRequest, TResponse)()
  spec.csharp:
  - uid: FastEndpoints.IPostProcessor`2
    name: IPostProcessor
    nameWithType: IPostProcessor
    fullName: FastEndpoints.IPostProcessor
  - name: <
    nameWithType: <
    fullName: <
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: FastEndpoints.IPostProcessor`2
    name: IPostProcessor
    nameWithType: IPostProcessor
    fullName: FastEndpoints.IPostProcessor
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: )
    nameWithType: )
    fullName: )
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: FastEndpoints.Endpoint`2.Options*
  commentId: Overload:FastEndpoints.Endpoint`2.Options
  name: Options
  nameWithType: Endpoint<TRequest, TResponse>.Options
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Options
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Options
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Options
- uid: Action{Microsoft.AspNetCore.Builder.DelegateEndpointConventionBuilder}
  commentId: '!:Action{Microsoft.AspNetCore.Builder.DelegateEndpointConventionBuilder}'
  definition: Action`1
  name: Action<DelegateEndpointConventionBuilder>
  nameWithType: Action<DelegateEndpointConventionBuilder>
  fullName: Action<Microsoft.AspNetCore.Builder.DelegateEndpointConventionBuilder>
  nameWithType.vb: Action(Of DelegateEndpointConventionBuilder)
  fullName.vb: Action(Of Microsoft.AspNetCore.Builder.DelegateEndpointConventionBuilder)
  name.vb: Action(Of DelegateEndpointConventionBuilder)
  spec.csharp:
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Builder.DelegateEndpointConventionBuilder
    name: DelegateEndpointConventionBuilder
    nameWithType: DelegateEndpointConventionBuilder
    fullName: Microsoft.AspNetCore.Builder.DelegateEndpointConventionBuilder
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Builder.DelegateEndpointConventionBuilder
    name: DelegateEndpointConventionBuilder
    nameWithType: DelegateEndpointConventionBuilder
    fullName: Microsoft.AspNetCore.Builder.DelegateEndpointConventionBuilder
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Action`1
  commentId: '!:Action`1'
  isExternal: true
  name: Action<>
  nameWithType: Action<>
  fullName: Action<>
  nameWithType.vb: Action(Of )
  fullName.vb: Action(Of )
  name.vb: Action(Of )
  spec.csharp:
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint`2.HandleAsync*
  commentId: Overload:FastEndpoints.Endpoint`2.HandleAsync
  name: HandleAsync
  nameWithType: Endpoint<TRequest, TResponse>.HandleAsync
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.HandleAsync
  nameWithType.vb: Endpoint(Of TRequest, TResponse).HandleAsync
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).HandleAsync
- uid: '{TRequest}'
  commentId: '!:TRequest'
  definition: TRequest
  name: TRequest
  nameWithType: TRequest
  fullName: TRequest
- uid: CancellationToken
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: CancellationToken
- uid: Task
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: Task
- uid: TRequest
  name: TRequest
  nameWithType: TRequest
  fullName: TRequest
- uid: FastEndpoints.Endpoint`2.AddError*
  commentId: Overload:FastEndpoints.Endpoint`2.AddError
  name: AddError
  nameWithType: Endpoint<TRequest, TResponse>.AddError
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.AddError
  nameWithType.vb: Endpoint(Of TRequest, TResponse).AddError
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).AddError
- uid: System.Linq.Expressions.Expression{Func{{TRequest},System.Object}}
  commentId: T:System.Linq.Expressions.Expression{Func{`0,System.Object}}
  parent: System.Linq.Expressions
  definition: System.Linq.Expressions.Expression`1
  name: Expression<Func<TRequest, Object>>
  nameWithType: Expression<Func<TRequest, Object>>
  fullName: System.Linq.Expressions.Expression<Func<TRequest, System.Object>>
  nameWithType.vb: Expression(Of Func(Of TRequest, Object))
  fullName.vb: System.Linq.Expressions.Expression(Of Func(Of TRequest, System.Object))
  name.vb: Expression(Of Func(Of TRequest, Object))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.Expressions.Expression`1
  commentId: T:System.Linq.Expressions.Expression`1
  isExternal: true
  name: Expression<TDelegate>
  nameWithType: Expression<TDelegate>
  fullName: System.Linq.Expressions.Expression<TDelegate>
  nameWithType.vb: Expression(Of TDelegate)
  fullName.vb: System.Linq.Expressions.Expression(Of TDelegate)
  name.vb: Expression(Of TDelegate)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TDelegate
    nameWithType: TDelegate
    fullName: TDelegate
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDelegate
    nameWithType: TDelegate
    fullName: TDelegate
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.Expressions
  commentId: N:System.Linq.Expressions
  isExternal: true
  name: System.Linq.Expressions
  nameWithType: System.Linq.Expressions
  fullName: System.Linq.Expressions
- uid: FastEndpoints.Endpoint`2.ThrowIfAnyErrors*
  commentId: Overload:FastEndpoints.Endpoint`2.ThrowIfAnyErrors
  name: ThrowIfAnyErrors
  nameWithType: Endpoint<TRequest, TResponse>.ThrowIfAnyErrors
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.ThrowIfAnyErrors
  nameWithType.vb: Endpoint(Of TRequest, TResponse).ThrowIfAnyErrors
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).ThrowIfAnyErrors
- uid: FastEndpoints.Endpoint`2.ThrowError*
  commentId: Overload:FastEndpoints.Endpoint`2.ThrowError
  name: ThrowError
  nameWithType: Endpoint<TRequest, TResponse>.ThrowError
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.ThrowError
  nameWithType.vb: Endpoint(Of TRequest, TResponse).ThrowError
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).ThrowError
- uid: FastEndpoints.Endpoint`2.SendAsync*
  commentId: Overload:FastEndpoints.Endpoint`2.SendAsync
  name: SendAsync
  nameWithType: Endpoint<TRequest, TResponse>.SendAsync
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.SendAsync
  nameWithType.vb: Endpoint(Of TRequest, TResponse).SendAsync
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).SendAsync
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: FastEndpoints.Endpoint`2.SendOkAsync*
  commentId: Overload:FastEndpoints.Endpoint`2.SendOkAsync
  name: SendOkAsync
  nameWithType: Endpoint<TRequest, TResponse>.SendOkAsync
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.SendOkAsync
  nameWithType.vb: Endpoint(Of TRequest, TResponse).SendOkAsync
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).SendOkAsync
- uid: FastEndpoints.Endpoint`2.SendErrorsAsync*
  commentId: Overload:FastEndpoints.Endpoint`2.SendErrorsAsync
  name: SendErrorsAsync
  nameWithType: Endpoint<TRequest, TResponse>.SendErrorsAsync
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.SendErrorsAsync
  nameWithType.vb: Endpoint(Of TRequest, TResponse).SendErrorsAsync
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).SendErrorsAsync
- uid: FastEndpoints.Endpoint`2.SendNoContentAsync*
  commentId: Overload:FastEndpoints.Endpoint`2.SendNoContentAsync
  name: SendNoContentAsync
  nameWithType: Endpoint<TRequest, TResponse>.SendNoContentAsync
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.SendNoContentAsync
  nameWithType.vb: Endpoint(Of TRequest, TResponse).SendNoContentAsync
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).SendNoContentAsync
- uid: FastEndpoints.Endpoint`2.SendNotFoundAsync*
  commentId: Overload:FastEndpoints.Endpoint`2.SendNotFoundAsync
  name: SendNotFoundAsync
  nameWithType: Endpoint<TRequest, TResponse>.SendNotFoundAsync
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.SendNotFoundAsync
  nameWithType.vb: Endpoint(Of TRequest, TResponse).SendNotFoundAsync
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).SendNotFoundAsync
- uid: FastEndpoints.Endpoint`2.SendUnauthorizedAsync*
  commentId: Overload:FastEndpoints.Endpoint`2.SendUnauthorizedAsync
  name: SendUnauthorizedAsync
  nameWithType: Endpoint<TRequest, TResponse>.SendUnauthorizedAsync
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.SendUnauthorizedAsync
  nameWithType.vb: Endpoint(Of TRequest, TResponse).SendUnauthorizedAsync
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).SendUnauthorizedAsync
- uid: FastEndpoints.Endpoint`2.SendForbiddenAsync*
  commentId: Overload:FastEndpoints.Endpoint`2.SendForbiddenAsync
  name: SendForbiddenAsync
  nameWithType: Endpoint<TRequest, TResponse>.SendForbiddenAsync
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.SendForbiddenAsync
  nameWithType.vb: Endpoint(Of TRequest, TResponse).SendForbiddenAsync
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).SendForbiddenAsync
- uid: FastEndpoints.Endpoint`2.SendBytesAsync*
  commentId: Overload:FastEndpoints.Endpoint`2.SendBytesAsync
  name: SendBytesAsync
  nameWithType: Endpoint<TRequest, TResponse>.SendBytesAsync
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.SendBytesAsync
  nameWithType.vb: Endpoint(Of TRequest, TResponse).SendBytesAsync
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).SendBytesAsync
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: FastEndpoints.Endpoint`2.SendFileAsync*
  commentId: Overload:FastEndpoints.Endpoint`2.SendFileAsync
  name: SendFileAsync
  nameWithType: Endpoint<TRequest, TResponse>.SendFileAsync
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.SendFileAsync
  nameWithType.vb: Endpoint(Of TRequest, TResponse).SendFileAsync
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).SendFileAsync
- uid: FileInfo
  commentId: '!:FileInfo'
  isExternal: true
  name: FileInfo
  nameWithType: FileInfo
  fullName: FileInfo
- uid: FastEndpoints.Endpoint`2.SendStreamAsync*
  commentId: Overload:FastEndpoints.Endpoint`2.SendStreamAsync
  name: SendStreamAsync
  nameWithType: Endpoint<TRequest, TResponse>.SendStreamAsync
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.SendStreamAsync
  nameWithType.vb: Endpoint(Of TRequest, TResponse).SendStreamAsync
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).SendStreamAsync
- uid: Stream
  commentId: '!:Stream'
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: Stream
- uid: System.Nullable{System.Int64}
  commentId: T:System.Nullable{System.Int64}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int64>
  nameWithType: Nullable<Int64>
  fullName: System.Nullable<System.Int64>
  nameWithType.vb: Nullable(Of Int64)
  fullName.vb: System.Nullable(Of System.Int64)
  name.vb: Nullable(Of Int64)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint`2.PublishAsync*
  commentId: Overload:FastEndpoints.Endpoint`2.PublishAsync
  name: PublishAsync
  nameWithType: Endpoint<TRequest, TResponse>.PublishAsync
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.PublishAsync
  nameWithType.vb: Endpoint(Of TRequest, TResponse).PublishAsync
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).PublishAsync
- uid: '{TEvent}'
  commentId: '!:TEvent'
  definition: TEvent
  name: TEvent
  nameWithType: TEvent
  fullName: TEvent
- uid: FastEndpoints.Mode
  commentId: T:FastEndpoints.Mode
  parent: FastEndpoints
  name: Mode
  nameWithType: Mode
  fullName: FastEndpoints.Mode
- uid: TEvent
  name: TEvent
  nameWithType: TEvent
  fullName: TEvent
- uid: FastEndpoints.Endpoint`2.TryResolve*
  commentId: Overload:FastEndpoints.Endpoint`2.TryResolve
  name: TryResolve
  nameWithType: Endpoint<TRequest, TResponse>.TryResolve
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.TryResolve
  nameWithType.vb: Endpoint(Of TRequest, TResponse).TryResolve
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).TryResolve
- uid: '{TService}'
  commentId: '!:TService'
  definition: TService
  name: TService
  nameWithType: TService
  fullName: TService
- uid: TService
  name: TService
  nameWithType: TService
  fullName: TService
- uid: Type
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: Type
- uid: FastEndpoints.Endpoint`2.Resolve*
  commentId: Overload:FastEndpoints.Endpoint`2.Resolve
  name: Resolve
  nameWithType: Endpoint<TRequest, TResponse>.Resolve
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Resolve
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Resolve
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Resolve
