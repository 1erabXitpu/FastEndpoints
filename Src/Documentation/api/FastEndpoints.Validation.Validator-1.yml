### YamlMime:ManagedReference
items:
- uid: FastEndpoints.Validation.Validator`1
  commentId: T:FastEndpoints.Validation.Validator`1
  id: Validator`1
  parent: FastEndpoints.Validation
  children:
  - FastEndpoints.Validation.Validator`1.Resolve(Type)
  - FastEndpoints.Validation.Validator`1.Resolve``1
  - FastEndpoints.Validation.Validator`1.ServiceProvider
  - FastEndpoints.Validation.Validator`1.TryResolve(Type)
  - FastEndpoints.Validation.Validator`1.TryResolve``1
  langs:
  - csharp
  - vb
  name: Validator<TRequest>
  nameWithType: Validator<TRequest>
  fullName: FastEndpoints.Validation.Validator<TRequest>
  type: Class
  source:
    id: Validator
    path: D:\SOURCE-CONTROL\FastEndpoints\Src\Documentation\src\Library\Validator.cs
    startLine: 4
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints.Validation
  syntax:
    content: 'public abstract class Validator<TRequest> : AbstractValidator<TRequest>, IValidator<TRequest>, IValidator, IEnumerable<IValidationRule>, IEnumerable, IHasServiceProvider where TRequest : class'
    typeParameters:
    - id: TRequest
    content.vb: >-
      Public MustInherit Class Validator(Of TRequest As Class)

          Inherits AbstractValidator(Of TRequest)

          Implements IValidator(Of TRequest), IValidator, IEnumerable(Of IValidationRule), IEnumerable, IHasServiceProvider
  inheritance:
  - System.Object
  - FastEndpoints.Validation.AbstractValidator{{TRequest}}
  implements:
  - FastEndpoints.Validation.IValidator{{TRequest}}
  - FastEndpoints.Validation.IValidator
  - System.Collections.Generic.IEnumerable{FastEndpoints.Validation.IValidationRule}
  - System.Collections.IEnumerable
  inheritedMembers:
  - FastEndpoints.Validation.AbstractValidator{{TRequest}}.CascadeMode
  - FastEndpoints.Validation.AbstractValidator{{TRequest}}.FastEndpoints#Validation#IValidator#Validate(FastEndpoints.Validation.IValidationContext)
  - FastEndpoints.Validation.AbstractValidator{{TRequest}}.FastEndpoints#Validation#IValidator#ValidateAsync(FastEndpoints.Validation.IValidationContext,System.Threading.CancellationToken)
  - FastEndpoints.Validation.AbstractValidator{{TRequest}}.Validate({TRequest})
  - FastEndpoints.Validation.AbstractValidator{{TRequest}}.ValidateAsync({TRequest},System.Threading.CancellationToken)
  - FastEndpoints.Validation.AbstractValidator{{TRequest}}.Validate(FastEndpoints.Validation.ValidationContext{{TRequest}})
  - FastEndpoints.Validation.AbstractValidator{{TRequest}}.ValidateAsync(FastEndpoints.Validation.ValidationContext{{TRequest}},System.Threading.CancellationToken)
  - FastEndpoints.Validation.AbstractValidator{{TRequest}}.CreateDescriptor
  - FastEndpoints.Validation.AbstractValidator{{TRequest}}.FastEndpoints#Validation#IValidator#CanValidateInstancesOfType(System.Type)
  - FastEndpoints.Validation.AbstractValidator{{TRequest}}.RuleFor``1(System.Linq.Expressions.Expression{System.Func{{TRequest},{TProperty}}})
  - FastEndpoints.Validation.AbstractValidator{{TRequest}}.Transform``2(System.Linq.Expressions.Expression{System.Func{{TRequest},{TProperty}}},System.Func{{TProperty},{TTransformed}})
  - FastEndpoints.Validation.AbstractValidator{{TRequest}}.Transform``2(System.Linq.Expressions.Expression{System.Func{{TRequest},{TProperty}}},System.Func{{TRequest},{TProperty},{TTransformed}})
  - FastEndpoints.Validation.AbstractValidator{{TRequest}}.RuleForEach``1(System.Linq.Expressions.Expression{System.Func{{TRequest},System.Collections.Generic.IEnumerable{{TElement}}}})
  - FastEndpoints.Validation.AbstractValidator{{TRequest}}.TransformForEach``2(System.Linq.Expressions.Expression{System.Func{{TRequest},System.Collections.Generic.IEnumerable{{TElement}}}},System.Func{{TElement},{TTransformed}})
  - FastEndpoints.Validation.AbstractValidator{{TRequest}}.TransformForEach``2(System.Linq.Expressions.Expression{System.Func{{TRequest},System.Collections.Generic.IEnumerable{{TElement}}}},System.Func{{TRequest},{TElement},{TTransformed}})
  - FastEndpoints.Validation.AbstractValidator{{TRequest}}.RuleSet(System.String,System.Action)
  - FastEndpoints.Validation.AbstractValidator{{TRequest}}.When(System.Func{{TRequest},System.Boolean},System.Action)
  - FastEndpoints.Validation.AbstractValidator{{TRequest}}.When(System.Func{{TRequest},FastEndpoints.Validation.ValidationContext{{TRequest}},System.Boolean},System.Action)
  - FastEndpoints.Validation.AbstractValidator{{TRequest}}.Unless(System.Func{{TRequest},System.Boolean},System.Action)
  - FastEndpoints.Validation.AbstractValidator{{TRequest}}.Unless(System.Func{{TRequest},FastEndpoints.Validation.ValidationContext{{TRequest}},System.Boolean},System.Action)
  - FastEndpoints.Validation.AbstractValidator{{TRequest}}.WhenAsync(System.Func{{TRequest},System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
  - FastEndpoints.Validation.AbstractValidator{{TRequest}}.WhenAsync(System.Func{{TRequest},FastEndpoints.Validation.ValidationContext{{TRequest}},System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
  - FastEndpoints.Validation.AbstractValidator{{TRequest}}.UnlessAsync(System.Func{{TRequest},System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
  - FastEndpoints.Validation.AbstractValidator{{TRequest}}.UnlessAsync(System.Func{{TRequest},FastEndpoints.Validation.ValidationContext{{TRequest}},System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
  - FastEndpoints.Validation.AbstractValidator{{TRequest}}.Include(FastEndpoints.Validation.IValidator{{TRequest}})
  - FastEndpoints.Validation.AbstractValidator{{TRequest}}.Include``1(System.Func{{TRequest},{TValidator}})
  - FastEndpoints.Validation.AbstractValidator{{TRequest}}.GetEnumerator
  - FastEndpoints.Validation.AbstractValidator{{TRequest}}.System#Collections#IEnumerable#GetEnumerator
  - FastEndpoints.Validation.AbstractValidator{{TRequest}}.EnsureInstanceNotNull(System.Object)
  - FastEndpoints.Validation.AbstractValidator{{TRequest}}.PreValidate(FastEndpoints.Validation.ValidationContext{{TRequest}},FastEndpoints.Validation.Results.ValidationResult)
  - FastEndpoints.Validation.AbstractValidator{{TRequest}}.RaiseValidationException(FastEndpoints.Validation.ValidationContext{{TRequest}},FastEndpoints.Validation.Results.ValidationResult)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: Validator(Of TRequest)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
  fullName.vb: FastEndpoints.Validation.Validator(Of TRequest)
  name.vb: Validator(Of TRequest)
- uid: FastEndpoints.Validation.Validator`1.ServiceProvider
  commentId: P:FastEndpoints.Validation.Validator`1.ServiceProvider
  id: ServiceProvider
  parent: FastEndpoints.Validation.Validator`1
  langs:
  - csharp
  - vb
  name: ServiceProvider
  nameWithType: Validator<TRequest>.ServiceProvider
  fullName: FastEndpoints.Validation.Validator<TRequest>.ServiceProvider
  type: Property
  source:
    id: ServiceProvider
    path: D:\SOURCE-CONTROL\FastEndpoints\Src\Documentation\src\Library\Validator.cs
    startLine: 7
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints.Validation
  syntax:
    content: public IServiceProvider ServiceProvider { get; set; }
    parameters: []
    return:
      type: IServiceProvider
    content.vb: Public Property ServiceProvider As IServiceProvider
  overload: FastEndpoints.Validation.Validator`1.ServiceProvider*
  nameWithType.vb: Validator(Of TRequest).ServiceProvider
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: FastEndpoints.Validation.Validator(Of TRequest).ServiceProvider
- uid: FastEndpoints.Validation.Validator`1.TryResolve``1
  commentId: M:FastEndpoints.Validation.Validator`1.TryResolve``1
  id: TryResolve``1
  parent: FastEndpoints.Validation.Validator`1
  langs:
  - csharp
  - vb
  name: TryResolve<TService>()
  nameWithType: Validator<TRequest>.TryResolve<TService>()
  fullName: FastEndpoints.Validation.Validator<TRequest>.TryResolve<TService>()
  type: Method
  source:
    id: TryResolve
    path: D:\SOURCE-CONTROL\FastEndpoints\Src\Documentation\src\Library\Validator.cs
    startLine: 14
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints.Validation
  summary: "\ntry to resolve an instance for the given type from the dependency injection container. will return null if unresolvable.\n"
  example: []
  syntax:
    content: protected TService TryResolve<TService>()
    typeParameters:
    - id: TService
      description: the type of the service to resolve
    return:
      type: '{TService}'
    content.vb: Protected Function TryResolve(Of TService) As TService
  overload: FastEndpoints.Validation.Validator`1.TryResolve*
  nameWithType.vb: Validator(Of TRequest).TryResolve(Of TService)()
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: FastEndpoints.Validation.Validator(Of TRequest).TryResolve(Of TService)()
  name.vb: TryResolve(Of TService)()
- uid: FastEndpoints.Validation.Validator`1.TryResolve(Type)
  commentId: M:FastEndpoints.Validation.Validator`1.TryResolve(Type)
  id: TryResolve(Type)
  parent: FastEndpoints.Validation.Validator`1
  langs:
  - csharp
  - vb
  name: TryResolve(Type)
  nameWithType: Validator<TRequest>.TryResolve(Type)
  fullName: FastEndpoints.Validation.Validator<TRequest>.TryResolve(Type)
  type: Method
  source:
    id: TryResolve
    path: D:\SOURCE-CONTROL\FastEndpoints\Src\Documentation\src\Library\Validator.cs
    startLine: 19
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints.Validation
  summary: "\ntry to resolve an instance for the given type from the dependency injection container. will return null if unresolvable.\n"
  example: []
  syntax:
    content: protected object TryResolve(Type typeOfService)
    parameters:
    - id: typeOfService
      type: Type
      description: the type of the service to resolve
    return:
      type: System.Object
    content.vb: Protected Function TryResolve(typeOfService As Type) As Object
  overload: FastEndpoints.Validation.Validator`1.TryResolve*
  nameWithType.vb: Validator(Of TRequest).TryResolve(Type)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: FastEndpoints.Validation.Validator(Of TRequest).TryResolve(Type)
- uid: FastEndpoints.Validation.Validator`1.Resolve``1
  commentId: M:FastEndpoints.Validation.Validator`1.Resolve``1
  id: Resolve``1
  parent: FastEndpoints.Validation.Validator`1
  langs:
  - csharp
  - vb
  name: Resolve<TService>()
  nameWithType: Validator<TRequest>.Resolve<TService>()
  fullName: FastEndpoints.Validation.Validator<TRequest>.Resolve<TService>()
  type: Method
  source:
    id: Resolve
    path: D:\SOURCE-CONTROL\FastEndpoints\Src\Documentation\src\Library\Validator.cs
    startLine: 26
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints.Validation
  summary: "\nresolve an instance for the given type from the dependency injection container. will throw if unresolvable.\n"
  example: []
  syntax:
    content: protected TService Resolve<TService>()
    typeParameters:
    - id: TService
      description: the type of the service to resolve
    return:
      type: '{TService}'
    content.vb: Protected Function Resolve(Of TService) As TService
  overload: FastEndpoints.Validation.Validator`1.Resolve*
  nameWithType.vb: Validator(Of TRequest).Resolve(Of TService)()
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: FastEndpoints.Validation.Validator(Of TRequest).Resolve(Of TService)()
  name.vb: Resolve(Of TService)()
- uid: FastEndpoints.Validation.Validator`1.Resolve(Type)
  commentId: M:FastEndpoints.Validation.Validator`1.Resolve(Type)
  id: Resolve(Type)
  parent: FastEndpoints.Validation.Validator`1
  langs:
  - csharp
  - vb
  name: Resolve(Type)
  nameWithType: Validator<TRequest>.Resolve(Type)
  fullName: FastEndpoints.Validation.Validator<TRequest>.Resolve(Type)
  type: Method
  source:
    id: Resolve
    path: D:\SOURCE-CONTROL\FastEndpoints\Src\Documentation\src\Library\Validator.cs
    startLine: 33
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints.Validation
  summary: "\nresolve an instance for the given type from the dependency injection container. will throw if unresolvable.\n"
  example: []
  syntax:
    content: protected object Resolve(Type typeOfService)
    parameters:
    - id: typeOfService
      type: Type
      description: the type of the service to resolve
    return:
      type: System.Object
    content.vb: Protected Function Resolve(typeOfService As Type) As Object
  overload: FastEndpoints.Validation.Validator`1.Resolve*
  nameWithType.vb: Validator(Of TRequest).Resolve(Type)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: FastEndpoints.Validation.Validator(Of TRequest).Resolve(Type)
references:
- uid: FastEndpoints.Validation
  commentId: N:FastEndpoints.Validation
  name: FastEndpoints.Validation
  nameWithType: FastEndpoints.Validation
  fullName: FastEndpoints.Validation
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: FastEndpoints.Validation.AbstractValidator{{TRequest}}
  commentId: T:FastEndpoints.Validation.AbstractValidator{`0}
  parent: FastEndpoints.Validation
  definition: FastEndpoints.Validation.AbstractValidator`1
  name: AbstractValidator<TRequest>
  nameWithType: AbstractValidator<TRequest>
  fullName: FastEndpoints.Validation.AbstractValidator<TRequest>
  nameWithType.vb: AbstractValidator(Of TRequest)
  fullName.vb: FastEndpoints.Validation.AbstractValidator(Of TRequest)
  name.vb: AbstractValidator(Of TRequest)
  spec.csharp:
  - uid: FastEndpoints.Validation.AbstractValidator`1
    name: AbstractValidator
    nameWithType: AbstractValidator
    fullName: FastEndpoints.Validation.AbstractValidator
  - name: <
    nameWithType: <
    fullName: <
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: FastEndpoints.Validation.AbstractValidator`1
    name: AbstractValidator
    nameWithType: AbstractValidator
    fullName: FastEndpoints.Validation.AbstractValidator
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Validation.IValidator{{TRequest}}
  commentId: T:FastEndpoints.Validation.IValidator{`0}
  parent: FastEndpoints.Validation
  definition: FastEndpoints.Validation.IValidator`1
  name: IValidator<TRequest>
  nameWithType: IValidator<TRequest>
  fullName: FastEndpoints.Validation.IValidator<TRequest>
  nameWithType.vb: IValidator(Of TRequest)
  fullName.vb: FastEndpoints.Validation.IValidator(Of TRequest)
  name.vb: IValidator(Of TRequest)
  spec.csharp:
  - uid: FastEndpoints.Validation.IValidator`1
    name: IValidator
    nameWithType: IValidator
    fullName: FastEndpoints.Validation.IValidator
  - name: <
    nameWithType: <
    fullName: <
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: FastEndpoints.Validation.IValidator`1
    name: IValidator
    nameWithType: IValidator
    fullName: FastEndpoints.Validation.IValidator
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Validation.IValidator
  commentId: T:FastEndpoints.Validation.IValidator
  parent: FastEndpoints.Validation
  name: IValidator
  nameWithType: IValidator
  fullName: FastEndpoints.Validation.IValidator
- uid: System.Collections.Generic.IEnumerable{FastEndpoints.Validation.IValidationRule}
  commentId: T:System.Collections.Generic.IEnumerable{FastEndpoints.Validation.IValidationRule}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<IValidationRule>
  nameWithType: IEnumerable<IValidationRule>
  fullName: System.Collections.Generic.IEnumerable<FastEndpoints.Validation.IValidationRule>
  nameWithType.vb: IEnumerable(Of IValidationRule)
  fullName.vb: System.Collections.Generic.IEnumerable(Of FastEndpoints.Validation.IValidationRule)
  name.vb: IEnumerable(Of IValidationRule)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: FastEndpoints.Validation.IValidationRule
    name: IValidationRule
    nameWithType: IValidationRule
    fullName: FastEndpoints.Validation.IValidationRule
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: FastEndpoints.Validation.IValidationRule
    name: IValidationRule
    nameWithType: IValidationRule
    fullName: FastEndpoints.Validation.IValidationRule
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: FastEndpoints.Validation.AbstractValidator{{TRequest}}.CascadeMode
  commentId: P:FastEndpoints.Validation.AbstractValidator{`0}.CascadeMode
  parent: FastEndpoints.Validation.AbstractValidator{{TRequest}}
  definition: FastEndpoints.Validation.AbstractValidator`1.CascadeMode
  name: CascadeMode
  nameWithType: AbstractValidator<TRequest>.CascadeMode
  fullName: FastEndpoints.Validation.AbstractValidator<TRequest>.CascadeMode
  nameWithType.vb: AbstractValidator(Of TRequest).CascadeMode
  fullName.vb: FastEndpoints.Validation.AbstractValidator(Of TRequest).CascadeMode
- uid: FastEndpoints.Validation.AbstractValidator{{TRequest}}.FastEndpoints#Validation#IValidator#Validate(FastEndpoints.Validation.IValidationContext)
  commentId: M:FastEndpoints.Validation.AbstractValidator{`0}.FastEndpoints#Validation#IValidator#Validate(FastEndpoints.Validation.IValidationContext)
  parent: FastEndpoints.Validation.AbstractValidator{{TRequest}}
  definition: FastEndpoints.Validation.AbstractValidator`1.FastEndpoints#Validation#IValidator#Validate(FastEndpoints.Validation.IValidationContext)
  name: IValidator.Validate(IValidationContext)
  nameWithType: AbstractValidator<TRequest>.IValidator.Validate(IValidationContext)
  fullName: FastEndpoints.Validation.AbstractValidator<TRequest>.FastEndpoints.Validation.IValidator.Validate(FastEndpoints.Validation.IValidationContext)
  nameWithType.vb: AbstractValidator(Of TRequest).FastEndpoints.Validation.IValidator.Validate(IValidationContext)
  fullName.vb: FastEndpoints.Validation.AbstractValidator(Of TRequest).FastEndpoints.Validation.IValidator.Validate(FastEndpoints.Validation.IValidationContext)
  name.vb: FastEndpoints.Validation.IValidator.Validate(IValidationContext)
  spec.csharp:
  - uid: FastEndpoints.Validation.AbstractValidator`1.FastEndpoints#Validation#IValidator#Validate(FastEndpoints.Validation.IValidationContext)
    name: IValidator.Validate
    nameWithType: AbstractValidator<TRequest>.IValidator.Validate
    fullName: FastEndpoints.Validation.AbstractValidator<TRequest>.FastEndpoints.Validation.IValidator.Validate
  - name: (
    nameWithType: (
    fullName: (
  - uid: FastEndpoints.Validation.IValidationContext
    name: IValidationContext
    nameWithType: IValidationContext
    fullName: FastEndpoints.Validation.IValidationContext
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Validation.AbstractValidator`1.FastEndpoints#Validation#IValidator#Validate(FastEndpoints.Validation.IValidationContext)
    name: FastEndpoints.Validation.IValidator.Validate
    nameWithType: AbstractValidator(Of TRequest).FastEndpoints.Validation.IValidator.Validate
    fullName: FastEndpoints.Validation.AbstractValidator(Of TRequest).FastEndpoints.Validation.IValidator.Validate
  - name: (
    nameWithType: (
    fullName: (
  - uid: FastEndpoints.Validation.IValidationContext
    name: IValidationContext
    nameWithType: IValidationContext
    fullName: FastEndpoints.Validation.IValidationContext
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Validation.AbstractValidator{{TRequest}}.FastEndpoints#Validation#IValidator#ValidateAsync(FastEndpoints.Validation.IValidationContext,System.Threading.CancellationToken)
  commentId: M:FastEndpoints.Validation.AbstractValidator{`0}.FastEndpoints#Validation#IValidator#ValidateAsync(FastEndpoints.Validation.IValidationContext,System.Threading.CancellationToken)
  parent: FastEndpoints.Validation.AbstractValidator{{TRequest}}
  definition: FastEndpoints.Validation.AbstractValidator`1.FastEndpoints#Validation#IValidator#ValidateAsync(FastEndpoints.Validation.IValidationContext,System.Threading.CancellationToken)
  name: IValidator.ValidateAsync(IValidationContext, CancellationToken)
  nameWithType: AbstractValidator<TRequest>.IValidator.ValidateAsync(IValidationContext, CancellationToken)
  fullName: FastEndpoints.Validation.AbstractValidator<TRequest>.FastEndpoints.Validation.IValidator.ValidateAsync(FastEndpoints.Validation.IValidationContext, System.Threading.CancellationToken)
  nameWithType.vb: AbstractValidator(Of TRequest).FastEndpoints.Validation.IValidator.ValidateAsync(IValidationContext, CancellationToken)
  fullName.vb: FastEndpoints.Validation.AbstractValidator(Of TRequest).FastEndpoints.Validation.IValidator.ValidateAsync(FastEndpoints.Validation.IValidationContext, System.Threading.CancellationToken)
  name.vb: FastEndpoints.Validation.IValidator.ValidateAsync(IValidationContext, CancellationToken)
  spec.csharp:
  - uid: FastEndpoints.Validation.AbstractValidator`1.FastEndpoints#Validation#IValidator#ValidateAsync(FastEndpoints.Validation.IValidationContext,System.Threading.CancellationToken)
    name: IValidator.ValidateAsync
    nameWithType: AbstractValidator<TRequest>.IValidator.ValidateAsync
    fullName: FastEndpoints.Validation.AbstractValidator<TRequest>.FastEndpoints.Validation.IValidator.ValidateAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: FastEndpoints.Validation.IValidationContext
    name: IValidationContext
    nameWithType: IValidationContext
    fullName: FastEndpoints.Validation.IValidationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Validation.AbstractValidator`1.FastEndpoints#Validation#IValidator#ValidateAsync(FastEndpoints.Validation.IValidationContext,System.Threading.CancellationToken)
    name: FastEndpoints.Validation.IValidator.ValidateAsync
    nameWithType: AbstractValidator(Of TRequest).FastEndpoints.Validation.IValidator.ValidateAsync
    fullName: FastEndpoints.Validation.AbstractValidator(Of TRequest).FastEndpoints.Validation.IValidator.ValidateAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: FastEndpoints.Validation.IValidationContext
    name: IValidationContext
    nameWithType: IValidationContext
    fullName: FastEndpoints.Validation.IValidationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Validation.AbstractValidator{{TRequest}}.Validate({TRequest})
  commentId: M:FastEndpoints.Validation.AbstractValidator{`0}.Validate(`0)
  parent: FastEndpoints.Validation.AbstractValidator{{TRequest}}
  definition: FastEndpoints.Validation.AbstractValidator`1.Validate(`0)
  name: Validate(TRequest)
  nameWithType: AbstractValidator<TRequest>.Validate(TRequest)
  fullName: FastEndpoints.Validation.AbstractValidator<TRequest>.Validate(TRequest)
  nameWithType.vb: AbstractValidator(Of TRequest).Validate(TRequest)
  fullName.vb: FastEndpoints.Validation.AbstractValidator(Of TRequest).Validate(TRequest)
  spec.csharp:
  - uid: FastEndpoints.Validation.AbstractValidator`1.Validate(`0)
    name: Validate
    nameWithType: AbstractValidator<TRequest>.Validate
    fullName: FastEndpoints.Validation.AbstractValidator<TRequest>.Validate
  - name: (
    nameWithType: (
    fullName: (
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Validation.AbstractValidator`1.Validate(`0)
    name: Validate
    nameWithType: AbstractValidator(Of TRequest).Validate
    fullName: FastEndpoints.Validation.AbstractValidator(Of TRequest).Validate
  - name: (
    nameWithType: (
    fullName: (
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Validation.AbstractValidator{{TRequest}}.ValidateAsync({TRequest},System.Threading.CancellationToken)
  commentId: M:FastEndpoints.Validation.AbstractValidator{`0}.ValidateAsync(`0,System.Threading.CancellationToken)
  parent: FastEndpoints.Validation.AbstractValidator{{TRequest}}
  definition: FastEndpoints.Validation.AbstractValidator`1.ValidateAsync(`0,System.Threading.CancellationToken)
  name: ValidateAsync(TRequest, CancellationToken)
  nameWithType: AbstractValidator<TRequest>.ValidateAsync(TRequest, CancellationToken)
  fullName: FastEndpoints.Validation.AbstractValidator<TRequest>.ValidateAsync(TRequest, System.Threading.CancellationToken)
  nameWithType.vb: AbstractValidator(Of TRequest).ValidateAsync(TRequest, CancellationToken)
  fullName.vb: FastEndpoints.Validation.AbstractValidator(Of TRequest).ValidateAsync(TRequest, System.Threading.CancellationToken)
  spec.csharp:
  - uid: FastEndpoints.Validation.AbstractValidator`1.ValidateAsync(`0,System.Threading.CancellationToken)
    name: ValidateAsync
    nameWithType: AbstractValidator<TRequest>.ValidateAsync
    fullName: FastEndpoints.Validation.AbstractValidator<TRequest>.ValidateAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Validation.AbstractValidator`1.ValidateAsync(`0,System.Threading.CancellationToken)
    name: ValidateAsync
    nameWithType: AbstractValidator(Of TRequest).ValidateAsync
    fullName: FastEndpoints.Validation.AbstractValidator(Of TRequest).ValidateAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Validation.AbstractValidator{{TRequest}}.Validate(FastEndpoints.Validation.ValidationContext{{TRequest}})
  commentId: M:FastEndpoints.Validation.AbstractValidator{`0}.Validate(FastEndpoints.Validation.ValidationContext{`0})
  parent: FastEndpoints.Validation.AbstractValidator{{TRequest}}
  definition: FastEndpoints.Validation.AbstractValidator`1.Validate(FastEndpoints.Validation.ValidationContext{`0})
  name: Validate(ValidationContext<TRequest>)
  nameWithType: AbstractValidator<TRequest>.Validate(ValidationContext<TRequest>)
  fullName: FastEndpoints.Validation.AbstractValidator<TRequest>.Validate(FastEndpoints.Validation.ValidationContext<TRequest>)
  nameWithType.vb: AbstractValidator(Of TRequest).Validate(ValidationContext(Of TRequest))
  fullName.vb: FastEndpoints.Validation.AbstractValidator(Of TRequest).Validate(FastEndpoints.Validation.ValidationContext(Of TRequest))
  name.vb: Validate(ValidationContext(Of TRequest))
  spec.csharp:
  - uid: FastEndpoints.Validation.AbstractValidator`1.Validate(FastEndpoints.Validation.ValidationContext{`0})
    name: Validate
    nameWithType: AbstractValidator<TRequest>.Validate
    fullName: FastEndpoints.Validation.AbstractValidator<TRequest>.Validate
  - name: (
    nameWithType: (
    fullName: (
  - uid: FastEndpoints.Validation.ValidationContext`1
    name: ValidationContext
    nameWithType: ValidationContext
    fullName: FastEndpoints.Validation.ValidationContext
  - name: <
    nameWithType: <
    fullName: <
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Validation.AbstractValidator`1.Validate(FastEndpoints.Validation.ValidationContext{`0})
    name: Validate
    nameWithType: AbstractValidator(Of TRequest).Validate
    fullName: FastEndpoints.Validation.AbstractValidator(Of TRequest).Validate
  - name: (
    nameWithType: (
    fullName: (
  - uid: FastEndpoints.Validation.ValidationContext`1
    name: ValidationContext
    nameWithType: ValidationContext
    fullName: FastEndpoints.Validation.ValidationContext
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Validation.AbstractValidator{{TRequest}}.ValidateAsync(FastEndpoints.Validation.ValidationContext{{TRequest}},System.Threading.CancellationToken)
  commentId: M:FastEndpoints.Validation.AbstractValidator{`0}.ValidateAsync(FastEndpoints.Validation.ValidationContext{`0},System.Threading.CancellationToken)
  parent: FastEndpoints.Validation.AbstractValidator{{TRequest}}
  definition: FastEndpoints.Validation.AbstractValidator`1.ValidateAsync(FastEndpoints.Validation.ValidationContext{`0},System.Threading.CancellationToken)
  name: ValidateAsync(ValidationContext<TRequest>, CancellationToken)
  nameWithType: AbstractValidator<TRequest>.ValidateAsync(ValidationContext<TRequest>, CancellationToken)
  fullName: FastEndpoints.Validation.AbstractValidator<TRequest>.ValidateAsync(FastEndpoints.Validation.ValidationContext<TRequest>, System.Threading.CancellationToken)
  nameWithType.vb: AbstractValidator(Of TRequest).ValidateAsync(ValidationContext(Of TRequest), CancellationToken)
  fullName.vb: FastEndpoints.Validation.AbstractValidator(Of TRequest).ValidateAsync(FastEndpoints.Validation.ValidationContext(Of TRequest), System.Threading.CancellationToken)
  name.vb: ValidateAsync(ValidationContext(Of TRequest), CancellationToken)
  spec.csharp:
  - uid: FastEndpoints.Validation.AbstractValidator`1.ValidateAsync(FastEndpoints.Validation.ValidationContext{`0},System.Threading.CancellationToken)
    name: ValidateAsync
    nameWithType: AbstractValidator<TRequest>.ValidateAsync
    fullName: FastEndpoints.Validation.AbstractValidator<TRequest>.ValidateAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: FastEndpoints.Validation.ValidationContext`1
    name: ValidationContext
    nameWithType: ValidationContext
    fullName: FastEndpoints.Validation.ValidationContext
  - name: <
    nameWithType: <
    fullName: <
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Validation.AbstractValidator`1.ValidateAsync(FastEndpoints.Validation.ValidationContext{`0},System.Threading.CancellationToken)
    name: ValidateAsync
    nameWithType: AbstractValidator(Of TRequest).ValidateAsync
    fullName: FastEndpoints.Validation.AbstractValidator(Of TRequest).ValidateAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: FastEndpoints.Validation.ValidationContext`1
    name: ValidationContext
    nameWithType: ValidationContext
    fullName: FastEndpoints.Validation.ValidationContext
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Validation.AbstractValidator{{TRequest}}.CreateDescriptor
  commentId: M:FastEndpoints.Validation.AbstractValidator{`0}.CreateDescriptor
  parent: FastEndpoints.Validation.AbstractValidator{{TRequest}}
  definition: FastEndpoints.Validation.AbstractValidator`1.CreateDescriptor
  name: CreateDescriptor()
  nameWithType: AbstractValidator<TRequest>.CreateDescriptor()
  fullName: FastEndpoints.Validation.AbstractValidator<TRequest>.CreateDescriptor()
  nameWithType.vb: AbstractValidator(Of TRequest).CreateDescriptor()
  fullName.vb: FastEndpoints.Validation.AbstractValidator(Of TRequest).CreateDescriptor()
  spec.csharp:
  - uid: FastEndpoints.Validation.AbstractValidator`1.CreateDescriptor
    name: CreateDescriptor
    nameWithType: AbstractValidator<TRequest>.CreateDescriptor
    fullName: FastEndpoints.Validation.AbstractValidator<TRequest>.CreateDescriptor
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Validation.AbstractValidator`1.CreateDescriptor
    name: CreateDescriptor
    nameWithType: AbstractValidator(Of TRequest).CreateDescriptor
    fullName: FastEndpoints.Validation.AbstractValidator(Of TRequest).CreateDescriptor
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Validation.AbstractValidator{{TRequest}}.FastEndpoints#Validation#IValidator#CanValidateInstancesOfType(System.Type)
  commentId: M:FastEndpoints.Validation.AbstractValidator{`0}.FastEndpoints#Validation#IValidator#CanValidateInstancesOfType(System.Type)
  parent: FastEndpoints.Validation.AbstractValidator{{TRequest}}
  definition: FastEndpoints.Validation.AbstractValidator`1.FastEndpoints#Validation#IValidator#CanValidateInstancesOfType(System.Type)
  name: IValidator.CanValidateInstancesOfType(Type)
  nameWithType: AbstractValidator<TRequest>.IValidator.CanValidateInstancesOfType(Type)
  fullName: FastEndpoints.Validation.AbstractValidator<TRequest>.FastEndpoints.Validation.IValidator.CanValidateInstancesOfType(System.Type)
  nameWithType.vb: AbstractValidator(Of TRequest).FastEndpoints.Validation.IValidator.CanValidateInstancesOfType(Type)
  fullName.vb: FastEndpoints.Validation.AbstractValidator(Of TRequest).FastEndpoints.Validation.IValidator.CanValidateInstancesOfType(System.Type)
  name.vb: FastEndpoints.Validation.IValidator.CanValidateInstancesOfType(Type)
  spec.csharp:
  - uid: FastEndpoints.Validation.AbstractValidator`1.FastEndpoints#Validation#IValidator#CanValidateInstancesOfType(System.Type)
    name: IValidator.CanValidateInstancesOfType
    nameWithType: AbstractValidator<TRequest>.IValidator.CanValidateInstancesOfType
    fullName: FastEndpoints.Validation.AbstractValidator<TRequest>.FastEndpoints.Validation.IValidator.CanValidateInstancesOfType
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Validation.AbstractValidator`1.FastEndpoints#Validation#IValidator#CanValidateInstancesOfType(System.Type)
    name: FastEndpoints.Validation.IValidator.CanValidateInstancesOfType
    nameWithType: AbstractValidator(Of TRequest).FastEndpoints.Validation.IValidator.CanValidateInstancesOfType
    fullName: FastEndpoints.Validation.AbstractValidator(Of TRequest).FastEndpoints.Validation.IValidator.CanValidateInstancesOfType
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Validation.AbstractValidator{{TRequest}}.RuleFor``1(System.Linq.Expressions.Expression{System.Func{{TRequest},{TProperty}}})
  commentId: M:FastEndpoints.Validation.AbstractValidator{`0}.RuleFor``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})
  parent: FastEndpoints.Validation.AbstractValidator{{TRequest}}
  definition: FastEndpoints.Validation.AbstractValidator`1.RuleFor``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})
  name: RuleFor<TProperty>(Expression<Func<TRequest, TProperty>>)
  nameWithType: AbstractValidator<TRequest>.RuleFor<TProperty>(Expression<Func<TRequest, TProperty>>)
  fullName: FastEndpoints.Validation.AbstractValidator<TRequest>.RuleFor<TProperty>(System.Linq.Expressions.Expression<System.Func<TRequest, TProperty>>)
  nameWithType.vb: AbstractValidator(Of TRequest).RuleFor(Of TProperty)(Expression(Of Func(Of TRequest, TProperty)))
  fullName.vb: FastEndpoints.Validation.AbstractValidator(Of TRequest).RuleFor(Of TProperty)(System.Linq.Expressions.Expression(Of System.Func(Of TRequest, TProperty)))
  name.vb: RuleFor(Of TProperty)(Expression(Of Func(Of TRequest, TProperty)))
  spec.csharp:
  - uid: FastEndpoints.Validation.AbstractValidator`1.RuleFor``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})
    name: RuleFor<TProperty>
    nameWithType: AbstractValidator<TRequest>.RuleFor<TProperty>
    fullName: FastEndpoints.Validation.AbstractValidator<TRequest>.RuleFor<TProperty>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TProperty
    nameWithType: TProperty
    fullName: TProperty
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Validation.AbstractValidator`1.RuleFor``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})
    name: RuleFor(Of TProperty)
    nameWithType: AbstractValidator(Of TRequest).RuleFor(Of TProperty)
    fullName: FastEndpoints.Validation.AbstractValidator(Of TRequest).RuleFor(Of TProperty)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TProperty
    nameWithType: TProperty
    fullName: TProperty
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Validation.AbstractValidator{{TRequest}}.Transform``2(System.Linq.Expressions.Expression{System.Func{{TRequest},{TProperty}}},System.Func{{TProperty},{TTransformed}})
  commentId: M:FastEndpoints.Validation.AbstractValidator{`0}.Transform``2(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Func{``0,``1})
  parent: FastEndpoints.Validation.AbstractValidator{{TRequest}}
  definition: FastEndpoints.Validation.AbstractValidator`1.Transform``2(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Func{``0,``1})
  name: Transform<TProperty, TTransformed>(Expression<Func<TRequest, TProperty>>, Func<TProperty, TTransformed>)
  nameWithType: AbstractValidator<TRequest>.Transform<TProperty, TTransformed>(Expression<Func<TRequest, TProperty>>, Func<TProperty, TTransformed>)
  fullName: FastEndpoints.Validation.AbstractValidator<TRequest>.Transform<TProperty, TTransformed>(System.Linq.Expressions.Expression<System.Func<TRequest, TProperty>>, System.Func<TProperty, TTransformed>)
  nameWithType.vb: AbstractValidator(Of TRequest).Transform(Of TProperty, TTransformed)(Expression(Of Func(Of TRequest, TProperty)), Func(Of TProperty, TTransformed))
  fullName.vb: FastEndpoints.Validation.AbstractValidator(Of TRequest).Transform(Of TProperty, TTransformed)(System.Linq.Expressions.Expression(Of System.Func(Of TRequest, TProperty)), System.Func(Of TProperty, TTransformed))
  name.vb: Transform(Of TProperty, TTransformed)(Expression(Of Func(Of TRequest, TProperty)), Func(Of TProperty, TTransformed))
  spec.csharp:
  - uid: FastEndpoints.Validation.AbstractValidator`1.Transform``2(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Func{``0,``1})
    name: Transform<TProperty, TTransformed>
    nameWithType: AbstractValidator<TRequest>.Transform<TProperty, TTransformed>
    fullName: FastEndpoints.Validation.AbstractValidator<TRequest>.Transform<TProperty, TTransformed>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TProperty
    nameWithType: TProperty
    fullName: TProperty
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TProperty
    nameWithType: TProperty
    fullName: TProperty
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TTransformed
    nameWithType: TTransformed
    fullName: TTransformed
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Validation.AbstractValidator`1.Transform``2(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Func{``0,``1})
    name: Transform(Of TProperty, TTransformed)
    nameWithType: AbstractValidator(Of TRequest).Transform(Of TProperty, TTransformed)
    fullName: FastEndpoints.Validation.AbstractValidator(Of TRequest).Transform(Of TProperty, TTransformed)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TProperty
    nameWithType: TProperty
    fullName: TProperty
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TProperty
    nameWithType: TProperty
    fullName: TProperty
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TTransformed
    nameWithType: TTransformed
    fullName: TTransformed
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Validation.AbstractValidator{{TRequest}}.Transform``2(System.Linq.Expressions.Expression{System.Func{{TRequest},{TProperty}}},System.Func{{TRequest},{TProperty},{TTransformed}})
  commentId: M:FastEndpoints.Validation.AbstractValidator{`0}.Transform``2(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Func{`0,``0,``1})
  parent: FastEndpoints.Validation.AbstractValidator{{TRequest}}
  definition: FastEndpoints.Validation.AbstractValidator`1.Transform``2(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Func{`0,``0,``1})
  name: Transform<TProperty, TTransformed>(Expression<Func<TRequest, TProperty>>, Func<TRequest, TProperty, TTransformed>)
  nameWithType: AbstractValidator<TRequest>.Transform<TProperty, TTransformed>(Expression<Func<TRequest, TProperty>>, Func<TRequest, TProperty, TTransformed>)
  fullName: FastEndpoints.Validation.AbstractValidator<TRequest>.Transform<TProperty, TTransformed>(System.Linq.Expressions.Expression<System.Func<TRequest, TProperty>>, System.Func<TRequest, TProperty, TTransformed>)
  nameWithType.vb: AbstractValidator(Of TRequest).Transform(Of TProperty, TTransformed)(Expression(Of Func(Of TRequest, TProperty)), Func(Of TRequest, TProperty, TTransformed))
  fullName.vb: FastEndpoints.Validation.AbstractValidator(Of TRequest).Transform(Of TProperty, TTransformed)(System.Linq.Expressions.Expression(Of System.Func(Of TRequest, TProperty)), System.Func(Of TRequest, TProperty, TTransformed))
  name.vb: Transform(Of TProperty, TTransformed)(Expression(Of Func(Of TRequest, TProperty)), Func(Of TRequest, TProperty, TTransformed))
  spec.csharp:
  - uid: FastEndpoints.Validation.AbstractValidator`1.Transform``2(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Func{`0,``0,``1})
    name: Transform<TProperty, TTransformed>
    nameWithType: AbstractValidator<TRequest>.Transform<TProperty, TTransformed>
    fullName: FastEndpoints.Validation.AbstractValidator<TRequest>.Transform<TProperty, TTransformed>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TProperty
    nameWithType: TProperty
    fullName: TProperty
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TProperty
    nameWithType: TProperty
    fullName: TProperty
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TTransformed
    nameWithType: TTransformed
    fullName: TTransformed
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Validation.AbstractValidator`1.Transform``2(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Func{`0,``0,``1})
    name: Transform(Of TProperty, TTransformed)
    nameWithType: AbstractValidator(Of TRequest).Transform(Of TProperty, TTransformed)
    fullName: FastEndpoints.Validation.AbstractValidator(Of TRequest).Transform(Of TProperty, TTransformed)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TProperty
    nameWithType: TProperty
    fullName: TProperty
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TProperty
    nameWithType: TProperty
    fullName: TProperty
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TTransformed
    nameWithType: TTransformed
    fullName: TTransformed
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Validation.AbstractValidator{{TRequest}}.RuleForEach``1(System.Linq.Expressions.Expression{System.Func{{TRequest},System.Collections.Generic.IEnumerable{{TElement}}}})
  commentId: M:FastEndpoints.Validation.AbstractValidator{`0}.RuleForEach``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}})
  parent: FastEndpoints.Validation.AbstractValidator{{TRequest}}
  definition: FastEndpoints.Validation.AbstractValidator`1.RuleForEach``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}})
  name: RuleForEach<TElement>(Expression<Func<TRequest, IEnumerable<TElement>>>)
  nameWithType: AbstractValidator<TRequest>.RuleForEach<TElement>(Expression<Func<TRequest, IEnumerable<TElement>>>)
  fullName: FastEndpoints.Validation.AbstractValidator<TRequest>.RuleForEach<TElement>(System.Linq.Expressions.Expression<System.Func<TRequest, System.Collections.Generic.IEnumerable<TElement>>>)
  nameWithType.vb: AbstractValidator(Of TRequest).RuleForEach(Of TElement)(Expression(Of Func(Of TRequest, IEnumerable(Of TElement))))
  fullName.vb: FastEndpoints.Validation.AbstractValidator(Of TRequest).RuleForEach(Of TElement)(System.Linq.Expressions.Expression(Of System.Func(Of TRequest, System.Collections.Generic.IEnumerable(Of TElement))))
  name.vb: RuleForEach(Of TElement)(Expression(Of Func(Of TRequest, IEnumerable(Of TElement))))
  spec.csharp:
  - uid: FastEndpoints.Validation.AbstractValidator`1.RuleForEach``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}})
    name: RuleForEach<TElement>
    nameWithType: AbstractValidator<TRequest>.RuleForEach<TElement>
    fullName: FastEndpoints.Validation.AbstractValidator<TRequest>.RuleForEach<TElement>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TElement
    nameWithType: TElement
    fullName: TElement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Validation.AbstractValidator`1.RuleForEach``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}})
    name: RuleForEach(Of TElement)
    nameWithType: AbstractValidator(Of TRequest).RuleForEach(Of TElement)
    fullName: FastEndpoints.Validation.AbstractValidator(Of TRequest).RuleForEach(Of TElement)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TElement
    nameWithType: TElement
    fullName: TElement
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Validation.AbstractValidator{{TRequest}}.TransformForEach``2(System.Linq.Expressions.Expression{System.Func{{TRequest},System.Collections.Generic.IEnumerable{{TElement}}}},System.Func{{TElement},{TTransformed}})
  commentId: M:FastEndpoints.Validation.AbstractValidator{`0}.TransformForEach``2(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Func{``0,``1})
  parent: FastEndpoints.Validation.AbstractValidator{{TRequest}}
  definition: FastEndpoints.Validation.AbstractValidator`1.TransformForEach``2(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Func{``0,``1})
  name: TransformForEach<TElement, TTransformed>(Expression<Func<TRequest, IEnumerable<TElement>>>, Func<TElement, TTransformed>)
  nameWithType: AbstractValidator<TRequest>.TransformForEach<TElement, TTransformed>(Expression<Func<TRequest, IEnumerable<TElement>>>, Func<TElement, TTransformed>)
  fullName: FastEndpoints.Validation.AbstractValidator<TRequest>.TransformForEach<TElement, TTransformed>(System.Linq.Expressions.Expression<System.Func<TRequest, System.Collections.Generic.IEnumerable<TElement>>>, System.Func<TElement, TTransformed>)
  nameWithType.vb: AbstractValidator(Of TRequest).TransformForEach(Of TElement, TTransformed)(Expression(Of Func(Of TRequest, IEnumerable(Of TElement))), Func(Of TElement, TTransformed))
  fullName.vb: FastEndpoints.Validation.AbstractValidator(Of TRequest).TransformForEach(Of TElement, TTransformed)(System.Linq.Expressions.Expression(Of System.Func(Of TRequest, System.Collections.Generic.IEnumerable(Of TElement))), System.Func(Of TElement, TTransformed))
  name.vb: TransformForEach(Of TElement, TTransformed)(Expression(Of Func(Of TRequest, IEnumerable(Of TElement))), Func(Of TElement, TTransformed))
  spec.csharp:
  - uid: FastEndpoints.Validation.AbstractValidator`1.TransformForEach``2(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Func{``0,``1})
    name: TransformForEach<TElement, TTransformed>
    nameWithType: AbstractValidator<TRequest>.TransformForEach<TElement, TTransformed>
    fullName: FastEndpoints.Validation.AbstractValidator<TRequest>.TransformForEach<TElement, TTransformed>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TElement
    nameWithType: TElement
    fullName: TElement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TElement
    nameWithType: TElement
    fullName: TElement
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TTransformed
    nameWithType: TTransformed
    fullName: TTransformed
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Validation.AbstractValidator`1.TransformForEach``2(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Func{``0,``1})
    name: TransformForEach(Of TElement, TTransformed)
    nameWithType: AbstractValidator(Of TRequest).TransformForEach(Of TElement, TTransformed)
    fullName: FastEndpoints.Validation.AbstractValidator(Of TRequest).TransformForEach(Of TElement, TTransformed)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TElement
    nameWithType: TElement
    fullName: TElement
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TElement
    nameWithType: TElement
    fullName: TElement
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TTransformed
    nameWithType: TTransformed
    fullName: TTransformed
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Validation.AbstractValidator{{TRequest}}.TransformForEach``2(System.Linq.Expressions.Expression{System.Func{{TRequest},System.Collections.Generic.IEnumerable{{TElement}}}},System.Func{{TRequest},{TElement},{TTransformed}})
  commentId: M:FastEndpoints.Validation.AbstractValidator{`0}.TransformForEach``2(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Func{`0,``0,``1})
  parent: FastEndpoints.Validation.AbstractValidator{{TRequest}}
  definition: FastEndpoints.Validation.AbstractValidator`1.TransformForEach``2(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Func{`0,``0,``1})
  name: TransformForEach<TElement, TTransformed>(Expression<Func<TRequest, IEnumerable<TElement>>>, Func<TRequest, TElement, TTransformed>)
  nameWithType: AbstractValidator<TRequest>.TransformForEach<TElement, TTransformed>(Expression<Func<TRequest, IEnumerable<TElement>>>, Func<TRequest, TElement, TTransformed>)
  fullName: FastEndpoints.Validation.AbstractValidator<TRequest>.TransformForEach<TElement, TTransformed>(System.Linq.Expressions.Expression<System.Func<TRequest, System.Collections.Generic.IEnumerable<TElement>>>, System.Func<TRequest, TElement, TTransformed>)
  nameWithType.vb: AbstractValidator(Of TRequest).TransformForEach(Of TElement, TTransformed)(Expression(Of Func(Of TRequest, IEnumerable(Of TElement))), Func(Of TRequest, TElement, TTransformed))
  fullName.vb: FastEndpoints.Validation.AbstractValidator(Of TRequest).TransformForEach(Of TElement, TTransformed)(System.Linq.Expressions.Expression(Of System.Func(Of TRequest, System.Collections.Generic.IEnumerable(Of TElement))), System.Func(Of TRequest, TElement, TTransformed))
  name.vb: TransformForEach(Of TElement, TTransformed)(Expression(Of Func(Of TRequest, IEnumerable(Of TElement))), Func(Of TRequest, TElement, TTransformed))
  spec.csharp:
  - uid: FastEndpoints.Validation.AbstractValidator`1.TransformForEach``2(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Func{`0,``0,``1})
    name: TransformForEach<TElement, TTransformed>
    nameWithType: AbstractValidator<TRequest>.TransformForEach<TElement, TTransformed>
    fullName: FastEndpoints.Validation.AbstractValidator<TRequest>.TransformForEach<TElement, TTransformed>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TElement
    nameWithType: TElement
    fullName: TElement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TElement
    nameWithType: TElement
    fullName: TElement
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TTransformed
    nameWithType: TTransformed
    fullName: TTransformed
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Validation.AbstractValidator`1.TransformForEach``2(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Func{`0,``0,``1})
    name: TransformForEach(Of TElement, TTransformed)
    nameWithType: AbstractValidator(Of TRequest).TransformForEach(Of TElement, TTransformed)
    fullName: FastEndpoints.Validation.AbstractValidator(Of TRequest).TransformForEach(Of TElement, TTransformed)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TElement
    nameWithType: TElement
    fullName: TElement
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TElement
    nameWithType: TElement
    fullName: TElement
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TTransformed
    nameWithType: TTransformed
    fullName: TTransformed
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Validation.AbstractValidator{{TRequest}}.RuleSet(System.String,System.Action)
  commentId: M:FastEndpoints.Validation.AbstractValidator{`0}.RuleSet(System.String,System.Action)
  parent: FastEndpoints.Validation.AbstractValidator{{TRequest}}
  definition: FastEndpoints.Validation.AbstractValidator`1.RuleSet(System.String,System.Action)
  name: RuleSet(String, Action)
  nameWithType: AbstractValidator<TRequest>.RuleSet(String, Action)
  fullName: FastEndpoints.Validation.AbstractValidator<TRequest>.RuleSet(System.String, System.Action)
  nameWithType.vb: AbstractValidator(Of TRequest).RuleSet(String, Action)
  fullName.vb: FastEndpoints.Validation.AbstractValidator(Of TRequest).RuleSet(System.String, System.Action)
  spec.csharp:
  - uid: FastEndpoints.Validation.AbstractValidator`1.RuleSet(System.String,System.Action)
    name: RuleSet
    nameWithType: AbstractValidator<TRequest>.RuleSet
    fullName: FastEndpoints.Validation.AbstractValidator<TRequest>.RuleSet
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Validation.AbstractValidator`1.RuleSet(System.String,System.Action)
    name: RuleSet
    nameWithType: AbstractValidator(Of TRequest).RuleSet
    fullName: FastEndpoints.Validation.AbstractValidator(Of TRequest).RuleSet
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Validation.AbstractValidator{{TRequest}}.When(System.Func{{TRequest},System.Boolean},System.Action)
  commentId: M:FastEndpoints.Validation.AbstractValidator{`0}.When(System.Func{`0,System.Boolean},System.Action)
  parent: FastEndpoints.Validation.AbstractValidator{{TRequest}}
  definition: FastEndpoints.Validation.AbstractValidator`1.When(System.Func{`0,System.Boolean},System.Action)
  name: When(Func<TRequest, Boolean>, Action)
  nameWithType: AbstractValidator<TRequest>.When(Func<TRequest, Boolean>, Action)
  fullName: FastEndpoints.Validation.AbstractValidator<TRequest>.When(System.Func<TRequest, System.Boolean>, System.Action)
  nameWithType.vb: AbstractValidator(Of TRequest).When(Func(Of TRequest, Boolean), Action)
  fullName.vb: FastEndpoints.Validation.AbstractValidator(Of TRequest).When(System.Func(Of TRequest, System.Boolean), System.Action)
  name.vb: When(Func(Of TRequest, Boolean), Action)
  spec.csharp:
  - uid: FastEndpoints.Validation.AbstractValidator`1.When(System.Func{`0,System.Boolean},System.Action)
    name: When
    nameWithType: AbstractValidator<TRequest>.When
    fullName: FastEndpoints.Validation.AbstractValidator<TRequest>.When
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Validation.AbstractValidator`1.When(System.Func{`0,System.Boolean},System.Action)
    name: When
    nameWithType: AbstractValidator(Of TRequest).When
    fullName: FastEndpoints.Validation.AbstractValidator(Of TRequest).When
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Validation.AbstractValidator{{TRequest}}.When(System.Func{{TRequest},FastEndpoints.Validation.ValidationContext{{TRequest}},System.Boolean},System.Action)
  commentId: M:FastEndpoints.Validation.AbstractValidator{`0}.When(System.Func{`0,FastEndpoints.Validation.ValidationContext{`0},System.Boolean},System.Action)
  parent: FastEndpoints.Validation.AbstractValidator{{TRequest}}
  definition: FastEndpoints.Validation.AbstractValidator`1.When(System.Func{`0,FastEndpoints.Validation.ValidationContext{`0},System.Boolean},System.Action)
  name: When(Func<TRequest, ValidationContext<TRequest>, Boolean>, Action)
  nameWithType: AbstractValidator<TRequest>.When(Func<TRequest, ValidationContext<TRequest>, Boolean>, Action)
  fullName: FastEndpoints.Validation.AbstractValidator<TRequest>.When(System.Func<TRequest, FastEndpoints.Validation.ValidationContext<TRequest>, System.Boolean>, System.Action)
  nameWithType.vb: AbstractValidator(Of TRequest).When(Func(Of TRequest, ValidationContext(Of TRequest), Boolean), Action)
  fullName.vb: FastEndpoints.Validation.AbstractValidator(Of TRequest).When(System.Func(Of TRequest, FastEndpoints.Validation.ValidationContext(Of TRequest), System.Boolean), System.Action)
  name.vb: When(Func(Of TRequest, ValidationContext(Of TRequest), Boolean), Action)
  spec.csharp:
  - uid: FastEndpoints.Validation.AbstractValidator`1.When(System.Func{`0,FastEndpoints.Validation.ValidationContext{`0},System.Boolean},System.Action)
    name: When
    nameWithType: AbstractValidator<TRequest>.When
    fullName: FastEndpoints.Validation.AbstractValidator<TRequest>.When
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: FastEndpoints.Validation.ValidationContext`1
    name: ValidationContext
    nameWithType: ValidationContext
    fullName: FastEndpoints.Validation.ValidationContext
  - name: <
    nameWithType: <
    fullName: <
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Validation.AbstractValidator`1.When(System.Func{`0,FastEndpoints.Validation.ValidationContext{`0},System.Boolean},System.Action)
    name: When
    nameWithType: AbstractValidator(Of TRequest).When
    fullName: FastEndpoints.Validation.AbstractValidator(Of TRequest).When
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: FastEndpoints.Validation.ValidationContext`1
    name: ValidationContext
    nameWithType: ValidationContext
    fullName: FastEndpoints.Validation.ValidationContext
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Validation.AbstractValidator{{TRequest}}.Unless(System.Func{{TRequest},System.Boolean},System.Action)
  commentId: M:FastEndpoints.Validation.AbstractValidator{`0}.Unless(System.Func{`0,System.Boolean},System.Action)
  parent: FastEndpoints.Validation.AbstractValidator{{TRequest}}
  definition: FastEndpoints.Validation.AbstractValidator`1.Unless(System.Func{`0,System.Boolean},System.Action)
  name: Unless(Func<TRequest, Boolean>, Action)
  nameWithType: AbstractValidator<TRequest>.Unless(Func<TRequest, Boolean>, Action)
  fullName: FastEndpoints.Validation.AbstractValidator<TRequest>.Unless(System.Func<TRequest, System.Boolean>, System.Action)
  nameWithType.vb: AbstractValidator(Of TRequest).Unless(Func(Of TRequest, Boolean), Action)
  fullName.vb: FastEndpoints.Validation.AbstractValidator(Of TRequest).Unless(System.Func(Of TRequest, System.Boolean), System.Action)
  name.vb: Unless(Func(Of TRequest, Boolean), Action)
  spec.csharp:
  - uid: FastEndpoints.Validation.AbstractValidator`1.Unless(System.Func{`0,System.Boolean},System.Action)
    name: Unless
    nameWithType: AbstractValidator<TRequest>.Unless
    fullName: FastEndpoints.Validation.AbstractValidator<TRequest>.Unless
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Validation.AbstractValidator`1.Unless(System.Func{`0,System.Boolean},System.Action)
    name: Unless
    nameWithType: AbstractValidator(Of TRequest).Unless
    fullName: FastEndpoints.Validation.AbstractValidator(Of TRequest).Unless
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Validation.AbstractValidator{{TRequest}}.Unless(System.Func{{TRequest},FastEndpoints.Validation.ValidationContext{{TRequest}},System.Boolean},System.Action)
  commentId: M:FastEndpoints.Validation.AbstractValidator{`0}.Unless(System.Func{`0,FastEndpoints.Validation.ValidationContext{`0},System.Boolean},System.Action)
  parent: FastEndpoints.Validation.AbstractValidator{{TRequest}}
  definition: FastEndpoints.Validation.AbstractValidator`1.Unless(System.Func{`0,FastEndpoints.Validation.ValidationContext{`0},System.Boolean},System.Action)
  name: Unless(Func<TRequest, ValidationContext<TRequest>, Boolean>, Action)
  nameWithType: AbstractValidator<TRequest>.Unless(Func<TRequest, ValidationContext<TRequest>, Boolean>, Action)
  fullName: FastEndpoints.Validation.AbstractValidator<TRequest>.Unless(System.Func<TRequest, FastEndpoints.Validation.ValidationContext<TRequest>, System.Boolean>, System.Action)
  nameWithType.vb: AbstractValidator(Of TRequest).Unless(Func(Of TRequest, ValidationContext(Of TRequest), Boolean), Action)
  fullName.vb: FastEndpoints.Validation.AbstractValidator(Of TRequest).Unless(System.Func(Of TRequest, FastEndpoints.Validation.ValidationContext(Of TRequest), System.Boolean), System.Action)
  name.vb: Unless(Func(Of TRequest, ValidationContext(Of TRequest), Boolean), Action)
  spec.csharp:
  - uid: FastEndpoints.Validation.AbstractValidator`1.Unless(System.Func{`0,FastEndpoints.Validation.ValidationContext{`0},System.Boolean},System.Action)
    name: Unless
    nameWithType: AbstractValidator<TRequest>.Unless
    fullName: FastEndpoints.Validation.AbstractValidator<TRequest>.Unless
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: FastEndpoints.Validation.ValidationContext`1
    name: ValidationContext
    nameWithType: ValidationContext
    fullName: FastEndpoints.Validation.ValidationContext
  - name: <
    nameWithType: <
    fullName: <
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Validation.AbstractValidator`1.Unless(System.Func{`0,FastEndpoints.Validation.ValidationContext{`0},System.Boolean},System.Action)
    name: Unless
    nameWithType: AbstractValidator(Of TRequest).Unless
    fullName: FastEndpoints.Validation.AbstractValidator(Of TRequest).Unless
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: FastEndpoints.Validation.ValidationContext`1
    name: ValidationContext
    nameWithType: ValidationContext
    fullName: FastEndpoints.Validation.ValidationContext
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Validation.AbstractValidator{{TRequest}}.WhenAsync(System.Func{{TRequest},System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
  commentId: M:FastEndpoints.Validation.AbstractValidator{`0}.WhenAsync(System.Func{`0,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
  parent: FastEndpoints.Validation.AbstractValidator{{TRequest}}
  definition: FastEndpoints.Validation.AbstractValidator`1.WhenAsync(System.Func{`0,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
  name: WhenAsync(Func<TRequest, CancellationToken, Task<Boolean>>, Action)
  nameWithType: AbstractValidator<TRequest>.WhenAsync(Func<TRequest, CancellationToken, Task<Boolean>>, Action)
  fullName: FastEndpoints.Validation.AbstractValidator<TRequest>.WhenAsync(System.Func<TRequest, System.Threading.CancellationToken, System.Threading.Tasks.Task<System.Boolean>>, System.Action)
  nameWithType.vb: AbstractValidator(Of TRequest).WhenAsync(Func(Of TRequest, CancellationToken, Task(Of Boolean)), Action)
  fullName.vb: FastEndpoints.Validation.AbstractValidator(Of TRequest).WhenAsync(System.Func(Of TRequest, System.Threading.CancellationToken, System.Threading.Tasks.Task(Of System.Boolean)), System.Action)
  name.vb: WhenAsync(Func(Of TRequest, CancellationToken, Task(Of Boolean)), Action)
  spec.csharp:
  - uid: FastEndpoints.Validation.AbstractValidator`1.WhenAsync(System.Func{`0,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
    name: WhenAsync
    nameWithType: AbstractValidator<TRequest>.WhenAsync
    fullName: FastEndpoints.Validation.AbstractValidator<TRequest>.WhenAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Validation.AbstractValidator`1.WhenAsync(System.Func{`0,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
    name: WhenAsync
    nameWithType: AbstractValidator(Of TRequest).WhenAsync
    fullName: FastEndpoints.Validation.AbstractValidator(Of TRequest).WhenAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Validation.AbstractValidator{{TRequest}}.WhenAsync(System.Func{{TRequest},FastEndpoints.Validation.ValidationContext{{TRequest}},System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
  commentId: M:FastEndpoints.Validation.AbstractValidator{`0}.WhenAsync(System.Func{`0,FastEndpoints.Validation.ValidationContext{`0},System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
  parent: FastEndpoints.Validation.AbstractValidator{{TRequest}}
  definition: FastEndpoints.Validation.AbstractValidator`1.WhenAsync(System.Func{`0,FastEndpoints.Validation.ValidationContext{`0},System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
  name: WhenAsync(Func<TRequest, ValidationContext<TRequest>, CancellationToken, Task<Boolean>>, Action)
  nameWithType: AbstractValidator<TRequest>.WhenAsync(Func<TRequest, ValidationContext<TRequest>, CancellationToken, Task<Boolean>>, Action)
  fullName: FastEndpoints.Validation.AbstractValidator<TRequest>.WhenAsync(System.Func<TRequest, FastEndpoints.Validation.ValidationContext<TRequest>, System.Threading.CancellationToken, System.Threading.Tasks.Task<System.Boolean>>, System.Action)
  nameWithType.vb: AbstractValidator(Of TRequest).WhenAsync(Func(Of TRequest, ValidationContext(Of TRequest), CancellationToken, Task(Of Boolean)), Action)
  fullName.vb: FastEndpoints.Validation.AbstractValidator(Of TRequest).WhenAsync(System.Func(Of TRequest, FastEndpoints.Validation.ValidationContext(Of TRequest), System.Threading.CancellationToken, System.Threading.Tasks.Task(Of System.Boolean)), System.Action)
  name.vb: WhenAsync(Func(Of TRequest, ValidationContext(Of TRequest), CancellationToken, Task(Of Boolean)), Action)
  spec.csharp:
  - uid: FastEndpoints.Validation.AbstractValidator`1.WhenAsync(System.Func{`0,FastEndpoints.Validation.ValidationContext{`0},System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
    name: WhenAsync
    nameWithType: AbstractValidator<TRequest>.WhenAsync
    fullName: FastEndpoints.Validation.AbstractValidator<TRequest>.WhenAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`4
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: FastEndpoints.Validation.ValidationContext`1
    name: ValidationContext
    nameWithType: ValidationContext
    fullName: FastEndpoints.Validation.ValidationContext
  - name: <
    nameWithType: <
    fullName: <
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Validation.AbstractValidator`1.WhenAsync(System.Func{`0,FastEndpoints.Validation.ValidationContext{`0},System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
    name: WhenAsync
    nameWithType: AbstractValidator(Of TRequest).WhenAsync
    fullName: FastEndpoints.Validation.AbstractValidator(Of TRequest).WhenAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`4
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: FastEndpoints.Validation.ValidationContext`1
    name: ValidationContext
    nameWithType: ValidationContext
    fullName: FastEndpoints.Validation.ValidationContext
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Validation.AbstractValidator{{TRequest}}.UnlessAsync(System.Func{{TRequest},System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
  commentId: M:FastEndpoints.Validation.AbstractValidator{`0}.UnlessAsync(System.Func{`0,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
  parent: FastEndpoints.Validation.AbstractValidator{{TRequest}}
  definition: FastEndpoints.Validation.AbstractValidator`1.UnlessAsync(System.Func{`0,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
  name: UnlessAsync(Func<TRequest, CancellationToken, Task<Boolean>>, Action)
  nameWithType: AbstractValidator<TRequest>.UnlessAsync(Func<TRequest, CancellationToken, Task<Boolean>>, Action)
  fullName: FastEndpoints.Validation.AbstractValidator<TRequest>.UnlessAsync(System.Func<TRequest, System.Threading.CancellationToken, System.Threading.Tasks.Task<System.Boolean>>, System.Action)
  nameWithType.vb: AbstractValidator(Of TRequest).UnlessAsync(Func(Of TRequest, CancellationToken, Task(Of Boolean)), Action)
  fullName.vb: FastEndpoints.Validation.AbstractValidator(Of TRequest).UnlessAsync(System.Func(Of TRequest, System.Threading.CancellationToken, System.Threading.Tasks.Task(Of System.Boolean)), System.Action)
  name.vb: UnlessAsync(Func(Of TRequest, CancellationToken, Task(Of Boolean)), Action)
  spec.csharp:
  - uid: FastEndpoints.Validation.AbstractValidator`1.UnlessAsync(System.Func{`0,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
    name: UnlessAsync
    nameWithType: AbstractValidator<TRequest>.UnlessAsync
    fullName: FastEndpoints.Validation.AbstractValidator<TRequest>.UnlessAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Validation.AbstractValidator`1.UnlessAsync(System.Func{`0,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
    name: UnlessAsync
    nameWithType: AbstractValidator(Of TRequest).UnlessAsync
    fullName: FastEndpoints.Validation.AbstractValidator(Of TRequest).UnlessAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Validation.AbstractValidator{{TRequest}}.UnlessAsync(System.Func{{TRequest},FastEndpoints.Validation.ValidationContext{{TRequest}},System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
  commentId: M:FastEndpoints.Validation.AbstractValidator{`0}.UnlessAsync(System.Func{`0,FastEndpoints.Validation.ValidationContext{`0},System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
  parent: FastEndpoints.Validation.AbstractValidator{{TRequest}}
  definition: FastEndpoints.Validation.AbstractValidator`1.UnlessAsync(System.Func{`0,FastEndpoints.Validation.ValidationContext{`0},System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
  name: UnlessAsync(Func<TRequest, ValidationContext<TRequest>, CancellationToken, Task<Boolean>>, Action)
  nameWithType: AbstractValidator<TRequest>.UnlessAsync(Func<TRequest, ValidationContext<TRequest>, CancellationToken, Task<Boolean>>, Action)
  fullName: FastEndpoints.Validation.AbstractValidator<TRequest>.UnlessAsync(System.Func<TRequest, FastEndpoints.Validation.ValidationContext<TRequest>, System.Threading.CancellationToken, System.Threading.Tasks.Task<System.Boolean>>, System.Action)
  nameWithType.vb: AbstractValidator(Of TRequest).UnlessAsync(Func(Of TRequest, ValidationContext(Of TRequest), CancellationToken, Task(Of Boolean)), Action)
  fullName.vb: FastEndpoints.Validation.AbstractValidator(Of TRequest).UnlessAsync(System.Func(Of TRequest, FastEndpoints.Validation.ValidationContext(Of TRequest), System.Threading.CancellationToken, System.Threading.Tasks.Task(Of System.Boolean)), System.Action)
  name.vb: UnlessAsync(Func(Of TRequest, ValidationContext(Of TRequest), CancellationToken, Task(Of Boolean)), Action)
  spec.csharp:
  - uid: FastEndpoints.Validation.AbstractValidator`1.UnlessAsync(System.Func{`0,FastEndpoints.Validation.ValidationContext{`0},System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
    name: UnlessAsync
    nameWithType: AbstractValidator<TRequest>.UnlessAsync
    fullName: FastEndpoints.Validation.AbstractValidator<TRequest>.UnlessAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`4
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: FastEndpoints.Validation.ValidationContext`1
    name: ValidationContext
    nameWithType: ValidationContext
    fullName: FastEndpoints.Validation.ValidationContext
  - name: <
    nameWithType: <
    fullName: <
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Validation.AbstractValidator`1.UnlessAsync(System.Func{`0,FastEndpoints.Validation.ValidationContext{`0},System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
    name: UnlessAsync
    nameWithType: AbstractValidator(Of TRequest).UnlessAsync
    fullName: FastEndpoints.Validation.AbstractValidator(Of TRequest).UnlessAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`4
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: FastEndpoints.Validation.ValidationContext`1
    name: ValidationContext
    nameWithType: ValidationContext
    fullName: FastEndpoints.Validation.ValidationContext
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Validation.AbstractValidator{{TRequest}}.Include(FastEndpoints.Validation.IValidator{{TRequest}})
  commentId: M:FastEndpoints.Validation.AbstractValidator{`0}.Include(FastEndpoints.Validation.IValidator{`0})
  parent: FastEndpoints.Validation.AbstractValidator{{TRequest}}
  definition: FastEndpoints.Validation.AbstractValidator`1.Include(FastEndpoints.Validation.IValidator{`0})
  name: Include(IValidator<TRequest>)
  nameWithType: AbstractValidator<TRequest>.Include(IValidator<TRequest>)
  fullName: FastEndpoints.Validation.AbstractValidator<TRequest>.Include(FastEndpoints.Validation.IValidator<TRequest>)
  nameWithType.vb: AbstractValidator(Of TRequest).Include(IValidator(Of TRequest))
  fullName.vb: FastEndpoints.Validation.AbstractValidator(Of TRequest).Include(FastEndpoints.Validation.IValidator(Of TRequest))
  name.vb: Include(IValidator(Of TRequest))
  spec.csharp:
  - uid: FastEndpoints.Validation.AbstractValidator`1.Include(FastEndpoints.Validation.IValidator{`0})
    name: Include
    nameWithType: AbstractValidator<TRequest>.Include
    fullName: FastEndpoints.Validation.AbstractValidator<TRequest>.Include
  - name: (
    nameWithType: (
    fullName: (
  - uid: FastEndpoints.Validation.IValidator`1
    name: IValidator
    nameWithType: IValidator
    fullName: FastEndpoints.Validation.IValidator
  - name: <
    nameWithType: <
    fullName: <
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Validation.AbstractValidator`1.Include(FastEndpoints.Validation.IValidator{`0})
    name: Include
    nameWithType: AbstractValidator(Of TRequest).Include
    fullName: FastEndpoints.Validation.AbstractValidator(Of TRequest).Include
  - name: (
    nameWithType: (
    fullName: (
  - uid: FastEndpoints.Validation.IValidator`1
    name: IValidator
    nameWithType: IValidator
    fullName: FastEndpoints.Validation.IValidator
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Validation.AbstractValidator{{TRequest}}.Include``1(System.Func{{TRequest},{TValidator}})
  commentId: M:FastEndpoints.Validation.AbstractValidator{`0}.Include``1(System.Func{`0,``0})
  parent: FastEndpoints.Validation.AbstractValidator{{TRequest}}
  definition: FastEndpoints.Validation.AbstractValidator`1.Include``1(System.Func{`0,``0})
  name: Include<TValidator>(Func<TRequest, TValidator>)
  nameWithType: AbstractValidator<TRequest>.Include<TValidator>(Func<TRequest, TValidator>)
  fullName: FastEndpoints.Validation.AbstractValidator<TRequest>.Include<TValidator>(System.Func<TRequest, TValidator>)
  nameWithType.vb: AbstractValidator(Of TRequest).Include(Of TValidator)(Func(Of TRequest, TValidator))
  fullName.vb: FastEndpoints.Validation.AbstractValidator(Of TRequest).Include(Of TValidator)(System.Func(Of TRequest, TValidator))
  name.vb: Include(Of TValidator)(Func(Of TRequest, TValidator))
  spec.csharp:
  - uid: FastEndpoints.Validation.AbstractValidator`1.Include``1(System.Func{`0,``0})
    name: Include<TValidator>
    nameWithType: AbstractValidator<TRequest>.Include<TValidator>
    fullName: FastEndpoints.Validation.AbstractValidator<TRequest>.Include<TValidator>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValidator
    nameWithType: TValidator
    fullName: TValidator
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Validation.AbstractValidator`1.Include``1(System.Func{`0,``0})
    name: Include(Of TValidator)
    nameWithType: AbstractValidator(Of TRequest).Include(Of TValidator)
    fullName: FastEndpoints.Validation.AbstractValidator(Of TRequest).Include(Of TValidator)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValidator
    nameWithType: TValidator
    fullName: TValidator
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Validation.AbstractValidator{{TRequest}}.GetEnumerator
  commentId: M:FastEndpoints.Validation.AbstractValidator{`0}.GetEnumerator
  parent: FastEndpoints.Validation.AbstractValidator{{TRequest}}
  definition: FastEndpoints.Validation.AbstractValidator`1.GetEnumerator
  name: GetEnumerator()
  nameWithType: AbstractValidator<TRequest>.GetEnumerator()
  fullName: FastEndpoints.Validation.AbstractValidator<TRequest>.GetEnumerator()
  nameWithType.vb: AbstractValidator(Of TRequest).GetEnumerator()
  fullName.vb: FastEndpoints.Validation.AbstractValidator(Of TRequest).GetEnumerator()
  spec.csharp:
  - uid: FastEndpoints.Validation.AbstractValidator`1.GetEnumerator
    name: GetEnumerator
    nameWithType: AbstractValidator<TRequest>.GetEnumerator
    fullName: FastEndpoints.Validation.AbstractValidator<TRequest>.GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Validation.AbstractValidator`1.GetEnumerator
    name: GetEnumerator
    nameWithType: AbstractValidator(Of TRequest).GetEnumerator
    fullName: FastEndpoints.Validation.AbstractValidator(Of TRequest).GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Validation.AbstractValidator{{TRequest}}.System#Collections#IEnumerable#GetEnumerator
  commentId: M:FastEndpoints.Validation.AbstractValidator{`0}.System#Collections#IEnumerable#GetEnumerator
  parent: FastEndpoints.Validation.AbstractValidator{{TRequest}}
  definition: FastEndpoints.Validation.AbstractValidator`1.System#Collections#IEnumerable#GetEnumerator
  name: IEnumerable.GetEnumerator()
  nameWithType: AbstractValidator<TRequest>.IEnumerable.GetEnumerator()
  fullName: FastEndpoints.Validation.AbstractValidator<TRequest>.System.Collections.IEnumerable.GetEnumerator()
  nameWithType.vb: AbstractValidator(Of TRequest).System.Collections.IEnumerable.GetEnumerator()
  fullName.vb: FastEndpoints.Validation.AbstractValidator(Of TRequest).System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: FastEndpoints.Validation.AbstractValidator`1.System#Collections#IEnumerable#GetEnumerator
    name: IEnumerable.GetEnumerator
    nameWithType: AbstractValidator<TRequest>.IEnumerable.GetEnumerator
    fullName: FastEndpoints.Validation.AbstractValidator<TRequest>.System.Collections.IEnumerable.GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Validation.AbstractValidator`1.System#Collections#IEnumerable#GetEnumerator
    name: System.Collections.IEnumerable.GetEnumerator
    nameWithType: AbstractValidator(Of TRequest).System.Collections.IEnumerable.GetEnumerator
    fullName: FastEndpoints.Validation.AbstractValidator(Of TRequest).System.Collections.IEnumerable.GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Validation.AbstractValidator{{TRequest}}.EnsureInstanceNotNull(System.Object)
  commentId: M:FastEndpoints.Validation.AbstractValidator{`0}.EnsureInstanceNotNull(System.Object)
  parent: FastEndpoints.Validation.AbstractValidator{{TRequest}}
  definition: FastEndpoints.Validation.AbstractValidator`1.EnsureInstanceNotNull(System.Object)
  name: EnsureInstanceNotNull(Object)
  nameWithType: AbstractValidator<TRequest>.EnsureInstanceNotNull(Object)
  fullName: FastEndpoints.Validation.AbstractValidator<TRequest>.EnsureInstanceNotNull(System.Object)
  nameWithType.vb: AbstractValidator(Of TRequest).EnsureInstanceNotNull(Object)
  fullName.vb: FastEndpoints.Validation.AbstractValidator(Of TRequest).EnsureInstanceNotNull(System.Object)
  spec.csharp:
  - uid: FastEndpoints.Validation.AbstractValidator`1.EnsureInstanceNotNull(System.Object)
    name: EnsureInstanceNotNull
    nameWithType: AbstractValidator<TRequest>.EnsureInstanceNotNull
    fullName: FastEndpoints.Validation.AbstractValidator<TRequest>.EnsureInstanceNotNull
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Validation.AbstractValidator`1.EnsureInstanceNotNull(System.Object)
    name: EnsureInstanceNotNull
    nameWithType: AbstractValidator(Of TRequest).EnsureInstanceNotNull
    fullName: FastEndpoints.Validation.AbstractValidator(Of TRequest).EnsureInstanceNotNull
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Validation.AbstractValidator{{TRequest}}.PreValidate(FastEndpoints.Validation.ValidationContext{{TRequest}},FastEndpoints.Validation.Results.ValidationResult)
  commentId: M:FastEndpoints.Validation.AbstractValidator{`0}.PreValidate(FastEndpoints.Validation.ValidationContext{`0},FastEndpoints.Validation.Results.ValidationResult)
  parent: FastEndpoints.Validation.AbstractValidator{{TRequest}}
  definition: FastEndpoints.Validation.AbstractValidator`1.PreValidate(FastEndpoints.Validation.ValidationContext{`0},FastEndpoints.Validation.Results.ValidationResult)
  name: PreValidate(ValidationContext<TRequest>, ValidationResult)
  nameWithType: AbstractValidator<TRequest>.PreValidate(ValidationContext<TRequest>, ValidationResult)
  fullName: FastEndpoints.Validation.AbstractValidator<TRequest>.PreValidate(FastEndpoints.Validation.ValidationContext<TRequest>, FastEndpoints.Validation.Results.ValidationResult)
  nameWithType.vb: AbstractValidator(Of TRequest).PreValidate(ValidationContext(Of TRequest), ValidationResult)
  fullName.vb: FastEndpoints.Validation.AbstractValidator(Of TRequest).PreValidate(FastEndpoints.Validation.ValidationContext(Of TRequest), FastEndpoints.Validation.Results.ValidationResult)
  name.vb: PreValidate(ValidationContext(Of TRequest), ValidationResult)
  spec.csharp:
  - uid: FastEndpoints.Validation.AbstractValidator`1.PreValidate(FastEndpoints.Validation.ValidationContext{`0},FastEndpoints.Validation.Results.ValidationResult)
    name: PreValidate
    nameWithType: AbstractValidator<TRequest>.PreValidate
    fullName: FastEndpoints.Validation.AbstractValidator<TRequest>.PreValidate
  - name: (
    nameWithType: (
    fullName: (
  - uid: FastEndpoints.Validation.ValidationContext`1
    name: ValidationContext
    nameWithType: ValidationContext
    fullName: FastEndpoints.Validation.ValidationContext
  - name: <
    nameWithType: <
    fullName: <
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: FastEndpoints.Validation.Results.ValidationResult
    name: ValidationResult
    nameWithType: ValidationResult
    fullName: FastEndpoints.Validation.Results.ValidationResult
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Validation.AbstractValidator`1.PreValidate(FastEndpoints.Validation.ValidationContext{`0},FastEndpoints.Validation.Results.ValidationResult)
    name: PreValidate
    nameWithType: AbstractValidator(Of TRequest).PreValidate
    fullName: FastEndpoints.Validation.AbstractValidator(Of TRequest).PreValidate
  - name: (
    nameWithType: (
    fullName: (
  - uid: FastEndpoints.Validation.ValidationContext`1
    name: ValidationContext
    nameWithType: ValidationContext
    fullName: FastEndpoints.Validation.ValidationContext
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: FastEndpoints.Validation.Results.ValidationResult
    name: ValidationResult
    nameWithType: ValidationResult
    fullName: FastEndpoints.Validation.Results.ValidationResult
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Validation.AbstractValidator{{TRequest}}.RaiseValidationException(FastEndpoints.Validation.ValidationContext{{TRequest}},FastEndpoints.Validation.Results.ValidationResult)
  commentId: M:FastEndpoints.Validation.AbstractValidator{`0}.RaiseValidationException(FastEndpoints.Validation.ValidationContext{`0},FastEndpoints.Validation.Results.ValidationResult)
  parent: FastEndpoints.Validation.AbstractValidator{{TRequest}}
  definition: FastEndpoints.Validation.AbstractValidator`1.RaiseValidationException(FastEndpoints.Validation.ValidationContext{`0},FastEndpoints.Validation.Results.ValidationResult)
  name: RaiseValidationException(ValidationContext<TRequest>, ValidationResult)
  nameWithType: AbstractValidator<TRequest>.RaiseValidationException(ValidationContext<TRequest>, ValidationResult)
  fullName: FastEndpoints.Validation.AbstractValidator<TRequest>.RaiseValidationException(FastEndpoints.Validation.ValidationContext<TRequest>, FastEndpoints.Validation.Results.ValidationResult)
  nameWithType.vb: AbstractValidator(Of TRequest).RaiseValidationException(ValidationContext(Of TRequest), ValidationResult)
  fullName.vb: FastEndpoints.Validation.AbstractValidator(Of TRequest).RaiseValidationException(FastEndpoints.Validation.ValidationContext(Of TRequest), FastEndpoints.Validation.Results.ValidationResult)
  name.vb: RaiseValidationException(ValidationContext(Of TRequest), ValidationResult)
  spec.csharp:
  - uid: FastEndpoints.Validation.AbstractValidator`1.RaiseValidationException(FastEndpoints.Validation.ValidationContext{`0},FastEndpoints.Validation.Results.ValidationResult)
    name: RaiseValidationException
    nameWithType: AbstractValidator<TRequest>.RaiseValidationException
    fullName: FastEndpoints.Validation.AbstractValidator<TRequest>.RaiseValidationException
  - name: (
    nameWithType: (
    fullName: (
  - uid: FastEndpoints.Validation.ValidationContext`1
    name: ValidationContext
    nameWithType: ValidationContext
    fullName: FastEndpoints.Validation.ValidationContext
  - name: <
    nameWithType: <
    fullName: <
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: FastEndpoints.Validation.Results.ValidationResult
    name: ValidationResult
    nameWithType: ValidationResult
    fullName: FastEndpoints.Validation.Results.ValidationResult
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Validation.AbstractValidator`1.RaiseValidationException(FastEndpoints.Validation.ValidationContext{`0},FastEndpoints.Validation.Results.ValidationResult)
    name: RaiseValidationException
    nameWithType: AbstractValidator(Of TRequest).RaiseValidationException
    fullName: FastEndpoints.Validation.AbstractValidator(Of TRequest).RaiseValidationException
  - name: (
    nameWithType: (
    fullName: (
  - uid: FastEndpoints.Validation.ValidationContext`1
    name: ValidationContext
    nameWithType: ValidationContext
    fullName: FastEndpoints.Validation.ValidationContext
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: FastEndpoints.Validation.Results.ValidationResult
    name: ValidationResult
    nameWithType: ValidationResult
    fullName: FastEndpoints.Validation.Results.ValidationResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: FastEndpoints.Validation.AbstractValidator`1
  commentId: T:FastEndpoints.Validation.AbstractValidator`1
  name: AbstractValidator<T>
  nameWithType: AbstractValidator<T>
  fullName: FastEndpoints.Validation.AbstractValidator<T>
  nameWithType.vb: AbstractValidator(Of T)
  fullName.vb: FastEndpoints.Validation.AbstractValidator(Of T)
  name.vb: AbstractValidator(Of T)
  spec.csharp:
  - uid: FastEndpoints.Validation.AbstractValidator`1
    name: AbstractValidator
    nameWithType: AbstractValidator
    fullName: FastEndpoints.Validation.AbstractValidator
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: FastEndpoints.Validation.AbstractValidator`1
    name: AbstractValidator
    nameWithType: AbstractValidator
    fullName: FastEndpoints.Validation.AbstractValidator
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Validation.IValidator`1
  commentId: T:FastEndpoints.Validation.IValidator`1
  name: IValidator<T>
  nameWithType: IValidator<T>
  fullName: FastEndpoints.Validation.IValidator<T>
  nameWithType.vb: IValidator(Of T)
  fullName.vb: FastEndpoints.Validation.IValidator(Of T)
  name.vb: IValidator(Of T)
  spec.csharp:
  - uid: FastEndpoints.Validation.IValidator`1
    name: IValidator
    nameWithType: IValidator
    fullName: FastEndpoints.Validation.IValidator
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: FastEndpoints.Validation.IValidator`1
    name: IValidator
    nameWithType: IValidator
    fullName: FastEndpoints.Validation.IValidator
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: FastEndpoints.Validation.AbstractValidator`1.CascadeMode
  commentId: P:FastEndpoints.Validation.AbstractValidator`1.CascadeMode
  name: CascadeMode
  nameWithType: AbstractValidator<T>.CascadeMode
  fullName: FastEndpoints.Validation.AbstractValidator<T>.CascadeMode
  nameWithType.vb: AbstractValidator(Of T).CascadeMode
  fullName.vb: FastEndpoints.Validation.AbstractValidator(Of T).CascadeMode
- uid: FastEndpoints.Validation.AbstractValidator`1.FastEndpoints#Validation#IValidator#Validate(FastEndpoints.Validation.IValidationContext)
  commentId: M:FastEndpoints.Validation.AbstractValidator`1.FastEndpoints#Validation#IValidator#Validate(FastEndpoints.Validation.IValidationContext)
  name: IValidator.Validate(IValidationContext)
  nameWithType: AbstractValidator<T>.IValidator.Validate(IValidationContext)
  fullName: FastEndpoints.Validation.AbstractValidator<T>.FastEndpoints.Validation.IValidator.Validate(FastEndpoints.Validation.IValidationContext)
  nameWithType.vb: AbstractValidator(Of T).FastEndpoints.Validation.IValidator.Validate(IValidationContext)
  fullName.vb: FastEndpoints.Validation.AbstractValidator(Of T).FastEndpoints.Validation.IValidator.Validate(FastEndpoints.Validation.IValidationContext)
  name.vb: FastEndpoints.Validation.IValidator.Validate(IValidationContext)
  spec.csharp:
  - uid: FastEndpoints.Validation.AbstractValidator`1.FastEndpoints#Validation#IValidator#Validate(FastEndpoints.Validation.IValidationContext)
    name: IValidator.Validate
    nameWithType: AbstractValidator<T>.IValidator.Validate
    fullName: FastEndpoints.Validation.AbstractValidator<T>.FastEndpoints.Validation.IValidator.Validate
  - name: (
    nameWithType: (
    fullName: (
  - uid: FastEndpoints.Validation.IValidationContext
    name: IValidationContext
    nameWithType: IValidationContext
    fullName: FastEndpoints.Validation.IValidationContext
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Validation.AbstractValidator`1.FastEndpoints#Validation#IValidator#Validate(FastEndpoints.Validation.IValidationContext)
    name: FastEndpoints.Validation.IValidator.Validate
    nameWithType: AbstractValidator(Of T).FastEndpoints.Validation.IValidator.Validate
    fullName: FastEndpoints.Validation.AbstractValidator(Of T).FastEndpoints.Validation.IValidator.Validate
  - name: (
    nameWithType: (
    fullName: (
  - uid: FastEndpoints.Validation.IValidationContext
    name: IValidationContext
    nameWithType: IValidationContext
    fullName: FastEndpoints.Validation.IValidationContext
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Validation.AbstractValidator`1.FastEndpoints#Validation#IValidator#ValidateAsync(FastEndpoints.Validation.IValidationContext,System.Threading.CancellationToken)
  commentId: M:FastEndpoints.Validation.AbstractValidator`1.FastEndpoints#Validation#IValidator#ValidateAsync(FastEndpoints.Validation.IValidationContext,System.Threading.CancellationToken)
  isExternal: true
  name: IValidator.ValidateAsync(IValidationContext, CancellationToken)
  nameWithType: AbstractValidator<T>.IValidator.ValidateAsync(IValidationContext, CancellationToken)
  fullName: FastEndpoints.Validation.AbstractValidator<T>.FastEndpoints.Validation.IValidator.ValidateAsync(FastEndpoints.Validation.IValidationContext, System.Threading.CancellationToken)
  nameWithType.vb: AbstractValidator(Of T).FastEndpoints.Validation.IValidator.ValidateAsync(IValidationContext, CancellationToken)
  fullName.vb: FastEndpoints.Validation.AbstractValidator(Of T).FastEndpoints.Validation.IValidator.ValidateAsync(FastEndpoints.Validation.IValidationContext, System.Threading.CancellationToken)
  name.vb: FastEndpoints.Validation.IValidator.ValidateAsync(IValidationContext, CancellationToken)
  spec.csharp:
  - uid: FastEndpoints.Validation.AbstractValidator`1.FastEndpoints#Validation#IValidator#ValidateAsync(FastEndpoints.Validation.IValidationContext,System.Threading.CancellationToken)
    name: IValidator.ValidateAsync
    nameWithType: AbstractValidator<T>.IValidator.ValidateAsync
    fullName: FastEndpoints.Validation.AbstractValidator<T>.FastEndpoints.Validation.IValidator.ValidateAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: FastEndpoints.Validation.IValidationContext
    name: IValidationContext
    nameWithType: IValidationContext
    fullName: FastEndpoints.Validation.IValidationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Validation.AbstractValidator`1.FastEndpoints#Validation#IValidator#ValidateAsync(FastEndpoints.Validation.IValidationContext,System.Threading.CancellationToken)
    name: FastEndpoints.Validation.IValidator.ValidateAsync
    nameWithType: AbstractValidator(Of T).FastEndpoints.Validation.IValidator.ValidateAsync
    fullName: FastEndpoints.Validation.AbstractValidator(Of T).FastEndpoints.Validation.IValidator.ValidateAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: FastEndpoints.Validation.IValidationContext
    name: IValidationContext
    nameWithType: IValidationContext
    fullName: FastEndpoints.Validation.IValidationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Validation.AbstractValidator`1.Validate(`0)
  commentId: M:FastEndpoints.Validation.AbstractValidator`1.Validate(`0)
  name: Validate(T)
  nameWithType: AbstractValidator<T>.Validate(T)
  fullName: FastEndpoints.Validation.AbstractValidator<T>.Validate(T)
  nameWithType.vb: AbstractValidator(Of T).Validate(T)
  fullName.vb: FastEndpoints.Validation.AbstractValidator(Of T).Validate(T)
  spec.csharp:
  - uid: FastEndpoints.Validation.AbstractValidator`1.Validate(`0)
    name: Validate
    nameWithType: AbstractValidator<T>.Validate
    fullName: FastEndpoints.Validation.AbstractValidator<T>.Validate
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Validation.AbstractValidator`1.Validate(`0)
    name: Validate
    nameWithType: AbstractValidator(Of T).Validate
    fullName: FastEndpoints.Validation.AbstractValidator(Of T).Validate
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Validation.AbstractValidator`1.ValidateAsync(`0,System.Threading.CancellationToken)
  commentId: M:FastEndpoints.Validation.AbstractValidator`1.ValidateAsync(`0,System.Threading.CancellationToken)
  isExternal: true
  name: ValidateAsync(T, CancellationToken)
  nameWithType: AbstractValidator<T>.ValidateAsync(T, CancellationToken)
  fullName: FastEndpoints.Validation.AbstractValidator<T>.ValidateAsync(T, System.Threading.CancellationToken)
  nameWithType.vb: AbstractValidator(Of T).ValidateAsync(T, CancellationToken)
  fullName.vb: FastEndpoints.Validation.AbstractValidator(Of T).ValidateAsync(T, System.Threading.CancellationToken)
  spec.csharp:
  - uid: FastEndpoints.Validation.AbstractValidator`1.ValidateAsync(`0,System.Threading.CancellationToken)
    name: ValidateAsync
    nameWithType: AbstractValidator<T>.ValidateAsync
    fullName: FastEndpoints.Validation.AbstractValidator<T>.ValidateAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Validation.AbstractValidator`1.ValidateAsync(`0,System.Threading.CancellationToken)
    name: ValidateAsync
    nameWithType: AbstractValidator(Of T).ValidateAsync
    fullName: FastEndpoints.Validation.AbstractValidator(Of T).ValidateAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Validation.AbstractValidator`1.Validate(FastEndpoints.Validation.ValidationContext{`0})
  commentId: M:FastEndpoints.Validation.AbstractValidator`1.Validate(FastEndpoints.Validation.ValidationContext{`0})
  name: Validate(ValidationContext<T>)
  nameWithType: AbstractValidator<T>.Validate(ValidationContext<T>)
  fullName: FastEndpoints.Validation.AbstractValidator<T>.Validate(FastEndpoints.Validation.ValidationContext<T>)
  nameWithType.vb: AbstractValidator(Of T).Validate(ValidationContext(Of T))
  fullName.vb: FastEndpoints.Validation.AbstractValidator(Of T).Validate(FastEndpoints.Validation.ValidationContext(Of T))
  name.vb: Validate(ValidationContext(Of T))
  spec.csharp:
  - uid: FastEndpoints.Validation.AbstractValidator`1.Validate(FastEndpoints.Validation.ValidationContext{`0})
    name: Validate
    nameWithType: AbstractValidator<T>.Validate
    fullName: FastEndpoints.Validation.AbstractValidator<T>.Validate
  - name: (
    nameWithType: (
    fullName: (
  - uid: FastEndpoints.Validation.ValidationContext`1
    name: ValidationContext
    nameWithType: ValidationContext
    fullName: FastEndpoints.Validation.ValidationContext
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Validation.AbstractValidator`1.Validate(FastEndpoints.Validation.ValidationContext{`0})
    name: Validate
    nameWithType: AbstractValidator(Of T).Validate
    fullName: FastEndpoints.Validation.AbstractValidator(Of T).Validate
  - name: (
    nameWithType: (
    fullName: (
  - uid: FastEndpoints.Validation.ValidationContext`1
    name: ValidationContext
    nameWithType: ValidationContext
    fullName: FastEndpoints.Validation.ValidationContext
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Validation.AbstractValidator`1.ValidateAsync(FastEndpoints.Validation.ValidationContext{`0},System.Threading.CancellationToken)
  commentId: M:FastEndpoints.Validation.AbstractValidator`1.ValidateAsync(FastEndpoints.Validation.ValidationContext{`0},System.Threading.CancellationToken)
  isExternal: true
  name: ValidateAsync(ValidationContext<T>, CancellationToken)
  nameWithType: AbstractValidator<T>.ValidateAsync(ValidationContext<T>, CancellationToken)
  fullName: FastEndpoints.Validation.AbstractValidator<T>.ValidateAsync(FastEndpoints.Validation.ValidationContext<T>, System.Threading.CancellationToken)
  nameWithType.vb: AbstractValidator(Of T).ValidateAsync(ValidationContext(Of T), CancellationToken)
  fullName.vb: FastEndpoints.Validation.AbstractValidator(Of T).ValidateAsync(FastEndpoints.Validation.ValidationContext(Of T), System.Threading.CancellationToken)
  name.vb: ValidateAsync(ValidationContext(Of T), CancellationToken)
  spec.csharp:
  - uid: FastEndpoints.Validation.AbstractValidator`1.ValidateAsync(FastEndpoints.Validation.ValidationContext{`0},System.Threading.CancellationToken)
    name: ValidateAsync
    nameWithType: AbstractValidator<T>.ValidateAsync
    fullName: FastEndpoints.Validation.AbstractValidator<T>.ValidateAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: FastEndpoints.Validation.ValidationContext`1
    name: ValidationContext
    nameWithType: ValidationContext
    fullName: FastEndpoints.Validation.ValidationContext
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Validation.AbstractValidator`1.ValidateAsync(FastEndpoints.Validation.ValidationContext{`0},System.Threading.CancellationToken)
    name: ValidateAsync
    nameWithType: AbstractValidator(Of T).ValidateAsync
    fullName: FastEndpoints.Validation.AbstractValidator(Of T).ValidateAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: FastEndpoints.Validation.ValidationContext`1
    name: ValidationContext
    nameWithType: ValidationContext
    fullName: FastEndpoints.Validation.ValidationContext
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Validation.AbstractValidator`1.CreateDescriptor
  commentId: M:FastEndpoints.Validation.AbstractValidator`1.CreateDescriptor
  name: CreateDescriptor()
  nameWithType: AbstractValidator<T>.CreateDescriptor()
  fullName: FastEndpoints.Validation.AbstractValidator<T>.CreateDescriptor()
  nameWithType.vb: AbstractValidator(Of T).CreateDescriptor()
  fullName.vb: FastEndpoints.Validation.AbstractValidator(Of T).CreateDescriptor()
  spec.csharp:
  - uid: FastEndpoints.Validation.AbstractValidator`1.CreateDescriptor
    name: CreateDescriptor
    nameWithType: AbstractValidator<T>.CreateDescriptor
    fullName: FastEndpoints.Validation.AbstractValidator<T>.CreateDescriptor
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Validation.AbstractValidator`1.CreateDescriptor
    name: CreateDescriptor
    nameWithType: AbstractValidator(Of T).CreateDescriptor
    fullName: FastEndpoints.Validation.AbstractValidator(Of T).CreateDescriptor
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Validation.AbstractValidator`1.FastEndpoints#Validation#IValidator#CanValidateInstancesOfType(System.Type)
  commentId: M:FastEndpoints.Validation.AbstractValidator`1.FastEndpoints#Validation#IValidator#CanValidateInstancesOfType(System.Type)
  isExternal: true
  name: IValidator.CanValidateInstancesOfType(Type)
  nameWithType: AbstractValidator<T>.IValidator.CanValidateInstancesOfType(Type)
  fullName: FastEndpoints.Validation.AbstractValidator<T>.FastEndpoints.Validation.IValidator.CanValidateInstancesOfType(System.Type)
  nameWithType.vb: AbstractValidator(Of T).FastEndpoints.Validation.IValidator.CanValidateInstancesOfType(Type)
  fullName.vb: FastEndpoints.Validation.AbstractValidator(Of T).FastEndpoints.Validation.IValidator.CanValidateInstancesOfType(System.Type)
  name.vb: FastEndpoints.Validation.IValidator.CanValidateInstancesOfType(Type)
  spec.csharp:
  - uid: FastEndpoints.Validation.AbstractValidator`1.FastEndpoints#Validation#IValidator#CanValidateInstancesOfType(System.Type)
    name: IValidator.CanValidateInstancesOfType
    nameWithType: AbstractValidator<T>.IValidator.CanValidateInstancesOfType
    fullName: FastEndpoints.Validation.AbstractValidator<T>.FastEndpoints.Validation.IValidator.CanValidateInstancesOfType
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Validation.AbstractValidator`1.FastEndpoints#Validation#IValidator#CanValidateInstancesOfType(System.Type)
    name: FastEndpoints.Validation.IValidator.CanValidateInstancesOfType
    nameWithType: AbstractValidator(Of T).FastEndpoints.Validation.IValidator.CanValidateInstancesOfType
    fullName: FastEndpoints.Validation.AbstractValidator(Of T).FastEndpoints.Validation.IValidator.CanValidateInstancesOfType
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Validation.AbstractValidator`1.RuleFor``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})
  commentId: M:FastEndpoints.Validation.AbstractValidator`1.RuleFor``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})
  isExternal: true
  name: RuleFor<TProperty>(Expression<Func<T, TProperty>>)
  nameWithType: AbstractValidator<T>.RuleFor<TProperty>(Expression<Func<T, TProperty>>)
  fullName: FastEndpoints.Validation.AbstractValidator<T>.RuleFor<TProperty>(System.Linq.Expressions.Expression<System.Func<T, TProperty>>)
  nameWithType.vb: AbstractValidator(Of T).RuleFor(Of TProperty)(Expression(Of Func(Of T, TProperty)))
  fullName.vb: FastEndpoints.Validation.AbstractValidator(Of T).RuleFor(Of TProperty)(System.Linq.Expressions.Expression(Of System.Func(Of T, TProperty)))
  name.vb: RuleFor(Of TProperty)(Expression(Of Func(Of T, TProperty)))
  spec.csharp:
  - uid: FastEndpoints.Validation.AbstractValidator`1.RuleFor``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})
    name: RuleFor<TProperty>
    nameWithType: AbstractValidator<T>.RuleFor<TProperty>
    fullName: FastEndpoints.Validation.AbstractValidator<T>.RuleFor<TProperty>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TProperty
    nameWithType: TProperty
    fullName: TProperty
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Validation.AbstractValidator`1.RuleFor``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})
    name: RuleFor(Of TProperty)
    nameWithType: AbstractValidator(Of T).RuleFor(Of TProperty)
    fullName: FastEndpoints.Validation.AbstractValidator(Of T).RuleFor(Of TProperty)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TProperty
    nameWithType: TProperty
    fullName: TProperty
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Validation.AbstractValidator`1.Transform``2(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Func{``0,``1})
  commentId: M:FastEndpoints.Validation.AbstractValidator`1.Transform``2(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Func{``0,``1})
  isExternal: true
  name: Transform<TProperty, TTransformed>(Expression<Func<T, TProperty>>, Func<TProperty, TTransformed>)
  nameWithType: AbstractValidator<T>.Transform<TProperty, TTransformed>(Expression<Func<T, TProperty>>, Func<TProperty, TTransformed>)
  fullName: FastEndpoints.Validation.AbstractValidator<T>.Transform<TProperty, TTransformed>(System.Linq.Expressions.Expression<System.Func<T, TProperty>>, System.Func<TProperty, TTransformed>)
  nameWithType.vb: AbstractValidator(Of T).Transform(Of TProperty, TTransformed)(Expression(Of Func(Of T, TProperty)), Func(Of TProperty, TTransformed))
  fullName.vb: FastEndpoints.Validation.AbstractValidator(Of T).Transform(Of TProperty, TTransformed)(System.Linq.Expressions.Expression(Of System.Func(Of T, TProperty)), System.Func(Of TProperty, TTransformed))
  name.vb: Transform(Of TProperty, TTransformed)(Expression(Of Func(Of T, TProperty)), Func(Of TProperty, TTransformed))
  spec.csharp:
  - uid: FastEndpoints.Validation.AbstractValidator`1.Transform``2(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Func{``0,``1})
    name: Transform<TProperty, TTransformed>
    nameWithType: AbstractValidator<T>.Transform<TProperty, TTransformed>
    fullName: FastEndpoints.Validation.AbstractValidator<T>.Transform<TProperty, TTransformed>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TProperty
    nameWithType: TProperty
    fullName: TProperty
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TProperty
    nameWithType: TProperty
    fullName: TProperty
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TTransformed
    nameWithType: TTransformed
    fullName: TTransformed
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Validation.AbstractValidator`1.Transform``2(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Func{``0,``1})
    name: Transform(Of TProperty, TTransformed)
    nameWithType: AbstractValidator(Of T).Transform(Of TProperty, TTransformed)
    fullName: FastEndpoints.Validation.AbstractValidator(Of T).Transform(Of TProperty, TTransformed)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TProperty
    nameWithType: TProperty
    fullName: TProperty
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TProperty
    nameWithType: TProperty
    fullName: TProperty
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TTransformed
    nameWithType: TTransformed
    fullName: TTransformed
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Validation.AbstractValidator`1.Transform``2(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Func{`0,``0,``1})
  commentId: M:FastEndpoints.Validation.AbstractValidator`1.Transform``2(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Func{`0,``0,``1})
  isExternal: true
  name: Transform<TProperty, TTransformed>(Expression<Func<T, TProperty>>, Func<T, TProperty, TTransformed>)
  nameWithType: AbstractValidator<T>.Transform<TProperty, TTransformed>(Expression<Func<T, TProperty>>, Func<T, TProperty, TTransformed>)
  fullName: FastEndpoints.Validation.AbstractValidator<T>.Transform<TProperty, TTransformed>(System.Linq.Expressions.Expression<System.Func<T, TProperty>>, System.Func<T, TProperty, TTransformed>)
  nameWithType.vb: AbstractValidator(Of T).Transform(Of TProperty, TTransformed)(Expression(Of Func(Of T, TProperty)), Func(Of T, TProperty, TTransformed))
  fullName.vb: FastEndpoints.Validation.AbstractValidator(Of T).Transform(Of TProperty, TTransformed)(System.Linq.Expressions.Expression(Of System.Func(Of T, TProperty)), System.Func(Of T, TProperty, TTransformed))
  name.vb: Transform(Of TProperty, TTransformed)(Expression(Of Func(Of T, TProperty)), Func(Of T, TProperty, TTransformed))
  spec.csharp:
  - uid: FastEndpoints.Validation.AbstractValidator`1.Transform``2(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Func{`0,``0,``1})
    name: Transform<TProperty, TTransformed>
    nameWithType: AbstractValidator<T>.Transform<TProperty, TTransformed>
    fullName: FastEndpoints.Validation.AbstractValidator<T>.Transform<TProperty, TTransformed>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TProperty
    nameWithType: TProperty
    fullName: TProperty
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TProperty
    nameWithType: TProperty
    fullName: TProperty
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TTransformed
    nameWithType: TTransformed
    fullName: TTransformed
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Validation.AbstractValidator`1.Transform``2(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Func{`0,``0,``1})
    name: Transform(Of TProperty, TTransformed)
    nameWithType: AbstractValidator(Of T).Transform(Of TProperty, TTransformed)
    fullName: FastEndpoints.Validation.AbstractValidator(Of T).Transform(Of TProperty, TTransformed)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TProperty
    nameWithType: TProperty
    fullName: TProperty
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TProperty
    nameWithType: TProperty
    fullName: TProperty
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TTransformed
    nameWithType: TTransformed
    fullName: TTransformed
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Validation.AbstractValidator`1.RuleForEach``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}})
  commentId: M:FastEndpoints.Validation.AbstractValidator`1.RuleForEach``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}})
  isExternal: true
  name: RuleForEach<TElement>(Expression<Func<T, IEnumerable<TElement>>>)
  nameWithType: AbstractValidator<T>.RuleForEach<TElement>(Expression<Func<T, IEnumerable<TElement>>>)
  fullName: FastEndpoints.Validation.AbstractValidator<T>.RuleForEach<TElement>(System.Linq.Expressions.Expression<System.Func<T, System.Collections.Generic.IEnumerable<TElement>>>)
  nameWithType.vb: AbstractValidator(Of T).RuleForEach(Of TElement)(Expression(Of Func(Of T, IEnumerable(Of TElement))))
  fullName.vb: FastEndpoints.Validation.AbstractValidator(Of T).RuleForEach(Of TElement)(System.Linq.Expressions.Expression(Of System.Func(Of T, System.Collections.Generic.IEnumerable(Of TElement))))
  name.vb: RuleForEach(Of TElement)(Expression(Of Func(Of T, IEnumerable(Of TElement))))
  spec.csharp:
  - uid: FastEndpoints.Validation.AbstractValidator`1.RuleForEach``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}})
    name: RuleForEach<TElement>
    nameWithType: AbstractValidator<T>.RuleForEach<TElement>
    fullName: FastEndpoints.Validation.AbstractValidator<T>.RuleForEach<TElement>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TElement
    nameWithType: TElement
    fullName: TElement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Validation.AbstractValidator`1.RuleForEach``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}})
    name: RuleForEach(Of TElement)
    nameWithType: AbstractValidator(Of T).RuleForEach(Of TElement)
    fullName: FastEndpoints.Validation.AbstractValidator(Of T).RuleForEach(Of TElement)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TElement
    nameWithType: TElement
    fullName: TElement
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Validation.AbstractValidator`1.TransformForEach``2(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Func{``0,``1})
  commentId: M:FastEndpoints.Validation.AbstractValidator`1.TransformForEach``2(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Func{``0,``1})
  isExternal: true
  name: TransformForEach<TElement, TTransformed>(Expression<Func<T, IEnumerable<TElement>>>, Func<TElement, TTransformed>)
  nameWithType: AbstractValidator<T>.TransformForEach<TElement, TTransformed>(Expression<Func<T, IEnumerable<TElement>>>, Func<TElement, TTransformed>)
  fullName: FastEndpoints.Validation.AbstractValidator<T>.TransformForEach<TElement, TTransformed>(System.Linq.Expressions.Expression<System.Func<T, System.Collections.Generic.IEnumerable<TElement>>>, System.Func<TElement, TTransformed>)
  nameWithType.vb: AbstractValidator(Of T).TransformForEach(Of TElement, TTransformed)(Expression(Of Func(Of T, IEnumerable(Of TElement))), Func(Of TElement, TTransformed))
  fullName.vb: FastEndpoints.Validation.AbstractValidator(Of T).TransformForEach(Of TElement, TTransformed)(System.Linq.Expressions.Expression(Of System.Func(Of T, System.Collections.Generic.IEnumerable(Of TElement))), System.Func(Of TElement, TTransformed))
  name.vb: TransformForEach(Of TElement, TTransformed)(Expression(Of Func(Of T, IEnumerable(Of TElement))), Func(Of TElement, TTransformed))
  spec.csharp:
  - uid: FastEndpoints.Validation.AbstractValidator`1.TransformForEach``2(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Func{``0,``1})
    name: TransformForEach<TElement, TTransformed>
    nameWithType: AbstractValidator<T>.TransformForEach<TElement, TTransformed>
    fullName: FastEndpoints.Validation.AbstractValidator<T>.TransformForEach<TElement, TTransformed>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TElement
    nameWithType: TElement
    fullName: TElement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TElement
    nameWithType: TElement
    fullName: TElement
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TTransformed
    nameWithType: TTransformed
    fullName: TTransformed
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Validation.AbstractValidator`1.TransformForEach``2(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Func{``0,``1})
    name: TransformForEach(Of TElement, TTransformed)
    nameWithType: AbstractValidator(Of T).TransformForEach(Of TElement, TTransformed)
    fullName: FastEndpoints.Validation.AbstractValidator(Of T).TransformForEach(Of TElement, TTransformed)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TElement
    nameWithType: TElement
    fullName: TElement
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TElement
    nameWithType: TElement
    fullName: TElement
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TTransformed
    nameWithType: TTransformed
    fullName: TTransformed
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Validation.AbstractValidator`1.TransformForEach``2(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Func{`0,``0,``1})
  commentId: M:FastEndpoints.Validation.AbstractValidator`1.TransformForEach``2(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Func{`0,``0,``1})
  isExternal: true
  name: TransformForEach<TElement, TTransformed>(Expression<Func<T, IEnumerable<TElement>>>, Func<T, TElement, TTransformed>)
  nameWithType: AbstractValidator<T>.TransformForEach<TElement, TTransformed>(Expression<Func<T, IEnumerable<TElement>>>, Func<T, TElement, TTransformed>)
  fullName: FastEndpoints.Validation.AbstractValidator<T>.TransformForEach<TElement, TTransformed>(System.Linq.Expressions.Expression<System.Func<T, System.Collections.Generic.IEnumerable<TElement>>>, System.Func<T, TElement, TTransformed>)
  nameWithType.vb: AbstractValidator(Of T).TransformForEach(Of TElement, TTransformed)(Expression(Of Func(Of T, IEnumerable(Of TElement))), Func(Of T, TElement, TTransformed))
  fullName.vb: FastEndpoints.Validation.AbstractValidator(Of T).TransformForEach(Of TElement, TTransformed)(System.Linq.Expressions.Expression(Of System.Func(Of T, System.Collections.Generic.IEnumerable(Of TElement))), System.Func(Of T, TElement, TTransformed))
  name.vb: TransformForEach(Of TElement, TTransformed)(Expression(Of Func(Of T, IEnumerable(Of TElement))), Func(Of T, TElement, TTransformed))
  spec.csharp:
  - uid: FastEndpoints.Validation.AbstractValidator`1.TransformForEach``2(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Func{`0,``0,``1})
    name: TransformForEach<TElement, TTransformed>
    nameWithType: AbstractValidator<T>.TransformForEach<TElement, TTransformed>
    fullName: FastEndpoints.Validation.AbstractValidator<T>.TransformForEach<TElement, TTransformed>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TElement
    nameWithType: TElement
    fullName: TElement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TElement
    nameWithType: TElement
    fullName: TElement
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TTransformed
    nameWithType: TTransformed
    fullName: TTransformed
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Validation.AbstractValidator`1.TransformForEach``2(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Func{`0,``0,``1})
    name: TransformForEach(Of TElement, TTransformed)
    nameWithType: AbstractValidator(Of T).TransformForEach(Of TElement, TTransformed)
    fullName: FastEndpoints.Validation.AbstractValidator(Of T).TransformForEach(Of TElement, TTransformed)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TElement
    nameWithType: TElement
    fullName: TElement
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TElement
    nameWithType: TElement
    fullName: TElement
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TTransformed
    nameWithType: TTransformed
    fullName: TTransformed
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Validation.AbstractValidator`1.RuleSet(System.String,System.Action)
  commentId: M:FastEndpoints.Validation.AbstractValidator`1.RuleSet(System.String,System.Action)
  isExternal: true
  name: RuleSet(String, Action)
  nameWithType: AbstractValidator<T>.RuleSet(String, Action)
  fullName: FastEndpoints.Validation.AbstractValidator<T>.RuleSet(System.String, System.Action)
  nameWithType.vb: AbstractValidator(Of T).RuleSet(String, Action)
  fullName.vb: FastEndpoints.Validation.AbstractValidator(Of T).RuleSet(System.String, System.Action)
  spec.csharp:
  - uid: FastEndpoints.Validation.AbstractValidator`1.RuleSet(System.String,System.Action)
    name: RuleSet
    nameWithType: AbstractValidator<T>.RuleSet
    fullName: FastEndpoints.Validation.AbstractValidator<T>.RuleSet
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Validation.AbstractValidator`1.RuleSet(System.String,System.Action)
    name: RuleSet
    nameWithType: AbstractValidator(Of T).RuleSet
    fullName: FastEndpoints.Validation.AbstractValidator(Of T).RuleSet
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Validation.AbstractValidator`1.When(System.Func{`0,System.Boolean},System.Action)
  commentId: M:FastEndpoints.Validation.AbstractValidator`1.When(System.Func{`0,System.Boolean},System.Action)
  isExternal: true
  name: When(Func<T, Boolean>, Action)
  nameWithType: AbstractValidator<T>.When(Func<T, Boolean>, Action)
  fullName: FastEndpoints.Validation.AbstractValidator<T>.When(System.Func<T, System.Boolean>, System.Action)
  nameWithType.vb: AbstractValidator(Of T).When(Func(Of T, Boolean), Action)
  fullName.vb: FastEndpoints.Validation.AbstractValidator(Of T).When(System.Func(Of T, System.Boolean), System.Action)
  name.vb: When(Func(Of T, Boolean), Action)
  spec.csharp:
  - uid: FastEndpoints.Validation.AbstractValidator`1.When(System.Func{`0,System.Boolean},System.Action)
    name: When
    nameWithType: AbstractValidator<T>.When
    fullName: FastEndpoints.Validation.AbstractValidator<T>.When
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Validation.AbstractValidator`1.When(System.Func{`0,System.Boolean},System.Action)
    name: When
    nameWithType: AbstractValidator(Of T).When
    fullName: FastEndpoints.Validation.AbstractValidator(Of T).When
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Validation.AbstractValidator`1.When(System.Func{`0,FastEndpoints.Validation.ValidationContext{`0},System.Boolean},System.Action)
  commentId: M:FastEndpoints.Validation.AbstractValidator`1.When(System.Func{`0,FastEndpoints.Validation.ValidationContext{`0},System.Boolean},System.Action)
  isExternal: true
  name: When(Func<T, ValidationContext<T>, Boolean>, Action)
  nameWithType: AbstractValidator<T>.When(Func<T, ValidationContext<T>, Boolean>, Action)
  fullName: FastEndpoints.Validation.AbstractValidator<T>.When(System.Func<T, FastEndpoints.Validation.ValidationContext<T>, System.Boolean>, System.Action)
  nameWithType.vb: AbstractValidator(Of T).When(Func(Of T, ValidationContext(Of T), Boolean), Action)
  fullName.vb: FastEndpoints.Validation.AbstractValidator(Of T).When(System.Func(Of T, FastEndpoints.Validation.ValidationContext(Of T), System.Boolean), System.Action)
  name.vb: When(Func(Of T, ValidationContext(Of T), Boolean), Action)
  spec.csharp:
  - uid: FastEndpoints.Validation.AbstractValidator`1.When(System.Func{`0,FastEndpoints.Validation.ValidationContext{`0},System.Boolean},System.Action)
    name: When
    nameWithType: AbstractValidator<T>.When
    fullName: FastEndpoints.Validation.AbstractValidator<T>.When
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: FastEndpoints.Validation.ValidationContext`1
    name: ValidationContext
    nameWithType: ValidationContext
    fullName: FastEndpoints.Validation.ValidationContext
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Validation.AbstractValidator`1.When(System.Func{`0,FastEndpoints.Validation.ValidationContext{`0},System.Boolean},System.Action)
    name: When
    nameWithType: AbstractValidator(Of T).When
    fullName: FastEndpoints.Validation.AbstractValidator(Of T).When
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: FastEndpoints.Validation.ValidationContext`1
    name: ValidationContext
    nameWithType: ValidationContext
    fullName: FastEndpoints.Validation.ValidationContext
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Validation.AbstractValidator`1.Unless(System.Func{`0,System.Boolean},System.Action)
  commentId: M:FastEndpoints.Validation.AbstractValidator`1.Unless(System.Func{`0,System.Boolean},System.Action)
  isExternal: true
  name: Unless(Func<T, Boolean>, Action)
  nameWithType: AbstractValidator<T>.Unless(Func<T, Boolean>, Action)
  fullName: FastEndpoints.Validation.AbstractValidator<T>.Unless(System.Func<T, System.Boolean>, System.Action)
  nameWithType.vb: AbstractValidator(Of T).Unless(Func(Of T, Boolean), Action)
  fullName.vb: FastEndpoints.Validation.AbstractValidator(Of T).Unless(System.Func(Of T, System.Boolean), System.Action)
  name.vb: Unless(Func(Of T, Boolean), Action)
  spec.csharp:
  - uid: FastEndpoints.Validation.AbstractValidator`1.Unless(System.Func{`0,System.Boolean},System.Action)
    name: Unless
    nameWithType: AbstractValidator<T>.Unless
    fullName: FastEndpoints.Validation.AbstractValidator<T>.Unless
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Validation.AbstractValidator`1.Unless(System.Func{`0,System.Boolean},System.Action)
    name: Unless
    nameWithType: AbstractValidator(Of T).Unless
    fullName: FastEndpoints.Validation.AbstractValidator(Of T).Unless
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Validation.AbstractValidator`1.Unless(System.Func{`0,FastEndpoints.Validation.ValidationContext{`0},System.Boolean},System.Action)
  commentId: M:FastEndpoints.Validation.AbstractValidator`1.Unless(System.Func{`0,FastEndpoints.Validation.ValidationContext{`0},System.Boolean},System.Action)
  isExternal: true
  name: Unless(Func<T, ValidationContext<T>, Boolean>, Action)
  nameWithType: AbstractValidator<T>.Unless(Func<T, ValidationContext<T>, Boolean>, Action)
  fullName: FastEndpoints.Validation.AbstractValidator<T>.Unless(System.Func<T, FastEndpoints.Validation.ValidationContext<T>, System.Boolean>, System.Action)
  nameWithType.vb: AbstractValidator(Of T).Unless(Func(Of T, ValidationContext(Of T), Boolean), Action)
  fullName.vb: FastEndpoints.Validation.AbstractValidator(Of T).Unless(System.Func(Of T, FastEndpoints.Validation.ValidationContext(Of T), System.Boolean), System.Action)
  name.vb: Unless(Func(Of T, ValidationContext(Of T), Boolean), Action)
  spec.csharp:
  - uid: FastEndpoints.Validation.AbstractValidator`1.Unless(System.Func{`0,FastEndpoints.Validation.ValidationContext{`0},System.Boolean},System.Action)
    name: Unless
    nameWithType: AbstractValidator<T>.Unless
    fullName: FastEndpoints.Validation.AbstractValidator<T>.Unless
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: FastEndpoints.Validation.ValidationContext`1
    name: ValidationContext
    nameWithType: ValidationContext
    fullName: FastEndpoints.Validation.ValidationContext
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Validation.AbstractValidator`1.Unless(System.Func{`0,FastEndpoints.Validation.ValidationContext{`0},System.Boolean},System.Action)
    name: Unless
    nameWithType: AbstractValidator(Of T).Unless
    fullName: FastEndpoints.Validation.AbstractValidator(Of T).Unless
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: FastEndpoints.Validation.ValidationContext`1
    name: ValidationContext
    nameWithType: ValidationContext
    fullName: FastEndpoints.Validation.ValidationContext
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Validation.AbstractValidator`1.WhenAsync(System.Func{`0,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
  commentId: M:FastEndpoints.Validation.AbstractValidator`1.WhenAsync(System.Func{`0,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
  isExternal: true
  name: WhenAsync(Func<T, CancellationToken, Task<Boolean>>, Action)
  nameWithType: AbstractValidator<T>.WhenAsync(Func<T, CancellationToken, Task<Boolean>>, Action)
  fullName: FastEndpoints.Validation.AbstractValidator<T>.WhenAsync(System.Func<T, System.Threading.CancellationToken, System.Threading.Tasks.Task<System.Boolean>>, System.Action)
  nameWithType.vb: AbstractValidator(Of T).WhenAsync(Func(Of T, CancellationToken, Task(Of Boolean)), Action)
  fullName.vb: FastEndpoints.Validation.AbstractValidator(Of T).WhenAsync(System.Func(Of T, System.Threading.CancellationToken, System.Threading.Tasks.Task(Of System.Boolean)), System.Action)
  name.vb: WhenAsync(Func(Of T, CancellationToken, Task(Of Boolean)), Action)
  spec.csharp:
  - uid: FastEndpoints.Validation.AbstractValidator`1.WhenAsync(System.Func{`0,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
    name: WhenAsync
    nameWithType: AbstractValidator<T>.WhenAsync
    fullName: FastEndpoints.Validation.AbstractValidator<T>.WhenAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Validation.AbstractValidator`1.WhenAsync(System.Func{`0,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
    name: WhenAsync
    nameWithType: AbstractValidator(Of T).WhenAsync
    fullName: FastEndpoints.Validation.AbstractValidator(Of T).WhenAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Validation.AbstractValidator`1.WhenAsync(System.Func{`0,FastEndpoints.Validation.ValidationContext{`0},System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
  commentId: M:FastEndpoints.Validation.AbstractValidator`1.WhenAsync(System.Func{`0,FastEndpoints.Validation.ValidationContext{`0},System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
  isExternal: true
  name: WhenAsync(Func<T, ValidationContext<T>, CancellationToken, Task<Boolean>>, Action)
  nameWithType: AbstractValidator<T>.WhenAsync(Func<T, ValidationContext<T>, CancellationToken, Task<Boolean>>, Action)
  fullName: FastEndpoints.Validation.AbstractValidator<T>.WhenAsync(System.Func<T, FastEndpoints.Validation.ValidationContext<T>, System.Threading.CancellationToken, System.Threading.Tasks.Task<System.Boolean>>, System.Action)
  nameWithType.vb: AbstractValidator(Of T).WhenAsync(Func(Of T, ValidationContext(Of T), CancellationToken, Task(Of Boolean)), Action)
  fullName.vb: FastEndpoints.Validation.AbstractValidator(Of T).WhenAsync(System.Func(Of T, FastEndpoints.Validation.ValidationContext(Of T), System.Threading.CancellationToken, System.Threading.Tasks.Task(Of System.Boolean)), System.Action)
  name.vb: WhenAsync(Func(Of T, ValidationContext(Of T), CancellationToken, Task(Of Boolean)), Action)
  spec.csharp:
  - uid: FastEndpoints.Validation.AbstractValidator`1.WhenAsync(System.Func{`0,FastEndpoints.Validation.ValidationContext{`0},System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
    name: WhenAsync
    nameWithType: AbstractValidator<T>.WhenAsync
    fullName: FastEndpoints.Validation.AbstractValidator<T>.WhenAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`4
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: FastEndpoints.Validation.ValidationContext`1
    name: ValidationContext
    nameWithType: ValidationContext
    fullName: FastEndpoints.Validation.ValidationContext
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Validation.AbstractValidator`1.WhenAsync(System.Func{`0,FastEndpoints.Validation.ValidationContext{`0},System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
    name: WhenAsync
    nameWithType: AbstractValidator(Of T).WhenAsync
    fullName: FastEndpoints.Validation.AbstractValidator(Of T).WhenAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`4
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: FastEndpoints.Validation.ValidationContext`1
    name: ValidationContext
    nameWithType: ValidationContext
    fullName: FastEndpoints.Validation.ValidationContext
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Validation.AbstractValidator`1.UnlessAsync(System.Func{`0,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
  commentId: M:FastEndpoints.Validation.AbstractValidator`1.UnlessAsync(System.Func{`0,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
  isExternal: true
  name: UnlessAsync(Func<T, CancellationToken, Task<Boolean>>, Action)
  nameWithType: AbstractValidator<T>.UnlessAsync(Func<T, CancellationToken, Task<Boolean>>, Action)
  fullName: FastEndpoints.Validation.AbstractValidator<T>.UnlessAsync(System.Func<T, System.Threading.CancellationToken, System.Threading.Tasks.Task<System.Boolean>>, System.Action)
  nameWithType.vb: AbstractValidator(Of T).UnlessAsync(Func(Of T, CancellationToken, Task(Of Boolean)), Action)
  fullName.vb: FastEndpoints.Validation.AbstractValidator(Of T).UnlessAsync(System.Func(Of T, System.Threading.CancellationToken, System.Threading.Tasks.Task(Of System.Boolean)), System.Action)
  name.vb: UnlessAsync(Func(Of T, CancellationToken, Task(Of Boolean)), Action)
  spec.csharp:
  - uid: FastEndpoints.Validation.AbstractValidator`1.UnlessAsync(System.Func{`0,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
    name: UnlessAsync
    nameWithType: AbstractValidator<T>.UnlessAsync
    fullName: FastEndpoints.Validation.AbstractValidator<T>.UnlessAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Validation.AbstractValidator`1.UnlessAsync(System.Func{`0,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
    name: UnlessAsync
    nameWithType: AbstractValidator(Of T).UnlessAsync
    fullName: FastEndpoints.Validation.AbstractValidator(Of T).UnlessAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Validation.AbstractValidator`1.UnlessAsync(System.Func{`0,FastEndpoints.Validation.ValidationContext{`0},System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
  commentId: M:FastEndpoints.Validation.AbstractValidator`1.UnlessAsync(System.Func{`0,FastEndpoints.Validation.ValidationContext{`0},System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
  isExternal: true
  name: UnlessAsync(Func<T, ValidationContext<T>, CancellationToken, Task<Boolean>>, Action)
  nameWithType: AbstractValidator<T>.UnlessAsync(Func<T, ValidationContext<T>, CancellationToken, Task<Boolean>>, Action)
  fullName: FastEndpoints.Validation.AbstractValidator<T>.UnlessAsync(System.Func<T, FastEndpoints.Validation.ValidationContext<T>, System.Threading.CancellationToken, System.Threading.Tasks.Task<System.Boolean>>, System.Action)
  nameWithType.vb: AbstractValidator(Of T).UnlessAsync(Func(Of T, ValidationContext(Of T), CancellationToken, Task(Of Boolean)), Action)
  fullName.vb: FastEndpoints.Validation.AbstractValidator(Of T).UnlessAsync(System.Func(Of T, FastEndpoints.Validation.ValidationContext(Of T), System.Threading.CancellationToken, System.Threading.Tasks.Task(Of System.Boolean)), System.Action)
  name.vb: UnlessAsync(Func(Of T, ValidationContext(Of T), CancellationToken, Task(Of Boolean)), Action)
  spec.csharp:
  - uid: FastEndpoints.Validation.AbstractValidator`1.UnlessAsync(System.Func{`0,FastEndpoints.Validation.ValidationContext{`0},System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
    name: UnlessAsync
    nameWithType: AbstractValidator<T>.UnlessAsync
    fullName: FastEndpoints.Validation.AbstractValidator<T>.UnlessAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`4
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: FastEndpoints.Validation.ValidationContext`1
    name: ValidationContext
    nameWithType: ValidationContext
    fullName: FastEndpoints.Validation.ValidationContext
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Validation.AbstractValidator`1.UnlessAsync(System.Func{`0,FastEndpoints.Validation.ValidationContext{`0},System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},System.Action)
    name: UnlessAsync
    nameWithType: AbstractValidator(Of T).UnlessAsync
    fullName: FastEndpoints.Validation.AbstractValidator(Of T).UnlessAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`4
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: FastEndpoints.Validation.ValidationContext`1
    name: ValidationContext
    nameWithType: ValidationContext
    fullName: FastEndpoints.Validation.ValidationContext
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Validation.AbstractValidator`1.Include(FastEndpoints.Validation.IValidator{`0})
  commentId: M:FastEndpoints.Validation.AbstractValidator`1.Include(FastEndpoints.Validation.IValidator{`0})
  name: Include(IValidator<T>)
  nameWithType: AbstractValidator<T>.Include(IValidator<T>)
  fullName: FastEndpoints.Validation.AbstractValidator<T>.Include(FastEndpoints.Validation.IValidator<T>)
  nameWithType.vb: AbstractValidator(Of T).Include(IValidator(Of T))
  fullName.vb: FastEndpoints.Validation.AbstractValidator(Of T).Include(FastEndpoints.Validation.IValidator(Of T))
  name.vb: Include(IValidator(Of T))
  spec.csharp:
  - uid: FastEndpoints.Validation.AbstractValidator`1.Include(FastEndpoints.Validation.IValidator{`0})
    name: Include
    nameWithType: AbstractValidator<T>.Include
    fullName: FastEndpoints.Validation.AbstractValidator<T>.Include
  - name: (
    nameWithType: (
    fullName: (
  - uid: FastEndpoints.Validation.IValidator`1
    name: IValidator
    nameWithType: IValidator
    fullName: FastEndpoints.Validation.IValidator
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Validation.AbstractValidator`1.Include(FastEndpoints.Validation.IValidator{`0})
    name: Include
    nameWithType: AbstractValidator(Of T).Include
    fullName: FastEndpoints.Validation.AbstractValidator(Of T).Include
  - name: (
    nameWithType: (
    fullName: (
  - uid: FastEndpoints.Validation.IValidator`1
    name: IValidator
    nameWithType: IValidator
    fullName: FastEndpoints.Validation.IValidator
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Validation.AbstractValidator`1.Include``1(System.Func{`0,``0})
  commentId: M:FastEndpoints.Validation.AbstractValidator`1.Include``1(System.Func{`0,``0})
  isExternal: true
  name: Include<TValidator>(Func<T, TValidator>)
  nameWithType: AbstractValidator<T>.Include<TValidator>(Func<T, TValidator>)
  fullName: FastEndpoints.Validation.AbstractValidator<T>.Include<TValidator>(System.Func<T, TValidator>)
  nameWithType.vb: AbstractValidator(Of T).Include(Of TValidator)(Func(Of T, TValidator))
  fullName.vb: FastEndpoints.Validation.AbstractValidator(Of T).Include(Of TValidator)(System.Func(Of T, TValidator))
  name.vb: Include(Of TValidator)(Func(Of T, TValidator))
  spec.csharp:
  - uid: FastEndpoints.Validation.AbstractValidator`1.Include``1(System.Func{`0,``0})
    name: Include<TValidator>
    nameWithType: AbstractValidator<T>.Include<TValidator>
    fullName: FastEndpoints.Validation.AbstractValidator<T>.Include<TValidator>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValidator
    nameWithType: TValidator
    fullName: TValidator
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Validation.AbstractValidator`1.Include``1(System.Func{`0,``0})
    name: Include(Of TValidator)
    nameWithType: AbstractValidator(Of T).Include(Of TValidator)
    fullName: FastEndpoints.Validation.AbstractValidator(Of T).Include(Of TValidator)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValidator
    nameWithType: TValidator
    fullName: TValidator
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Validation.AbstractValidator`1.GetEnumerator
  commentId: M:FastEndpoints.Validation.AbstractValidator`1.GetEnumerator
  name: GetEnumerator()
  nameWithType: AbstractValidator<T>.GetEnumerator()
  fullName: FastEndpoints.Validation.AbstractValidator<T>.GetEnumerator()
  nameWithType.vb: AbstractValidator(Of T).GetEnumerator()
  fullName.vb: FastEndpoints.Validation.AbstractValidator(Of T).GetEnumerator()
  spec.csharp:
  - uid: FastEndpoints.Validation.AbstractValidator`1.GetEnumerator
    name: GetEnumerator
    nameWithType: AbstractValidator<T>.GetEnumerator
    fullName: FastEndpoints.Validation.AbstractValidator<T>.GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Validation.AbstractValidator`1.GetEnumerator
    name: GetEnumerator
    nameWithType: AbstractValidator(Of T).GetEnumerator
    fullName: FastEndpoints.Validation.AbstractValidator(Of T).GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Validation.AbstractValidator`1.System#Collections#IEnumerable#GetEnumerator
  commentId: M:FastEndpoints.Validation.AbstractValidator`1.System#Collections#IEnumerable#GetEnumerator
  name: IEnumerable.GetEnumerator()
  nameWithType: AbstractValidator<T>.IEnumerable.GetEnumerator()
  fullName: FastEndpoints.Validation.AbstractValidator<T>.System.Collections.IEnumerable.GetEnumerator()
  nameWithType.vb: AbstractValidator(Of T).System.Collections.IEnumerable.GetEnumerator()
  fullName.vb: FastEndpoints.Validation.AbstractValidator(Of T).System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: FastEndpoints.Validation.AbstractValidator`1.System#Collections#IEnumerable#GetEnumerator
    name: IEnumerable.GetEnumerator
    nameWithType: AbstractValidator<T>.IEnumerable.GetEnumerator
    fullName: FastEndpoints.Validation.AbstractValidator<T>.System.Collections.IEnumerable.GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Validation.AbstractValidator`1.System#Collections#IEnumerable#GetEnumerator
    name: System.Collections.IEnumerable.GetEnumerator
    nameWithType: AbstractValidator(Of T).System.Collections.IEnumerable.GetEnumerator
    fullName: FastEndpoints.Validation.AbstractValidator(Of T).System.Collections.IEnumerable.GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Validation.AbstractValidator`1.EnsureInstanceNotNull(System.Object)
  commentId: M:FastEndpoints.Validation.AbstractValidator`1.EnsureInstanceNotNull(System.Object)
  isExternal: true
  name: EnsureInstanceNotNull(Object)
  nameWithType: AbstractValidator<T>.EnsureInstanceNotNull(Object)
  fullName: FastEndpoints.Validation.AbstractValidator<T>.EnsureInstanceNotNull(System.Object)
  nameWithType.vb: AbstractValidator(Of T).EnsureInstanceNotNull(Object)
  fullName.vb: FastEndpoints.Validation.AbstractValidator(Of T).EnsureInstanceNotNull(System.Object)
  spec.csharp:
  - uid: FastEndpoints.Validation.AbstractValidator`1.EnsureInstanceNotNull(System.Object)
    name: EnsureInstanceNotNull
    nameWithType: AbstractValidator<T>.EnsureInstanceNotNull
    fullName: FastEndpoints.Validation.AbstractValidator<T>.EnsureInstanceNotNull
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Validation.AbstractValidator`1.EnsureInstanceNotNull(System.Object)
    name: EnsureInstanceNotNull
    nameWithType: AbstractValidator(Of T).EnsureInstanceNotNull
    fullName: FastEndpoints.Validation.AbstractValidator(Of T).EnsureInstanceNotNull
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Validation.AbstractValidator`1.PreValidate(FastEndpoints.Validation.ValidationContext{`0},FastEndpoints.Validation.Results.ValidationResult)
  commentId: M:FastEndpoints.Validation.AbstractValidator`1.PreValidate(FastEndpoints.Validation.ValidationContext{`0},FastEndpoints.Validation.Results.ValidationResult)
  name: PreValidate(ValidationContext<T>, ValidationResult)
  nameWithType: AbstractValidator<T>.PreValidate(ValidationContext<T>, ValidationResult)
  fullName: FastEndpoints.Validation.AbstractValidator<T>.PreValidate(FastEndpoints.Validation.ValidationContext<T>, FastEndpoints.Validation.Results.ValidationResult)
  nameWithType.vb: AbstractValidator(Of T).PreValidate(ValidationContext(Of T), ValidationResult)
  fullName.vb: FastEndpoints.Validation.AbstractValidator(Of T).PreValidate(FastEndpoints.Validation.ValidationContext(Of T), FastEndpoints.Validation.Results.ValidationResult)
  name.vb: PreValidate(ValidationContext(Of T), ValidationResult)
  spec.csharp:
  - uid: FastEndpoints.Validation.AbstractValidator`1.PreValidate(FastEndpoints.Validation.ValidationContext{`0},FastEndpoints.Validation.Results.ValidationResult)
    name: PreValidate
    nameWithType: AbstractValidator<T>.PreValidate
    fullName: FastEndpoints.Validation.AbstractValidator<T>.PreValidate
  - name: (
    nameWithType: (
    fullName: (
  - uid: FastEndpoints.Validation.ValidationContext`1
    name: ValidationContext
    nameWithType: ValidationContext
    fullName: FastEndpoints.Validation.ValidationContext
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: FastEndpoints.Validation.Results.ValidationResult
    name: ValidationResult
    nameWithType: ValidationResult
    fullName: FastEndpoints.Validation.Results.ValidationResult
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Validation.AbstractValidator`1.PreValidate(FastEndpoints.Validation.ValidationContext{`0},FastEndpoints.Validation.Results.ValidationResult)
    name: PreValidate
    nameWithType: AbstractValidator(Of T).PreValidate
    fullName: FastEndpoints.Validation.AbstractValidator(Of T).PreValidate
  - name: (
    nameWithType: (
    fullName: (
  - uid: FastEndpoints.Validation.ValidationContext`1
    name: ValidationContext
    nameWithType: ValidationContext
    fullName: FastEndpoints.Validation.ValidationContext
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: FastEndpoints.Validation.Results.ValidationResult
    name: ValidationResult
    nameWithType: ValidationResult
    fullName: FastEndpoints.Validation.Results.ValidationResult
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Validation.AbstractValidator`1.RaiseValidationException(FastEndpoints.Validation.ValidationContext{`0},FastEndpoints.Validation.Results.ValidationResult)
  commentId: M:FastEndpoints.Validation.AbstractValidator`1.RaiseValidationException(FastEndpoints.Validation.ValidationContext{`0},FastEndpoints.Validation.Results.ValidationResult)
  name: RaiseValidationException(ValidationContext<T>, ValidationResult)
  nameWithType: AbstractValidator<T>.RaiseValidationException(ValidationContext<T>, ValidationResult)
  fullName: FastEndpoints.Validation.AbstractValidator<T>.RaiseValidationException(FastEndpoints.Validation.ValidationContext<T>, FastEndpoints.Validation.Results.ValidationResult)
  nameWithType.vb: AbstractValidator(Of T).RaiseValidationException(ValidationContext(Of T), ValidationResult)
  fullName.vb: FastEndpoints.Validation.AbstractValidator(Of T).RaiseValidationException(FastEndpoints.Validation.ValidationContext(Of T), FastEndpoints.Validation.Results.ValidationResult)
  name.vb: RaiseValidationException(ValidationContext(Of T), ValidationResult)
  spec.csharp:
  - uid: FastEndpoints.Validation.AbstractValidator`1.RaiseValidationException(FastEndpoints.Validation.ValidationContext{`0},FastEndpoints.Validation.Results.ValidationResult)
    name: RaiseValidationException
    nameWithType: AbstractValidator<T>.RaiseValidationException
    fullName: FastEndpoints.Validation.AbstractValidator<T>.RaiseValidationException
  - name: (
    nameWithType: (
    fullName: (
  - uid: FastEndpoints.Validation.ValidationContext`1
    name: ValidationContext
    nameWithType: ValidationContext
    fullName: FastEndpoints.Validation.ValidationContext
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: FastEndpoints.Validation.Results.ValidationResult
    name: ValidationResult
    nameWithType: ValidationResult
    fullName: FastEndpoints.Validation.Results.ValidationResult
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Validation.AbstractValidator`1.RaiseValidationException(FastEndpoints.Validation.ValidationContext{`0},FastEndpoints.Validation.Results.ValidationResult)
    name: RaiseValidationException
    nameWithType: AbstractValidator(Of T).RaiseValidationException
    fullName: FastEndpoints.Validation.AbstractValidator(Of T).RaiseValidationException
  - name: (
    nameWithType: (
    fullName: (
  - uid: FastEndpoints.Validation.ValidationContext`1
    name: ValidationContext
    nameWithType: ValidationContext
    fullName: FastEndpoints.Validation.ValidationContext
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: FastEndpoints.Validation.Results.ValidationResult
    name: ValidationResult
    nameWithType: ValidationResult
    fullName: FastEndpoints.Validation.Results.ValidationResult
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Validation.Validator`1.ServiceProvider*
  commentId: Overload:FastEndpoints.Validation.Validator`1.ServiceProvider
  name: ServiceProvider
  nameWithType: Validator<TRequest>.ServiceProvider
  fullName: FastEndpoints.Validation.Validator<TRequest>.ServiceProvider
  nameWithType.vb: Validator(Of TRequest).ServiceProvider
  fullName.vb: FastEndpoints.Validation.Validator(Of TRequest).ServiceProvider
- uid: IServiceProvider
  commentId: '!:IServiceProvider'
  isExternal: true
  name: IServiceProvider
  nameWithType: IServiceProvider
  fullName: IServiceProvider
- uid: FastEndpoints.Validation.Validator`1.TryResolve*
  commentId: Overload:FastEndpoints.Validation.Validator`1.TryResolve
  name: TryResolve
  nameWithType: Validator<TRequest>.TryResolve
  fullName: FastEndpoints.Validation.Validator<TRequest>.TryResolve
  nameWithType.vb: Validator(Of TRequest).TryResolve
  fullName.vb: FastEndpoints.Validation.Validator(Of TRequest).TryResolve
- uid: '{TService}'
  commentId: '!:TService'
  definition: TService
  name: TService
  nameWithType: TService
  fullName: TService
- uid: TService
  name: TService
  nameWithType: TService
  fullName: TService
- uid: Type
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: Type
- uid: FastEndpoints.Validation.Validator`1.Resolve*
  commentId: Overload:FastEndpoints.Validation.Validator`1.Resolve
  name: Resolve
  nameWithType: Validator<TRequest>.Resolve
  fullName: FastEndpoints.Validation.Validator<TRequest>.Resolve
  nameWithType.vb: Validator(Of TRequest).Resolve
  fullName.vb: FastEndpoints.Validation.Validator(Of TRequest).Resolve
