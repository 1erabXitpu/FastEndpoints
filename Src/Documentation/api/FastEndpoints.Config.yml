### YamlMime:ManagedReference
items:
- uid: FastEndpoints.Config
  commentId: T:FastEndpoints.Config
  id: Config
  parent: FastEndpoints
  children:
  - FastEndpoints.Config.EndpointExclusionFilter
  - FastEndpoints.Config.ErrorResponseBuilder
  - FastEndpoints.Config.SerializerOptions
  langs:
  - csharp
  - vb
  name: Config
  nameWithType: Config
  fullName: FastEndpoints.Config
  type: Class
  source:
    id: Config
    path: D:\SOURCE-CONTROL\FastEndpoints\Src\Documentation\src\Library\Extensions\MainExtensions.cs
    startLine: 223
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nglobal configuration settings for FastEndpoints\n"
  example: []
  syntax:
    content: public class Config
    content.vb: Public Class Config
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: FastEndpoints.Config.SerializerOptions
  commentId: P:FastEndpoints.Config.SerializerOptions
  id: SerializerOptions
  parent: FastEndpoints.Config
  langs:
  - csharp
  - vb
  name: SerializerOptions
  nameWithType: Config.SerializerOptions
  fullName: FastEndpoints.Config.SerializerOptions
  type: Property
  source:
    id: SerializerOptions
    path: D:\SOURCE-CONTROL\FastEndpoints\Src\Documentation\src\Library\Extensions\MainExtensions.cs
    startLine: 232
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nsettings for configuring the json serializer\n"
  example: []
  syntax:
    content: public Action<JsonSerializerOptions>? SerializerOptions { set; }
    parameters: []
    return:
      type: System.Nullable{Action{System.Text.Json.JsonSerializerOptions}}
    content.vb: Public WriteOnly Property SerializerOptions As Action(Of JsonSerializerOptions)?
  overload: FastEndpoints.Config.SerializerOptions*
  modifiers.csharp:
  - public
  - set
  modifiers.vb:
  - Public
  - WriteOnly
- uid: FastEndpoints.Config.ErrorResponseBuilder
  commentId: P:FastEndpoints.Config.ErrorResponseBuilder
  id: ErrorResponseBuilder
  parent: FastEndpoints.Config
  langs:
  - csharp
  - vb
  name: ErrorResponseBuilder
  nameWithType: Config.ErrorResponseBuilder
  fullName: FastEndpoints.Config.ErrorResponseBuilder
  type: Property
  source:
    id: ErrorResponseBuilder
    path: D:\SOURCE-CONTROL\FastEndpoints\Src\Documentation\src\Library\Extensions\MainExtensions.cs
    startLine: 239
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\na function for transforming validation errors to an error response dto.\nset it to any func that returns an object that can be serialized to json.\nthis function will be run everytime an error response needs to be sent to the client.\n"
  example: []
  syntax:
    content: public Func<IEnumerable<ValidationFailure>, object> ErrorResponseBuilder { set; }
    parameters: []
    return:
      type: Func{IEnumerable{ValidationFailure},System.Object}
    content.vb: Public WriteOnly Property ErrorResponseBuilder As Func(Of IEnumerable(Of ValidationFailure), Object)
  overload: FastEndpoints.Config.ErrorResponseBuilder*
  modifiers.csharp:
  - public
  - set
  modifiers.vb:
  - Public
  - WriteOnly
- uid: FastEndpoints.Config.EndpointExclusionFilter
  commentId: P:FastEndpoints.Config.EndpointExclusionFilter
  id: EndpointExclusionFilter
  parent: FastEndpoints.Config
  langs:
  - csharp
  - vb
  name: EndpointExclusionFilter
  nameWithType: Config.EndpointExclusionFilter
  fullName: FastEndpoints.Config.EndpointExclusionFilter
  type: Property
  source:
    id: EndpointExclusionFilter
    path: D:\SOURCE-CONTROL\FastEndpoints\Src\Documentation\src\Library\Extensions\MainExtensions.cs
    startLine: 245
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nan function to exclude an endpoint from registration. return true from the function if you want to exclude an endpoint.\nthis function will executed for each endpoint that has been discovered during startup.\n"
  example: []
  syntax:
    content: public Func<DiscoveredEndpoint, bool> EndpointExclusionFilter { set; }
    parameters: []
    return:
      type: Func{FastEndpoints.DiscoveredEndpoint,System.Boolean}
    content.vb: Public WriteOnly Property EndpointExclusionFilter As Func(Of DiscoveredEndpoint, Boolean)
  overload: FastEndpoints.Config.EndpointExclusionFilter*
  modifiers.csharp:
  - public
  - set
  modifiers.vb:
  - Public
  - WriteOnly
references:
- uid: FastEndpoints
  commentId: N:FastEndpoints
  name: FastEndpoints
  nameWithType: FastEndpoints
  fullName: FastEndpoints
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: FastEndpoints.Config.SerializerOptions*
  commentId: Overload:FastEndpoints.Config.SerializerOptions
  name: SerializerOptions
  nameWithType: Config.SerializerOptions
  fullName: FastEndpoints.Config.SerializerOptions
- uid: System.Nullable{Action{System.Text.Json.JsonSerializerOptions}}
  commentId: T:System.Nullable{Action{System.Text.Json.JsonSerializerOptions}}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Action<JsonSerializerOptions>>
  nameWithType: Nullable<Action<JsonSerializerOptions>>
  fullName: System.Nullable<Action<System.Text.Json.JsonSerializerOptions>>
  nameWithType.vb: Nullable(Of Action(Of JsonSerializerOptions))
  fullName.vb: System.Nullable(Of Action(Of System.Text.Json.JsonSerializerOptions))
  name.vb: Nullable(Of Action(Of JsonSerializerOptions))
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Text.Json.JsonSerializerOptions
    name: JsonSerializerOptions
    nameWithType: JsonSerializerOptions
    fullName: System.Text.Json.JsonSerializerOptions
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Text.Json.JsonSerializerOptions
    name: JsonSerializerOptions
    nameWithType: JsonSerializerOptions
    fullName: System.Text.Json.JsonSerializerOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Config.ErrorResponseBuilder*
  commentId: Overload:FastEndpoints.Config.ErrorResponseBuilder
  name: ErrorResponseBuilder
  nameWithType: Config.ErrorResponseBuilder
  fullName: FastEndpoints.Config.ErrorResponseBuilder
- uid: Func{IEnumerable{ValidationFailure},System.Object}
  commentId: '!:Func{IEnumerable{ValidationFailure},System.Object}'
  definition: Func`2
  name: Func<IEnumerable<ValidationFailure>, Object>
  nameWithType: Func<IEnumerable<ValidationFailure>, Object>
  fullName: Func<IEnumerable<ValidationFailure>, System.Object>
  nameWithType.vb: Func(Of IEnumerable(Of ValidationFailure), Object)
  fullName.vb: Func(Of IEnumerable(Of ValidationFailure), System.Object)
  name.vb: Func(Of IEnumerable(Of ValidationFailure), Object)
  spec.csharp:
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: ValidationFailure
    name: ValidationFailure
    nameWithType: ValidationFailure
    fullName: ValidationFailure
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: ValidationFailure
    name: ValidationFailure
    nameWithType: ValidationFailure
    fullName: ValidationFailure
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Func`2
  isExternal: true
  name: Func<, >
  nameWithType: Func<, >
  fullName: Func<, >
  nameWithType.vb: Func(Of , )
  fullName.vb: Func(Of , )
  name.vb: Func(Of , )
  spec.csharp:
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Config.EndpointExclusionFilter*
  commentId: Overload:FastEndpoints.Config.EndpointExclusionFilter
  name: EndpointExclusionFilter
  nameWithType: Config.EndpointExclusionFilter
  fullName: FastEndpoints.Config.EndpointExclusionFilter
- uid: Func{FastEndpoints.DiscoveredEndpoint,System.Boolean}
  commentId: '!:Func{FastEndpoints.DiscoveredEndpoint,System.Boolean}'
  definition: Func`2
  name: Func<DiscoveredEndpoint, Boolean>
  nameWithType: Func<DiscoveredEndpoint, Boolean>
  fullName: Func<FastEndpoints.DiscoveredEndpoint, System.Boolean>
  nameWithType.vb: Func(Of DiscoveredEndpoint, Boolean)
  fullName.vb: Func(Of FastEndpoints.DiscoveredEndpoint, System.Boolean)
  name.vb: Func(Of DiscoveredEndpoint, Boolean)
  spec.csharp:
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: FastEndpoints.DiscoveredEndpoint
    name: DiscoveredEndpoint
    nameWithType: DiscoveredEndpoint
    fullName: FastEndpoints.DiscoveredEndpoint
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: FastEndpoints.DiscoveredEndpoint
    name: DiscoveredEndpoint
    nameWithType: DiscoveredEndpoint
    fullName: FastEndpoints.DiscoveredEndpoint
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
