### YamlMime:ManagedReference
items:
- uid: FastEndpoints.EndpointWithoutRequest`1
  commentId: T:FastEndpoints.EndpointWithoutRequest`1
  id: EndpointWithoutRequest`1
  parent: FastEndpoints
  children: []
  langs:
  - csharp
  - vb
  name: EndpointWithoutRequest<TResponse>
  nameWithType: EndpointWithoutRequest<TResponse>
  fullName: FastEndpoints.EndpointWithoutRequest<TResponse>
  type: Class
  source:
    id: EndpointWithoutRequest
    path: D:\SOURCE-CONTROL\FastEndpoints\Src\Documentation\src\Library\Endpoint.cs
    startLine: 54
  assemblies:
  - FastEndpoints
  namespace: FastEndpoints
  summary: "\nuse this base class for defining endpoints that doesn&apos;t need a request dto but return a response dto.\n"
  example: []
  syntax:
    content: 'public abstract class EndpointWithoutRequest<TResponse> : Endpoint<EmptyRequest, TResponse>, IEndpoint where TResponse : new()'
    typeParameters:
    - id: TResponse
      description: the type of the response dto
    content.vb: >-
      Public MustInherit Class EndpointWithoutRequest(Of TResponse As New)
          Inherits Endpoint(Of EmptyRequest, TResponse)
          Implements IEndpoint
  inheritance:
  - System.Object
  - FastEndpoints.BaseEndpoint
  - FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}
  inheritedMembers:
  - FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.HttpContext
  - FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.User
  - FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.Response
  - FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.Config
  - FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.Env
  - FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.Logger
  - FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.BaseURL
  - FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.HttpMethod
  - FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.ValidationFailures
  - FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.ValidationFailed
  - FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.Form
  - FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.Files
  - FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.Routes(System.String[])
  - FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.Verbs(FastEndpoints.Http[])
  - FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.DontThrowIfValidationFails
  - FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.AllowAnonymous
  - FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.AllowFileUploads
  - FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.Policies(System.String[])
  - FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.Roles(System.String[])
  - FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.Permissions(System.String[])
  - FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.Permissions(System.Boolean,System.String[])
  - FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.AnyPermission(System.String[])
  - FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.Claims(System.String[])
  - FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.Claims(System.Boolean,System.String[])
  - FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.AnyClaim(System.String[])
  - FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.PreProcessors(FastEndpoints.IPreProcessor{FastEndpoints.EmptyRequest}[])
  - FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.PostProcessors(FastEndpoints.IPostProcessor{FastEndpoints.EmptyRequest,{TResponse}}[])
  - FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.Options(Action{Microsoft.AspNetCore.Builder.RouteHandlerBuilder})
  - FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.HandleAsync(FastEndpoints.EmptyRequest,CancellationToken)
  - FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.AddError(System.String)
  - FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.AddError(System.Linq.Expressions.Expression{Func{FastEndpoints.EmptyRequest,System.Object}},System.String)
  - FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.ThrowIfAnyErrors
  - FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.ThrowError(System.String)
  - FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.ThrowError(System.Linq.Expressions.Expression{Func{FastEndpoints.EmptyRequest,System.Object}},System.String)
  - FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.SendAsync({TResponse},System.Int32,CancellationToken)
  - FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.SendOkAsync
  - FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.SendErrorsAsync(CancellationToken)
  - FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.SendNoContentAsync
  - FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.SendNotFoundAsync
  - FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.SendUnauthorizedAsync
  - FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.SendForbiddenAsync
  - FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.SendBytesAsync(System.Byte[],System.String,System.String,CancellationToken)
  - FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.SendFileAsync(FileInfo,System.String,CancellationToken)
  - FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.SendStreamAsync(Stream,System.String,System.Nullable{System.Int64},System.String,CancellationToken)
  - FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.PublishAsync``1({TEvent},FastEndpoints.Mode,CancellationToken)
  - FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.TryResolve``1
  - FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.TryResolve(Type)
  - FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.Resolve``1
  - FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.Resolve(Type)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: EndpointWithoutRequest(Of TResponse)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
  fullName.vb: FastEndpoints.EndpointWithoutRequest(Of TResponse)
  name.vb: EndpointWithoutRequest(Of TResponse)
references:
- uid: FastEndpoints
  commentId: N:FastEndpoints
  name: FastEndpoints
  nameWithType: FastEndpoints
  fullName: FastEndpoints
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: FastEndpoints.BaseEndpoint
  commentId: T:FastEndpoints.BaseEndpoint
  parent: FastEndpoints
  name: BaseEndpoint
  nameWithType: BaseEndpoint
  fullName: FastEndpoints.BaseEndpoint
- uid: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}
  commentId: T:FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,`0}
  parent: FastEndpoints
  definition: FastEndpoints.Endpoint`2
  name: Endpoint<EmptyRequest, TResponse>
  nameWithType: Endpoint<EmptyRequest, TResponse>
  fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>
  nameWithType.vb: Endpoint(Of EmptyRequest, TResponse)
  fullName.vb: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse)
  name.vb: Endpoint(Of EmptyRequest, TResponse)
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2
    name: Endpoint
    nameWithType: Endpoint
    fullName: FastEndpoints.Endpoint
  - name: <
    nameWithType: <
    fullName: <
  - uid: FastEndpoints.EmptyRequest
    name: EmptyRequest
    nameWithType: EmptyRequest
    fullName: FastEndpoints.EmptyRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: FastEndpoints.Endpoint`2
    name: Endpoint
    nameWithType: Endpoint
    fullName: FastEndpoints.Endpoint
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: FastEndpoints.EmptyRequest
    name: EmptyRequest
    nameWithType: EmptyRequest
    fullName: FastEndpoints.EmptyRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.HttpContext
  commentId: P:FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,`0}.HttpContext
  parent: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}
  definition: FastEndpoints.Endpoint`2.HttpContext
  name: HttpContext
  nameWithType: Endpoint<EmptyRequest, TResponse>.HttpContext
  fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.HttpContext
  nameWithType.vb: Endpoint(Of EmptyRequest, TResponse).HttpContext
  fullName.vb: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).HttpContext
- uid: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.User
  commentId: P:FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,`0}.User
  parent: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}
  definition: FastEndpoints.Endpoint`2.User
  name: User
  nameWithType: Endpoint<EmptyRequest, TResponse>.User
  fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.User
  nameWithType.vb: Endpoint(Of EmptyRequest, TResponse).User
  fullName.vb: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).User
- uid: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.Response
  commentId: P:FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,`0}.Response
  parent: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}
  definition: FastEndpoints.Endpoint`2.Response
  name: Response
  nameWithType: Endpoint<EmptyRequest, TResponse>.Response
  fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.Response
  nameWithType.vb: Endpoint(Of EmptyRequest, TResponse).Response
  fullName.vb: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).Response
- uid: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.Config
  commentId: P:FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,`0}.Config
  parent: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}
  definition: FastEndpoints.Endpoint`2.Config
  name: Config
  nameWithType: Endpoint<EmptyRequest, TResponse>.Config
  fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.Config
  nameWithType.vb: Endpoint(Of EmptyRequest, TResponse).Config
  fullName.vb: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).Config
- uid: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.Env
  commentId: P:FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,`0}.Env
  parent: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}
  definition: FastEndpoints.Endpoint`2.Env
  name: Env
  nameWithType: Endpoint<EmptyRequest, TResponse>.Env
  fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.Env
  nameWithType.vb: Endpoint(Of EmptyRequest, TResponse).Env
  fullName.vb: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).Env
- uid: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.Logger
  commentId: P:FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,`0}.Logger
  parent: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}
  definition: FastEndpoints.Endpoint`2.Logger
  name: Logger
  nameWithType: Endpoint<EmptyRequest, TResponse>.Logger
  fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.Logger
  nameWithType.vb: Endpoint(Of EmptyRequest, TResponse).Logger
  fullName.vb: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).Logger
- uid: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.BaseURL
  commentId: P:FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,`0}.BaseURL
  parent: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}
  definition: FastEndpoints.Endpoint`2.BaseURL
  name: BaseURL
  nameWithType: Endpoint<EmptyRequest, TResponse>.BaseURL
  fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.BaseURL
  nameWithType.vb: Endpoint(Of EmptyRequest, TResponse).BaseURL
  fullName.vb: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).BaseURL
- uid: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.HttpMethod
  commentId: P:FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,`0}.HttpMethod
  parent: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}
  definition: FastEndpoints.Endpoint`2.HttpMethod
  name: HttpMethod
  nameWithType: Endpoint<EmptyRequest, TResponse>.HttpMethod
  fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.HttpMethod
  nameWithType.vb: Endpoint(Of EmptyRequest, TResponse).HttpMethod
  fullName.vb: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).HttpMethod
- uid: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.ValidationFailures
  commentId: P:FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,`0}.ValidationFailures
  parent: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}
  definition: FastEndpoints.Endpoint`2.ValidationFailures
  name: ValidationFailures
  nameWithType: Endpoint<EmptyRequest, TResponse>.ValidationFailures
  fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.ValidationFailures
  nameWithType.vb: Endpoint(Of EmptyRequest, TResponse).ValidationFailures
  fullName.vb: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).ValidationFailures
- uid: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.ValidationFailed
  commentId: P:FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,`0}.ValidationFailed
  parent: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}
  definition: FastEndpoints.Endpoint`2.ValidationFailed
  name: ValidationFailed
  nameWithType: Endpoint<EmptyRequest, TResponse>.ValidationFailed
  fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.ValidationFailed
  nameWithType.vb: Endpoint(Of EmptyRequest, TResponse).ValidationFailed
  fullName.vb: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).ValidationFailed
- uid: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.Form
  commentId: P:FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,`0}.Form
  parent: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}
  definition: FastEndpoints.Endpoint`2.Form
  name: Form
  nameWithType: Endpoint<EmptyRequest, TResponse>.Form
  fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.Form
  nameWithType.vb: Endpoint(Of EmptyRequest, TResponse).Form
  fullName.vb: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).Form
- uid: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.Files
  commentId: P:FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,`0}.Files
  parent: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}
  definition: FastEndpoints.Endpoint`2.Files
  name: Files
  nameWithType: Endpoint<EmptyRequest, TResponse>.Files
  fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.Files
  nameWithType.vb: Endpoint(Of EmptyRequest, TResponse).Files
  fullName.vb: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).Files
- uid: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.Routes(System.String[])
  commentId: M:FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,`0}.Routes(System.String[])
  parent: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}
  definition: FastEndpoints.Endpoint`2.Routes(System.String[])
  name: Routes(String[])
  nameWithType: Endpoint<EmptyRequest, TResponse>.Routes(String[])
  fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.Routes(System.String[])
  nameWithType.vb: Endpoint(Of EmptyRequest, TResponse).Routes(String())
  fullName.vb: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).Routes(System.String())
  name.vb: Routes(String())
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.Routes(System.String[])
    name: Routes
    nameWithType: Endpoint<EmptyRequest, TResponse>.Routes
    fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.Routes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.Routes(System.String[])
    name: Routes
    nameWithType: Endpoint(Of EmptyRequest, TResponse).Routes
    fullName: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).Routes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.Verbs(FastEndpoints.Http[])
  commentId: M:FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,`0}.Verbs(FastEndpoints.Http[])
  parent: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}
  definition: FastEndpoints.Endpoint`2.Verbs(FastEndpoints.Http[])
  name: Verbs(Http[])
  nameWithType: Endpoint<EmptyRequest, TResponse>.Verbs(Http[])
  fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.Verbs(FastEndpoints.Http[])
  nameWithType.vb: Endpoint(Of EmptyRequest, TResponse).Verbs(Http())
  fullName.vb: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).Verbs(FastEndpoints.Http())
  name.vb: Verbs(Http())
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.Verbs(FastEndpoints.Http[])
    name: Verbs
    nameWithType: Endpoint<EmptyRequest, TResponse>.Verbs
    fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.Verbs
  - name: (
    nameWithType: (
    fullName: (
  - uid: FastEndpoints.Http
    name: Http
    nameWithType: Http
    fullName: FastEndpoints.Http
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.Verbs(FastEndpoints.Http[])
    name: Verbs
    nameWithType: Endpoint(Of EmptyRequest, TResponse).Verbs
    fullName: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).Verbs
  - name: (
    nameWithType: (
    fullName: (
  - uid: FastEndpoints.Http
    name: Http
    nameWithType: Http
    fullName: FastEndpoints.Http
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.DontThrowIfValidationFails
  commentId: M:FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,`0}.DontThrowIfValidationFails
  parent: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}
  definition: FastEndpoints.Endpoint`2.DontThrowIfValidationFails
  name: DontThrowIfValidationFails()
  nameWithType: Endpoint<EmptyRequest, TResponse>.DontThrowIfValidationFails()
  fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.DontThrowIfValidationFails()
  nameWithType.vb: Endpoint(Of EmptyRequest, TResponse).DontThrowIfValidationFails()
  fullName.vb: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).DontThrowIfValidationFails()
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.DontThrowIfValidationFails
    name: DontThrowIfValidationFails
    nameWithType: Endpoint<EmptyRequest, TResponse>.DontThrowIfValidationFails
    fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.DontThrowIfValidationFails
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.DontThrowIfValidationFails
    name: DontThrowIfValidationFails
    nameWithType: Endpoint(Of EmptyRequest, TResponse).DontThrowIfValidationFails
    fullName: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).DontThrowIfValidationFails
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.AllowAnonymous
  commentId: M:FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,`0}.AllowAnonymous
  parent: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}
  definition: FastEndpoints.Endpoint`2.AllowAnonymous
  name: AllowAnonymous()
  nameWithType: Endpoint<EmptyRequest, TResponse>.AllowAnonymous()
  fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.AllowAnonymous()
  nameWithType.vb: Endpoint(Of EmptyRequest, TResponse).AllowAnonymous()
  fullName.vb: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).AllowAnonymous()
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.AllowAnonymous
    name: AllowAnonymous
    nameWithType: Endpoint<EmptyRequest, TResponse>.AllowAnonymous
    fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.AllowAnonymous
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.AllowAnonymous
    name: AllowAnonymous
    nameWithType: Endpoint(Of EmptyRequest, TResponse).AllowAnonymous
    fullName: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).AllowAnonymous
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.AllowFileUploads
  commentId: M:FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,`0}.AllowFileUploads
  parent: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}
  definition: FastEndpoints.Endpoint`2.AllowFileUploads
  name: AllowFileUploads()
  nameWithType: Endpoint<EmptyRequest, TResponse>.AllowFileUploads()
  fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.AllowFileUploads()
  nameWithType.vb: Endpoint(Of EmptyRequest, TResponse).AllowFileUploads()
  fullName.vb: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).AllowFileUploads()
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.AllowFileUploads
    name: AllowFileUploads
    nameWithType: Endpoint<EmptyRequest, TResponse>.AllowFileUploads
    fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.AllowFileUploads
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.AllowFileUploads
    name: AllowFileUploads
    nameWithType: Endpoint(Of EmptyRequest, TResponse).AllowFileUploads
    fullName: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).AllowFileUploads
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.Policies(System.String[])
  commentId: M:FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,`0}.Policies(System.String[])
  parent: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}
  definition: FastEndpoints.Endpoint`2.Policies(System.String[])
  name: Policies(String[])
  nameWithType: Endpoint<EmptyRequest, TResponse>.Policies(String[])
  fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.Policies(System.String[])
  nameWithType.vb: Endpoint(Of EmptyRequest, TResponse).Policies(String())
  fullName.vb: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).Policies(System.String())
  name.vb: Policies(String())
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.Policies(System.String[])
    name: Policies
    nameWithType: Endpoint<EmptyRequest, TResponse>.Policies
    fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.Policies
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.Policies(System.String[])
    name: Policies
    nameWithType: Endpoint(Of EmptyRequest, TResponse).Policies
    fullName: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).Policies
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.Roles(System.String[])
  commentId: M:FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,`0}.Roles(System.String[])
  parent: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}
  definition: FastEndpoints.Endpoint`2.Roles(System.String[])
  name: Roles(String[])
  nameWithType: Endpoint<EmptyRequest, TResponse>.Roles(String[])
  fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.Roles(System.String[])
  nameWithType.vb: Endpoint(Of EmptyRequest, TResponse).Roles(String())
  fullName.vb: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).Roles(System.String())
  name.vb: Roles(String())
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.Roles(System.String[])
    name: Roles
    nameWithType: Endpoint<EmptyRequest, TResponse>.Roles
    fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.Roles
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.Roles(System.String[])
    name: Roles
    nameWithType: Endpoint(Of EmptyRequest, TResponse).Roles
    fullName: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).Roles
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.Permissions(System.String[])
  commentId: M:FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,`0}.Permissions(System.String[])
  parent: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}
  definition: FastEndpoints.Endpoint`2.Permissions(System.String[])
  name: Permissions(String[])
  nameWithType: Endpoint<EmptyRequest, TResponse>.Permissions(String[])
  fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.Permissions(System.String[])
  nameWithType.vb: Endpoint(Of EmptyRequest, TResponse).Permissions(String())
  fullName.vb: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).Permissions(System.String())
  name.vb: Permissions(String())
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.Permissions(System.String[])
    name: Permissions
    nameWithType: Endpoint<EmptyRequest, TResponse>.Permissions
    fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.Permissions
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.Permissions(System.String[])
    name: Permissions
    nameWithType: Endpoint(Of EmptyRequest, TResponse).Permissions
    fullName: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).Permissions
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.Permissions(System.Boolean,System.String[])
  commentId: M:FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,`0}.Permissions(System.Boolean,System.String[])
  parent: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}
  definition: FastEndpoints.Endpoint`2.Permissions(System.Boolean,System.String[])
  name: Permissions(Boolean, String[])
  nameWithType: Endpoint<EmptyRequest, TResponse>.Permissions(Boolean, String[])
  fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.Permissions(System.Boolean, System.String[])
  nameWithType.vb: Endpoint(Of EmptyRequest, TResponse).Permissions(Boolean, String())
  fullName.vb: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).Permissions(System.Boolean, System.String())
  name.vb: Permissions(Boolean, String())
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.Permissions(System.Boolean,System.String[])
    name: Permissions
    nameWithType: Endpoint<EmptyRequest, TResponse>.Permissions
    fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.Permissions
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.Permissions(System.Boolean,System.String[])
    name: Permissions
    nameWithType: Endpoint(Of EmptyRequest, TResponse).Permissions
    fullName: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).Permissions
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.AnyPermission(System.String[])
  commentId: M:FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,`0}.AnyPermission(System.String[])
  parent: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}
  definition: FastEndpoints.Endpoint`2.AnyPermission(System.String[])
  name: AnyPermission(String[])
  nameWithType: Endpoint<EmptyRequest, TResponse>.AnyPermission(String[])
  fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.AnyPermission(System.String[])
  nameWithType.vb: Endpoint(Of EmptyRequest, TResponse).AnyPermission(String())
  fullName.vb: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).AnyPermission(System.String())
  name.vb: AnyPermission(String())
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.AnyPermission(System.String[])
    name: AnyPermission
    nameWithType: Endpoint<EmptyRequest, TResponse>.AnyPermission
    fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.AnyPermission
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.AnyPermission(System.String[])
    name: AnyPermission
    nameWithType: Endpoint(Of EmptyRequest, TResponse).AnyPermission
    fullName: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).AnyPermission
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.Claims(System.String[])
  commentId: M:FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,`0}.Claims(System.String[])
  parent: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}
  definition: FastEndpoints.Endpoint`2.Claims(System.String[])
  name: Claims(String[])
  nameWithType: Endpoint<EmptyRequest, TResponse>.Claims(String[])
  fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.Claims(System.String[])
  nameWithType.vb: Endpoint(Of EmptyRequest, TResponse).Claims(String())
  fullName.vb: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).Claims(System.String())
  name.vb: Claims(String())
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.Claims(System.String[])
    name: Claims
    nameWithType: Endpoint<EmptyRequest, TResponse>.Claims
    fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.Claims
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.Claims(System.String[])
    name: Claims
    nameWithType: Endpoint(Of EmptyRequest, TResponse).Claims
    fullName: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).Claims
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.Claims(System.Boolean,System.String[])
  commentId: M:FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,`0}.Claims(System.Boolean,System.String[])
  parent: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}
  definition: FastEndpoints.Endpoint`2.Claims(System.Boolean,System.String[])
  name: Claims(Boolean, String[])
  nameWithType: Endpoint<EmptyRequest, TResponse>.Claims(Boolean, String[])
  fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.Claims(System.Boolean, System.String[])
  nameWithType.vb: Endpoint(Of EmptyRequest, TResponse).Claims(Boolean, String())
  fullName.vb: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).Claims(System.Boolean, System.String())
  name.vb: Claims(Boolean, String())
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.Claims(System.Boolean,System.String[])
    name: Claims
    nameWithType: Endpoint<EmptyRequest, TResponse>.Claims
    fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.Claims
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.Claims(System.Boolean,System.String[])
    name: Claims
    nameWithType: Endpoint(Of EmptyRequest, TResponse).Claims
    fullName: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).Claims
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.AnyClaim(System.String[])
  commentId: M:FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,`0}.AnyClaim(System.String[])
  parent: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}
  definition: FastEndpoints.Endpoint`2.AnyClaim(System.String[])
  name: AnyClaim(String[])
  nameWithType: Endpoint<EmptyRequest, TResponse>.AnyClaim(String[])
  fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.AnyClaim(System.String[])
  nameWithType.vb: Endpoint(Of EmptyRequest, TResponse).AnyClaim(String())
  fullName.vb: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).AnyClaim(System.String())
  name.vb: AnyClaim(String())
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.AnyClaim(System.String[])
    name: AnyClaim
    nameWithType: Endpoint<EmptyRequest, TResponse>.AnyClaim
    fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.AnyClaim
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.AnyClaim(System.String[])
    name: AnyClaim
    nameWithType: Endpoint(Of EmptyRequest, TResponse).AnyClaim
    fullName: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).AnyClaim
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.PreProcessors(FastEndpoints.IPreProcessor{FastEndpoints.EmptyRequest}[])
  commentId: M:FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,`0}.PreProcessors(FastEndpoints.IPreProcessor{FastEndpoints.EmptyRequest}[])
  parent: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}
  definition: FastEndpoints.Endpoint`2.PreProcessors(FastEndpoints.IPreProcessor{`0}[])
  name: PreProcessors(IPreProcessor<EmptyRequest>[])
  nameWithType: Endpoint<EmptyRequest, TResponse>.PreProcessors(IPreProcessor<EmptyRequest>[])
  fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.PreProcessors(FastEndpoints.IPreProcessor<FastEndpoints.EmptyRequest>[])
  nameWithType.vb: Endpoint(Of EmptyRequest, TResponse).PreProcessors(IPreProcessor(Of EmptyRequest)())
  fullName.vb: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).PreProcessors(FastEndpoints.IPreProcessor(Of FastEndpoints.EmptyRequest)())
  name.vb: PreProcessors(IPreProcessor(Of EmptyRequest)())
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.PreProcessors(FastEndpoints.IPreProcessor{`0}[])
    name: PreProcessors
    nameWithType: Endpoint<EmptyRequest, TResponse>.PreProcessors
    fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.PreProcessors
  - name: (
    nameWithType: (
    fullName: (
  - uid: FastEndpoints.IPreProcessor`1
    name: IPreProcessor
    nameWithType: IPreProcessor
    fullName: FastEndpoints.IPreProcessor
  - name: <
    nameWithType: <
    fullName: <
  - uid: FastEndpoints.EmptyRequest
    name: EmptyRequest
    nameWithType: EmptyRequest
    fullName: FastEndpoints.EmptyRequest
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.PreProcessors(FastEndpoints.IPreProcessor{`0}[])
    name: PreProcessors
    nameWithType: Endpoint(Of EmptyRequest, TResponse).PreProcessors
    fullName: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).PreProcessors
  - name: (
    nameWithType: (
    fullName: (
  - uid: FastEndpoints.IPreProcessor`1
    name: IPreProcessor
    nameWithType: IPreProcessor
    fullName: FastEndpoints.IPreProcessor
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: FastEndpoints.EmptyRequest
    name: EmptyRequest
    nameWithType: EmptyRequest
    fullName: FastEndpoints.EmptyRequest
  - name: )
    nameWithType: )
    fullName: )
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.PostProcessors(FastEndpoints.IPostProcessor{FastEndpoints.EmptyRequest,{TResponse}}[])
  commentId: M:FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,`0}.PostProcessors(FastEndpoints.IPostProcessor{FastEndpoints.EmptyRequest,`0}[])
  parent: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}
  definition: FastEndpoints.Endpoint`2.PostProcessors(FastEndpoints.IPostProcessor{`0,`1}[])
  name: PostProcessors(IPostProcessor<EmptyRequest, TResponse>[])
  nameWithType: Endpoint<EmptyRequest, TResponse>.PostProcessors(IPostProcessor<EmptyRequest, TResponse>[])
  fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.PostProcessors(FastEndpoints.IPostProcessor<FastEndpoints.EmptyRequest, TResponse>[])
  nameWithType.vb: Endpoint(Of EmptyRequest, TResponse).PostProcessors(IPostProcessor(Of EmptyRequest, TResponse)())
  fullName.vb: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).PostProcessors(FastEndpoints.IPostProcessor(Of FastEndpoints.EmptyRequest, TResponse)())
  name.vb: PostProcessors(IPostProcessor(Of EmptyRequest, TResponse)())
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.PostProcessors(FastEndpoints.IPostProcessor{`0,`1}[])
    name: PostProcessors
    nameWithType: Endpoint<EmptyRequest, TResponse>.PostProcessors
    fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.PostProcessors
  - name: (
    nameWithType: (
    fullName: (
  - uid: FastEndpoints.IPostProcessor`2
    name: IPostProcessor
    nameWithType: IPostProcessor
    fullName: FastEndpoints.IPostProcessor
  - name: <
    nameWithType: <
    fullName: <
  - uid: FastEndpoints.EmptyRequest
    name: EmptyRequest
    nameWithType: EmptyRequest
    fullName: FastEndpoints.EmptyRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.PostProcessors(FastEndpoints.IPostProcessor{`0,`1}[])
    name: PostProcessors
    nameWithType: Endpoint(Of EmptyRequest, TResponse).PostProcessors
    fullName: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).PostProcessors
  - name: (
    nameWithType: (
    fullName: (
  - uid: FastEndpoints.IPostProcessor`2
    name: IPostProcessor
    nameWithType: IPostProcessor
    fullName: FastEndpoints.IPostProcessor
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: FastEndpoints.EmptyRequest
    name: EmptyRequest
    nameWithType: EmptyRequest
    fullName: FastEndpoints.EmptyRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: )
    nameWithType: )
    fullName: )
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.Options(Action{Microsoft.AspNetCore.Builder.RouteHandlerBuilder})
  commentId: M:FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,`0}.Options(Action{Microsoft.AspNetCore.Builder.RouteHandlerBuilder})
  parent: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}
  definition: FastEndpoints.Endpoint`2.Options(Action{Microsoft.AspNetCore.Builder.RouteHandlerBuilder})
  name: Options(Action<RouteHandlerBuilder>)
  nameWithType: Endpoint<EmptyRequest, TResponse>.Options(Action<RouteHandlerBuilder>)
  fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.Options(Action<Microsoft.AspNetCore.Builder.RouteHandlerBuilder>)
  nameWithType.vb: Endpoint(Of EmptyRequest, TResponse).Options(Action(Of RouteHandlerBuilder))
  fullName.vb: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).Options(Action(Of Microsoft.AspNetCore.Builder.RouteHandlerBuilder))
  name.vb: Options(Action(Of RouteHandlerBuilder))
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.Options(Action{Microsoft.AspNetCore.Builder.RouteHandlerBuilder})
    name: Options
    nameWithType: Endpoint<EmptyRequest, TResponse>.Options
    fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.Options
  - name: (
    nameWithType: (
    fullName: (
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Builder.RouteHandlerBuilder
    name: RouteHandlerBuilder
    nameWithType: RouteHandlerBuilder
    fullName: Microsoft.AspNetCore.Builder.RouteHandlerBuilder
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.Options(Action{Microsoft.AspNetCore.Builder.RouteHandlerBuilder})
    name: Options
    nameWithType: Endpoint(Of EmptyRequest, TResponse).Options
    fullName: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).Options
  - name: (
    nameWithType: (
    fullName: (
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Builder.RouteHandlerBuilder
    name: RouteHandlerBuilder
    nameWithType: RouteHandlerBuilder
    fullName: Microsoft.AspNetCore.Builder.RouteHandlerBuilder
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.HandleAsync(FastEndpoints.EmptyRequest,CancellationToken)
  commentId: M:FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,`0}.HandleAsync(FastEndpoints.EmptyRequest,CancellationToken)
  parent: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}
  definition: FastEndpoints.Endpoint`2.HandleAsync(`0,CancellationToken)
  name: HandleAsync(EmptyRequest, CancellationToken)
  nameWithType: Endpoint<EmptyRequest, TResponse>.HandleAsync(EmptyRequest, CancellationToken)
  fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.HandleAsync(FastEndpoints.EmptyRequest, CancellationToken)
  nameWithType.vb: Endpoint(Of EmptyRequest, TResponse).HandleAsync(EmptyRequest, CancellationToken)
  fullName.vb: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).HandleAsync(FastEndpoints.EmptyRequest, CancellationToken)
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.HandleAsync(`0,CancellationToken)
    name: HandleAsync
    nameWithType: Endpoint<EmptyRequest, TResponse>.HandleAsync
    fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.HandleAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: FastEndpoints.EmptyRequest
    name: EmptyRequest
    nameWithType: EmptyRequest
    fullName: FastEndpoints.EmptyRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.HandleAsync(`0,CancellationToken)
    name: HandleAsync
    nameWithType: Endpoint(Of EmptyRequest, TResponse).HandleAsync
    fullName: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).HandleAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: FastEndpoints.EmptyRequest
    name: EmptyRequest
    nameWithType: EmptyRequest
    fullName: FastEndpoints.EmptyRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.AddError(System.String)
  commentId: M:FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,`0}.AddError(System.String)
  parent: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}
  definition: FastEndpoints.Endpoint`2.AddError(System.String)
  name: AddError(String)
  nameWithType: Endpoint<EmptyRequest, TResponse>.AddError(String)
  fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.AddError(System.String)
  nameWithType.vb: Endpoint(Of EmptyRequest, TResponse).AddError(String)
  fullName.vb: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).AddError(System.String)
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.AddError(System.String)
    name: AddError
    nameWithType: Endpoint<EmptyRequest, TResponse>.AddError
    fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.AddError
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.AddError(System.String)
    name: AddError
    nameWithType: Endpoint(Of EmptyRequest, TResponse).AddError
    fullName: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).AddError
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.AddError(System.Linq.Expressions.Expression{Func{FastEndpoints.EmptyRequest,System.Object}},System.String)
  commentId: M:FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,`0}.AddError(System.Linq.Expressions.Expression{Func{FastEndpoints.EmptyRequest,System.Object}},System.String)
  parent: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}
  definition: FastEndpoints.Endpoint`2.AddError(System.Linq.Expressions.Expression{Func{`0,System.Object}},System.String)
  name: AddError(Expression<Func<EmptyRequest, Object>>, String)
  nameWithType: Endpoint<EmptyRequest, TResponse>.AddError(Expression<Func<EmptyRequest, Object>>, String)
  fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.AddError(System.Linq.Expressions.Expression<Func<FastEndpoints.EmptyRequest, System.Object>>, System.String)
  nameWithType.vb: Endpoint(Of EmptyRequest, TResponse).AddError(Expression(Of Func(Of EmptyRequest, Object)), String)
  fullName.vb: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).AddError(System.Linq.Expressions.Expression(Of Func(Of FastEndpoints.EmptyRequest, System.Object)), System.String)
  name.vb: AddError(Expression(Of Func(Of EmptyRequest, Object)), String)
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.AddError(System.Linq.Expressions.Expression{Func{`0,System.Object}},System.String)
    name: AddError
    nameWithType: Endpoint<EmptyRequest, TResponse>.AddError
    fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.AddError
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: FastEndpoints.EmptyRequest
    name: EmptyRequest
    nameWithType: EmptyRequest
    fullName: FastEndpoints.EmptyRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.AddError(System.Linq.Expressions.Expression{Func{`0,System.Object}},System.String)
    name: AddError
    nameWithType: Endpoint(Of EmptyRequest, TResponse).AddError
    fullName: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).AddError
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: FastEndpoints.EmptyRequest
    name: EmptyRequest
    nameWithType: EmptyRequest
    fullName: FastEndpoints.EmptyRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.ThrowIfAnyErrors
  commentId: M:FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,`0}.ThrowIfAnyErrors
  parent: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}
  definition: FastEndpoints.Endpoint`2.ThrowIfAnyErrors
  name: ThrowIfAnyErrors()
  nameWithType: Endpoint<EmptyRequest, TResponse>.ThrowIfAnyErrors()
  fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.ThrowIfAnyErrors()
  nameWithType.vb: Endpoint(Of EmptyRequest, TResponse).ThrowIfAnyErrors()
  fullName.vb: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).ThrowIfAnyErrors()
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.ThrowIfAnyErrors
    name: ThrowIfAnyErrors
    nameWithType: Endpoint<EmptyRequest, TResponse>.ThrowIfAnyErrors
    fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.ThrowIfAnyErrors
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.ThrowIfAnyErrors
    name: ThrowIfAnyErrors
    nameWithType: Endpoint(Of EmptyRequest, TResponse).ThrowIfAnyErrors
    fullName: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).ThrowIfAnyErrors
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.ThrowError(System.String)
  commentId: M:FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,`0}.ThrowError(System.String)
  parent: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}
  definition: FastEndpoints.Endpoint`2.ThrowError(System.String)
  name: ThrowError(String)
  nameWithType: Endpoint<EmptyRequest, TResponse>.ThrowError(String)
  fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.ThrowError(System.String)
  nameWithType.vb: Endpoint(Of EmptyRequest, TResponse).ThrowError(String)
  fullName.vb: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).ThrowError(System.String)
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.ThrowError(System.String)
    name: ThrowError
    nameWithType: Endpoint<EmptyRequest, TResponse>.ThrowError
    fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.ThrowError
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.ThrowError(System.String)
    name: ThrowError
    nameWithType: Endpoint(Of EmptyRequest, TResponse).ThrowError
    fullName: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).ThrowError
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.ThrowError(System.Linq.Expressions.Expression{Func{FastEndpoints.EmptyRequest,System.Object}},System.String)
  commentId: M:FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,`0}.ThrowError(System.Linq.Expressions.Expression{Func{FastEndpoints.EmptyRequest,System.Object}},System.String)
  parent: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}
  definition: FastEndpoints.Endpoint`2.ThrowError(System.Linq.Expressions.Expression{Func{`0,System.Object}},System.String)
  name: ThrowError(Expression<Func<EmptyRequest, Object>>, String)
  nameWithType: Endpoint<EmptyRequest, TResponse>.ThrowError(Expression<Func<EmptyRequest, Object>>, String)
  fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.ThrowError(System.Linq.Expressions.Expression<Func<FastEndpoints.EmptyRequest, System.Object>>, System.String)
  nameWithType.vb: Endpoint(Of EmptyRequest, TResponse).ThrowError(Expression(Of Func(Of EmptyRequest, Object)), String)
  fullName.vb: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).ThrowError(System.Linq.Expressions.Expression(Of Func(Of FastEndpoints.EmptyRequest, System.Object)), System.String)
  name.vb: ThrowError(Expression(Of Func(Of EmptyRequest, Object)), String)
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.ThrowError(System.Linq.Expressions.Expression{Func{`0,System.Object}},System.String)
    name: ThrowError
    nameWithType: Endpoint<EmptyRequest, TResponse>.ThrowError
    fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.ThrowError
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: FastEndpoints.EmptyRequest
    name: EmptyRequest
    nameWithType: EmptyRequest
    fullName: FastEndpoints.EmptyRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.ThrowError(System.Linq.Expressions.Expression{Func{`0,System.Object}},System.String)
    name: ThrowError
    nameWithType: Endpoint(Of EmptyRequest, TResponse).ThrowError
    fullName: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).ThrowError
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: FastEndpoints.EmptyRequest
    name: EmptyRequest
    nameWithType: EmptyRequest
    fullName: FastEndpoints.EmptyRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.SendAsync({TResponse},System.Int32,CancellationToken)
  commentId: M:FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,`0}.SendAsync(`0,System.Int32,CancellationToken)
  parent: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}
  definition: FastEndpoints.Endpoint`2.SendAsync(`1,System.Int32,CancellationToken)
  name: SendAsync(TResponse, Int32, CancellationToken)
  nameWithType: Endpoint<EmptyRequest, TResponse>.SendAsync(TResponse, Int32, CancellationToken)
  fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.SendAsync(TResponse, System.Int32, CancellationToken)
  nameWithType.vb: Endpoint(Of EmptyRequest, TResponse).SendAsync(TResponse, Int32, CancellationToken)
  fullName.vb: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).SendAsync(TResponse, System.Int32, CancellationToken)
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.SendAsync(`1,System.Int32,CancellationToken)
    name: SendAsync
    nameWithType: Endpoint<EmptyRequest, TResponse>.SendAsync
    fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.SendAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.SendAsync(`1,System.Int32,CancellationToken)
    name: SendAsync
    nameWithType: Endpoint(Of EmptyRequest, TResponse).SendAsync
    fullName: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).SendAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.SendOkAsync
  commentId: M:FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,`0}.SendOkAsync
  parent: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}
  definition: FastEndpoints.Endpoint`2.SendOkAsync
  name: SendOkAsync()
  nameWithType: Endpoint<EmptyRequest, TResponse>.SendOkAsync()
  fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.SendOkAsync()
  nameWithType.vb: Endpoint(Of EmptyRequest, TResponse).SendOkAsync()
  fullName.vb: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).SendOkAsync()
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.SendOkAsync
    name: SendOkAsync
    nameWithType: Endpoint<EmptyRequest, TResponse>.SendOkAsync
    fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.SendOkAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.SendOkAsync
    name: SendOkAsync
    nameWithType: Endpoint(Of EmptyRequest, TResponse).SendOkAsync
    fullName: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).SendOkAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.SendErrorsAsync(CancellationToken)
  commentId: M:FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,`0}.SendErrorsAsync(CancellationToken)
  parent: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}
  definition: FastEndpoints.Endpoint`2.SendErrorsAsync(CancellationToken)
  name: SendErrorsAsync(CancellationToken)
  nameWithType: Endpoint<EmptyRequest, TResponse>.SendErrorsAsync(CancellationToken)
  fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.SendErrorsAsync(CancellationToken)
  nameWithType.vb: Endpoint(Of EmptyRequest, TResponse).SendErrorsAsync(CancellationToken)
  fullName.vb: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).SendErrorsAsync(CancellationToken)
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.SendErrorsAsync(CancellationToken)
    name: SendErrorsAsync
    nameWithType: Endpoint<EmptyRequest, TResponse>.SendErrorsAsync
    fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.SendErrorsAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.SendErrorsAsync(CancellationToken)
    name: SendErrorsAsync
    nameWithType: Endpoint(Of EmptyRequest, TResponse).SendErrorsAsync
    fullName: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).SendErrorsAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.SendNoContentAsync
  commentId: M:FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,`0}.SendNoContentAsync
  parent: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}
  definition: FastEndpoints.Endpoint`2.SendNoContentAsync
  name: SendNoContentAsync()
  nameWithType: Endpoint<EmptyRequest, TResponse>.SendNoContentAsync()
  fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.SendNoContentAsync()
  nameWithType.vb: Endpoint(Of EmptyRequest, TResponse).SendNoContentAsync()
  fullName.vb: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).SendNoContentAsync()
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.SendNoContentAsync
    name: SendNoContentAsync
    nameWithType: Endpoint<EmptyRequest, TResponse>.SendNoContentAsync
    fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.SendNoContentAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.SendNoContentAsync
    name: SendNoContentAsync
    nameWithType: Endpoint(Of EmptyRequest, TResponse).SendNoContentAsync
    fullName: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).SendNoContentAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.SendNotFoundAsync
  commentId: M:FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,`0}.SendNotFoundAsync
  parent: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}
  definition: FastEndpoints.Endpoint`2.SendNotFoundAsync
  name: SendNotFoundAsync()
  nameWithType: Endpoint<EmptyRequest, TResponse>.SendNotFoundAsync()
  fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.SendNotFoundAsync()
  nameWithType.vb: Endpoint(Of EmptyRequest, TResponse).SendNotFoundAsync()
  fullName.vb: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).SendNotFoundAsync()
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.SendNotFoundAsync
    name: SendNotFoundAsync
    nameWithType: Endpoint<EmptyRequest, TResponse>.SendNotFoundAsync
    fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.SendNotFoundAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.SendNotFoundAsync
    name: SendNotFoundAsync
    nameWithType: Endpoint(Of EmptyRequest, TResponse).SendNotFoundAsync
    fullName: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).SendNotFoundAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.SendUnauthorizedAsync
  commentId: M:FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,`0}.SendUnauthorizedAsync
  parent: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}
  definition: FastEndpoints.Endpoint`2.SendUnauthorizedAsync
  name: SendUnauthorizedAsync()
  nameWithType: Endpoint<EmptyRequest, TResponse>.SendUnauthorizedAsync()
  fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.SendUnauthorizedAsync()
  nameWithType.vb: Endpoint(Of EmptyRequest, TResponse).SendUnauthorizedAsync()
  fullName.vb: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).SendUnauthorizedAsync()
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.SendUnauthorizedAsync
    name: SendUnauthorizedAsync
    nameWithType: Endpoint<EmptyRequest, TResponse>.SendUnauthorizedAsync
    fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.SendUnauthorizedAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.SendUnauthorizedAsync
    name: SendUnauthorizedAsync
    nameWithType: Endpoint(Of EmptyRequest, TResponse).SendUnauthorizedAsync
    fullName: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).SendUnauthorizedAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.SendForbiddenAsync
  commentId: M:FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,`0}.SendForbiddenAsync
  parent: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}
  definition: FastEndpoints.Endpoint`2.SendForbiddenAsync
  name: SendForbiddenAsync()
  nameWithType: Endpoint<EmptyRequest, TResponse>.SendForbiddenAsync()
  fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.SendForbiddenAsync()
  nameWithType.vb: Endpoint(Of EmptyRequest, TResponse).SendForbiddenAsync()
  fullName.vb: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).SendForbiddenAsync()
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.SendForbiddenAsync
    name: SendForbiddenAsync
    nameWithType: Endpoint<EmptyRequest, TResponse>.SendForbiddenAsync
    fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.SendForbiddenAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.SendForbiddenAsync
    name: SendForbiddenAsync
    nameWithType: Endpoint(Of EmptyRequest, TResponse).SendForbiddenAsync
    fullName: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).SendForbiddenAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.SendBytesAsync(System.Byte[],System.String,System.String,CancellationToken)
  commentId: M:FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,`0}.SendBytesAsync(System.Byte[],System.String,System.String,CancellationToken)
  parent: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}
  definition: FastEndpoints.Endpoint`2.SendBytesAsync(System.Byte[],System.String,System.String,CancellationToken)
  name: SendBytesAsync(Byte[], String, String, CancellationToken)
  nameWithType: Endpoint<EmptyRequest, TResponse>.SendBytesAsync(Byte[], String, String, CancellationToken)
  fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.SendBytesAsync(System.Byte[], System.String, System.String, CancellationToken)
  nameWithType.vb: Endpoint(Of EmptyRequest, TResponse).SendBytesAsync(Byte(), String, String, CancellationToken)
  fullName.vb: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).SendBytesAsync(System.Byte(), System.String, System.String, CancellationToken)
  name.vb: SendBytesAsync(Byte(), String, String, CancellationToken)
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.SendBytesAsync(System.Byte[],System.String,System.String,CancellationToken)
    name: SendBytesAsync
    nameWithType: Endpoint<EmptyRequest, TResponse>.SendBytesAsync
    fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.SendBytesAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.SendBytesAsync(System.Byte[],System.String,System.String,CancellationToken)
    name: SendBytesAsync
    nameWithType: Endpoint(Of EmptyRequest, TResponse).SendBytesAsync
    fullName: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).SendBytesAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.SendFileAsync(FileInfo,System.String,CancellationToken)
  commentId: M:FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,`0}.SendFileAsync(FileInfo,System.String,CancellationToken)
  parent: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}
  definition: FastEndpoints.Endpoint`2.SendFileAsync(FileInfo,System.String,CancellationToken)
  name: SendFileAsync(FileInfo, String, CancellationToken)
  nameWithType: Endpoint<EmptyRequest, TResponse>.SendFileAsync(FileInfo, String, CancellationToken)
  fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.SendFileAsync(FileInfo, System.String, CancellationToken)
  nameWithType.vb: Endpoint(Of EmptyRequest, TResponse).SendFileAsync(FileInfo, String, CancellationToken)
  fullName.vb: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).SendFileAsync(FileInfo, System.String, CancellationToken)
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.SendFileAsync(FileInfo,System.String,CancellationToken)
    name: SendFileAsync
    nameWithType: Endpoint<EmptyRequest, TResponse>.SendFileAsync
    fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.SendFileAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: FileInfo
    name: FileInfo
    nameWithType: FileInfo
    fullName: FileInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.SendFileAsync(FileInfo,System.String,CancellationToken)
    name: SendFileAsync
    nameWithType: Endpoint(Of EmptyRequest, TResponse).SendFileAsync
    fullName: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).SendFileAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: FileInfo
    name: FileInfo
    nameWithType: FileInfo
    fullName: FileInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.SendStreamAsync(Stream,System.String,System.Nullable{System.Int64},System.String,CancellationToken)
  commentId: M:FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,`0}.SendStreamAsync(Stream,System.String,System.Nullable{System.Int64},System.String,CancellationToken)
  parent: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}
  definition: FastEndpoints.Endpoint`2.SendStreamAsync(Stream,System.String,System.Nullable{System.Int64},System.String,CancellationToken)
  name: SendStreamAsync(Stream, String, Nullable<Int64>, String, CancellationToken)
  nameWithType: Endpoint<EmptyRequest, TResponse>.SendStreamAsync(Stream, String, Nullable<Int64>, String, CancellationToken)
  fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.SendStreamAsync(Stream, System.String, System.Nullable<System.Int64>, System.String, CancellationToken)
  nameWithType.vb: Endpoint(Of EmptyRequest, TResponse).SendStreamAsync(Stream, String, Nullable(Of Int64), String, CancellationToken)
  fullName.vb: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).SendStreamAsync(Stream, System.String, System.Nullable(Of System.Int64), System.String, CancellationToken)
  name.vb: SendStreamAsync(Stream, String, Nullable(Of Int64), String, CancellationToken)
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.SendStreamAsync(Stream,System.String,System.Nullable{System.Int64},System.String,CancellationToken)
    name: SendStreamAsync
    nameWithType: Endpoint<EmptyRequest, TResponse>.SendStreamAsync
    fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.SendStreamAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Stream
    name: Stream
    nameWithType: Stream
    fullName: Stream
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.SendStreamAsync(Stream,System.String,System.Nullable{System.Int64},System.String,CancellationToken)
    name: SendStreamAsync
    nameWithType: Endpoint(Of EmptyRequest, TResponse).SendStreamAsync
    fullName: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).SendStreamAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Stream
    name: Stream
    nameWithType: Stream
    fullName: Stream
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.PublishAsync``1({TEvent},FastEndpoints.Mode,CancellationToken)
  commentId: M:FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,`0}.PublishAsync``1(``0,FastEndpoints.Mode,CancellationToken)
  parent: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}
  definition: FastEndpoints.Endpoint`2.PublishAsync``1(``0,FastEndpoints.Mode,CancellationToken)
  name: PublishAsync<TEvent>(TEvent, Mode, CancellationToken)
  nameWithType: Endpoint<EmptyRequest, TResponse>.PublishAsync<TEvent>(TEvent, Mode, CancellationToken)
  fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.PublishAsync<TEvent>(TEvent, FastEndpoints.Mode, CancellationToken)
  nameWithType.vb: Endpoint(Of EmptyRequest, TResponse).PublishAsync(Of TEvent)(TEvent, Mode, CancellationToken)
  fullName.vb: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).PublishAsync(Of TEvent)(TEvent, FastEndpoints.Mode, CancellationToken)
  name.vb: PublishAsync(Of TEvent)(TEvent, Mode, CancellationToken)
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.PublishAsync``1(``0,FastEndpoints.Mode,CancellationToken)
    name: PublishAsync<TEvent>
    nameWithType: Endpoint<EmptyRequest, TResponse>.PublishAsync<TEvent>
    fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.PublishAsync<TEvent>
  - name: (
    nameWithType: (
    fullName: (
  - name: TEvent
    nameWithType: TEvent
    fullName: TEvent
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: FastEndpoints.Mode
    name: Mode
    nameWithType: Mode
    fullName: FastEndpoints.Mode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.PublishAsync``1(``0,FastEndpoints.Mode,CancellationToken)
    name: PublishAsync(Of TEvent)
    nameWithType: Endpoint(Of EmptyRequest, TResponse).PublishAsync(Of TEvent)
    fullName: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).PublishAsync(Of TEvent)
  - name: (
    nameWithType: (
    fullName: (
  - name: TEvent
    nameWithType: TEvent
    fullName: TEvent
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: FastEndpoints.Mode
    name: Mode
    nameWithType: Mode
    fullName: FastEndpoints.Mode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.TryResolve``1
  commentId: M:FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,`0}.TryResolve``1
  parent: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}
  definition: FastEndpoints.Endpoint`2.TryResolve``1
  name: TryResolve<TService>()
  nameWithType: Endpoint<EmptyRequest, TResponse>.TryResolve<TService>()
  fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.TryResolve<TService>()
  nameWithType.vb: Endpoint(Of EmptyRequest, TResponse).TryResolve(Of TService)()
  fullName.vb: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).TryResolve(Of TService)()
  name.vb: TryResolve(Of TService)()
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.TryResolve``1
    name: TryResolve<TService>
    nameWithType: Endpoint<EmptyRequest, TResponse>.TryResolve<TService>
    fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.TryResolve<TService>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.TryResolve``1
    name: TryResolve(Of TService)
    nameWithType: Endpoint(Of EmptyRequest, TResponse).TryResolve(Of TService)
    fullName: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).TryResolve(Of TService)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.TryResolve(Type)
  commentId: M:FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,`0}.TryResolve(Type)
  parent: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}
  definition: FastEndpoints.Endpoint`2.TryResolve(Type)
  name: TryResolve(Type)
  nameWithType: Endpoint<EmptyRequest, TResponse>.TryResolve(Type)
  fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.TryResolve(Type)
  nameWithType.vb: Endpoint(Of EmptyRequest, TResponse).TryResolve(Type)
  fullName.vb: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).TryResolve(Type)
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.TryResolve(Type)
    name: TryResolve
    nameWithType: Endpoint<EmptyRequest, TResponse>.TryResolve
    fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.TryResolve
  - name: (
    nameWithType: (
    fullName: (
  - uid: Type
    name: Type
    nameWithType: Type
    fullName: Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.TryResolve(Type)
    name: TryResolve
    nameWithType: Endpoint(Of EmptyRequest, TResponse).TryResolve
    fullName: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).TryResolve
  - name: (
    nameWithType: (
    fullName: (
  - uid: Type
    name: Type
    nameWithType: Type
    fullName: Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.Resolve``1
  commentId: M:FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,`0}.Resolve``1
  parent: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}
  definition: FastEndpoints.Endpoint`2.Resolve``1
  name: Resolve<TService>()
  nameWithType: Endpoint<EmptyRequest, TResponse>.Resolve<TService>()
  fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.Resolve<TService>()
  nameWithType.vb: Endpoint(Of EmptyRequest, TResponse).Resolve(Of TService)()
  fullName.vb: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).Resolve(Of TService)()
  name.vb: Resolve(Of TService)()
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.Resolve``1
    name: Resolve<TService>
    nameWithType: Endpoint<EmptyRequest, TResponse>.Resolve<TService>
    fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.Resolve<TService>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.Resolve``1
    name: Resolve(Of TService)
    nameWithType: Endpoint(Of EmptyRequest, TResponse).Resolve(Of TService)
    fullName: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).Resolve(Of TService)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}.Resolve(Type)
  commentId: M:FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,`0}.Resolve(Type)
  parent: FastEndpoints.Endpoint{FastEndpoints.EmptyRequest,{TResponse}}
  definition: FastEndpoints.Endpoint`2.Resolve(Type)
  name: Resolve(Type)
  nameWithType: Endpoint<EmptyRequest, TResponse>.Resolve(Type)
  fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.Resolve(Type)
  nameWithType.vb: Endpoint(Of EmptyRequest, TResponse).Resolve(Type)
  fullName.vb: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).Resolve(Type)
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.Resolve(Type)
    name: Resolve
    nameWithType: Endpoint<EmptyRequest, TResponse>.Resolve
    fullName: FastEndpoints.Endpoint<FastEndpoints.EmptyRequest, TResponse>.Resolve
  - name: (
    nameWithType: (
    fullName: (
  - uid: Type
    name: Type
    nameWithType: Type
    fullName: Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.Resolve(Type)
    name: Resolve
    nameWithType: Endpoint(Of EmptyRequest, TResponse).Resolve
    fullName: FastEndpoints.Endpoint(Of FastEndpoints.EmptyRequest, TResponse).Resolve
  - name: (
    nameWithType: (
    fullName: (
  - uid: Type
    name: Type
    nameWithType: Type
    fullName: Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: FastEndpoints.Endpoint`2
  commentId: T:FastEndpoints.Endpoint`2
  name: Endpoint<TRequest, TResponse>
  nameWithType: Endpoint<TRequest, TResponse>
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>
  nameWithType.vb: Endpoint(Of TRequest, TResponse)
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse)
  name.vb: Endpoint(Of TRequest, TResponse)
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2
    name: Endpoint
    nameWithType: Endpoint
    fullName: FastEndpoints.Endpoint
  - name: <
    nameWithType: <
    fullName: <
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: FastEndpoints.Endpoint`2
    name: Endpoint
    nameWithType: Endpoint
    fullName: FastEndpoints.Endpoint
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint`2.HttpContext
  commentId: P:FastEndpoints.Endpoint`2.HttpContext
  name: HttpContext
  nameWithType: Endpoint<TRequest, TResponse>.HttpContext
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.HttpContext
  nameWithType.vb: Endpoint(Of TRequest, TResponse).HttpContext
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).HttpContext
- uid: FastEndpoints.Endpoint`2.User
  commentId: P:FastEndpoints.Endpoint`2.User
  name: User
  nameWithType: Endpoint<TRequest, TResponse>.User
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.User
  nameWithType.vb: Endpoint(Of TRequest, TResponse).User
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).User
- uid: FastEndpoints.Endpoint`2.Response
  commentId: P:FastEndpoints.Endpoint`2.Response
  name: Response
  nameWithType: Endpoint<TRequest, TResponse>.Response
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Response
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Response
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Response
- uid: FastEndpoints.Endpoint`2.Config
  commentId: P:FastEndpoints.Endpoint`2.Config
  name: Config
  nameWithType: Endpoint<TRequest, TResponse>.Config
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Config
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Config
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Config
- uid: FastEndpoints.Endpoint`2.Env
  commentId: P:FastEndpoints.Endpoint`2.Env
  name: Env
  nameWithType: Endpoint<TRequest, TResponse>.Env
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Env
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Env
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Env
- uid: FastEndpoints.Endpoint`2.Logger
  commentId: P:FastEndpoints.Endpoint`2.Logger
  name: Logger
  nameWithType: Endpoint<TRequest, TResponse>.Logger
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Logger
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Logger
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Logger
- uid: FastEndpoints.Endpoint`2.BaseURL
  commentId: P:FastEndpoints.Endpoint`2.BaseURL
  name: BaseURL
  nameWithType: Endpoint<TRequest, TResponse>.BaseURL
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.BaseURL
  nameWithType.vb: Endpoint(Of TRequest, TResponse).BaseURL
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).BaseURL
- uid: FastEndpoints.Endpoint`2.HttpMethod
  commentId: P:FastEndpoints.Endpoint`2.HttpMethod
  name: HttpMethod
  nameWithType: Endpoint<TRequest, TResponse>.HttpMethod
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.HttpMethod
  nameWithType.vb: Endpoint(Of TRequest, TResponse).HttpMethod
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).HttpMethod
- uid: FastEndpoints.Endpoint`2.ValidationFailures
  commentId: P:FastEndpoints.Endpoint`2.ValidationFailures
  name: ValidationFailures
  nameWithType: Endpoint<TRequest, TResponse>.ValidationFailures
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.ValidationFailures
  nameWithType.vb: Endpoint(Of TRequest, TResponse).ValidationFailures
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).ValidationFailures
- uid: FastEndpoints.Endpoint`2.ValidationFailed
  commentId: P:FastEndpoints.Endpoint`2.ValidationFailed
  name: ValidationFailed
  nameWithType: Endpoint<TRequest, TResponse>.ValidationFailed
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.ValidationFailed
  nameWithType.vb: Endpoint(Of TRequest, TResponse).ValidationFailed
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).ValidationFailed
- uid: FastEndpoints.Endpoint`2.Form
  commentId: P:FastEndpoints.Endpoint`2.Form
  name: Form
  nameWithType: Endpoint<TRequest, TResponse>.Form
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Form
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Form
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Form
- uid: FastEndpoints.Endpoint`2.Files
  commentId: P:FastEndpoints.Endpoint`2.Files
  name: Files
  nameWithType: Endpoint<TRequest, TResponse>.Files
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Files
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Files
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Files
- uid: FastEndpoints.Endpoint`2.Routes(System.String[])
  commentId: M:FastEndpoints.Endpoint`2.Routes(System.String[])
  isExternal: true
  name: Routes(String[])
  nameWithType: Endpoint<TRequest, TResponse>.Routes(String[])
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Routes(System.String[])
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Routes(String())
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Routes(System.String())
  name.vb: Routes(String())
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.Routes(System.String[])
    name: Routes
    nameWithType: Endpoint<TRequest, TResponse>.Routes
    fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Routes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.Routes(System.String[])
    name: Routes
    nameWithType: Endpoint(Of TRequest, TResponse).Routes
    fullName: FastEndpoints.Endpoint(Of TRequest, TResponse).Routes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint`2.Verbs(FastEndpoints.Http[])
  commentId: M:FastEndpoints.Endpoint`2.Verbs(FastEndpoints.Http[])
  name: Verbs(Http[])
  nameWithType: Endpoint<TRequest, TResponse>.Verbs(Http[])
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Verbs(FastEndpoints.Http[])
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Verbs(Http())
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Verbs(FastEndpoints.Http())
  name.vb: Verbs(Http())
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.Verbs(FastEndpoints.Http[])
    name: Verbs
    nameWithType: Endpoint<TRequest, TResponse>.Verbs
    fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Verbs
  - name: (
    nameWithType: (
    fullName: (
  - uid: FastEndpoints.Http
    name: Http
    nameWithType: Http
    fullName: FastEndpoints.Http
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.Verbs(FastEndpoints.Http[])
    name: Verbs
    nameWithType: Endpoint(Of TRequest, TResponse).Verbs
    fullName: FastEndpoints.Endpoint(Of TRequest, TResponse).Verbs
  - name: (
    nameWithType: (
    fullName: (
  - uid: FastEndpoints.Http
    name: Http
    nameWithType: Http
    fullName: FastEndpoints.Http
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint`2.DontThrowIfValidationFails
  commentId: M:FastEndpoints.Endpoint`2.DontThrowIfValidationFails
  name: DontThrowIfValidationFails()
  nameWithType: Endpoint<TRequest, TResponse>.DontThrowIfValidationFails()
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.DontThrowIfValidationFails()
  nameWithType.vb: Endpoint(Of TRequest, TResponse).DontThrowIfValidationFails()
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).DontThrowIfValidationFails()
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.DontThrowIfValidationFails
    name: DontThrowIfValidationFails
    nameWithType: Endpoint<TRequest, TResponse>.DontThrowIfValidationFails
    fullName: FastEndpoints.Endpoint<TRequest, TResponse>.DontThrowIfValidationFails
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.DontThrowIfValidationFails
    name: DontThrowIfValidationFails
    nameWithType: Endpoint(Of TRequest, TResponse).DontThrowIfValidationFails
    fullName: FastEndpoints.Endpoint(Of TRequest, TResponse).DontThrowIfValidationFails
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint`2.AllowAnonymous
  commentId: M:FastEndpoints.Endpoint`2.AllowAnonymous
  name: AllowAnonymous()
  nameWithType: Endpoint<TRequest, TResponse>.AllowAnonymous()
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.AllowAnonymous()
  nameWithType.vb: Endpoint(Of TRequest, TResponse).AllowAnonymous()
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).AllowAnonymous()
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.AllowAnonymous
    name: AllowAnonymous
    nameWithType: Endpoint<TRequest, TResponse>.AllowAnonymous
    fullName: FastEndpoints.Endpoint<TRequest, TResponse>.AllowAnonymous
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.AllowAnonymous
    name: AllowAnonymous
    nameWithType: Endpoint(Of TRequest, TResponse).AllowAnonymous
    fullName: FastEndpoints.Endpoint(Of TRequest, TResponse).AllowAnonymous
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint`2.AllowFileUploads
  commentId: M:FastEndpoints.Endpoint`2.AllowFileUploads
  name: AllowFileUploads()
  nameWithType: Endpoint<TRequest, TResponse>.AllowFileUploads()
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.AllowFileUploads()
  nameWithType.vb: Endpoint(Of TRequest, TResponse).AllowFileUploads()
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).AllowFileUploads()
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.AllowFileUploads
    name: AllowFileUploads
    nameWithType: Endpoint<TRequest, TResponse>.AllowFileUploads
    fullName: FastEndpoints.Endpoint<TRequest, TResponse>.AllowFileUploads
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.AllowFileUploads
    name: AllowFileUploads
    nameWithType: Endpoint(Of TRequest, TResponse).AllowFileUploads
    fullName: FastEndpoints.Endpoint(Of TRequest, TResponse).AllowFileUploads
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint`2.Policies(System.String[])
  commentId: M:FastEndpoints.Endpoint`2.Policies(System.String[])
  isExternal: true
  name: Policies(String[])
  nameWithType: Endpoint<TRequest, TResponse>.Policies(String[])
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Policies(System.String[])
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Policies(String())
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Policies(System.String())
  name.vb: Policies(String())
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.Policies(System.String[])
    name: Policies
    nameWithType: Endpoint<TRequest, TResponse>.Policies
    fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Policies
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.Policies(System.String[])
    name: Policies
    nameWithType: Endpoint(Of TRequest, TResponse).Policies
    fullName: FastEndpoints.Endpoint(Of TRequest, TResponse).Policies
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint`2.Roles(System.String[])
  commentId: M:FastEndpoints.Endpoint`2.Roles(System.String[])
  isExternal: true
  name: Roles(String[])
  nameWithType: Endpoint<TRequest, TResponse>.Roles(String[])
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Roles(System.String[])
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Roles(String())
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Roles(System.String())
  name.vb: Roles(String())
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.Roles(System.String[])
    name: Roles
    nameWithType: Endpoint<TRequest, TResponse>.Roles
    fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Roles
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.Roles(System.String[])
    name: Roles
    nameWithType: Endpoint(Of TRequest, TResponse).Roles
    fullName: FastEndpoints.Endpoint(Of TRequest, TResponse).Roles
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint`2.Permissions(System.String[])
  commentId: M:FastEndpoints.Endpoint`2.Permissions(System.String[])
  isExternal: true
  name: Permissions(String[])
  nameWithType: Endpoint<TRequest, TResponse>.Permissions(String[])
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Permissions(System.String[])
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Permissions(String())
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Permissions(System.String())
  name.vb: Permissions(String())
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.Permissions(System.String[])
    name: Permissions
    nameWithType: Endpoint<TRequest, TResponse>.Permissions
    fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Permissions
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.Permissions(System.String[])
    name: Permissions
    nameWithType: Endpoint(Of TRequest, TResponse).Permissions
    fullName: FastEndpoints.Endpoint(Of TRequest, TResponse).Permissions
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint`2.Permissions(System.Boolean,System.String[])
  commentId: M:FastEndpoints.Endpoint`2.Permissions(System.Boolean,System.String[])
  isExternal: true
  name: Permissions(Boolean, String[])
  nameWithType: Endpoint<TRequest, TResponse>.Permissions(Boolean, String[])
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Permissions(System.Boolean, System.String[])
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Permissions(Boolean, String())
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Permissions(System.Boolean, System.String())
  name.vb: Permissions(Boolean, String())
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.Permissions(System.Boolean,System.String[])
    name: Permissions
    nameWithType: Endpoint<TRequest, TResponse>.Permissions
    fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Permissions
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.Permissions(System.Boolean,System.String[])
    name: Permissions
    nameWithType: Endpoint(Of TRequest, TResponse).Permissions
    fullName: FastEndpoints.Endpoint(Of TRequest, TResponse).Permissions
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint`2.AnyPermission(System.String[])
  commentId: M:FastEndpoints.Endpoint`2.AnyPermission(System.String[])
  isExternal: true
  name: AnyPermission(String[])
  nameWithType: Endpoint<TRequest, TResponse>.AnyPermission(String[])
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.AnyPermission(System.String[])
  nameWithType.vb: Endpoint(Of TRequest, TResponse).AnyPermission(String())
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).AnyPermission(System.String())
  name.vb: AnyPermission(String())
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.AnyPermission(System.String[])
    name: AnyPermission
    nameWithType: Endpoint<TRequest, TResponse>.AnyPermission
    fullName: FastEndpoints.Endpoint<TRequest, TResponse>.AnyPermission
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.AnyPermission(System.String[])
    name: AnyPermission
    nameWithType: Endpoint(Of TRequest, TResponse).AnyPermission
    fullName: FastEndpoints.Endpoint(Of TRequest, TResponse).AnyPermission
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint`2.Claims(System.String[])
  commentId: M:FastEndpoints.Endpoint`2.Claims(System.String[])
  isExternal: true
  name: Claims(String[])
  nameWithType: Endpoint<TRequest, TResponse>.Claims(String[])
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Claims(System.String[])
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Claims(String())
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Claims(System.String())
  name.vb: Claims(String())
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.Claims(System.String[])
    name: Claims
    nameWithType: Endpoint<TRequest, TResponse>.Claims
    fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Claims
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.Claims(System.String[])
    name: Claims
    nameWithType: Endpoint(Of TRequest, TResponse).Claims
    fullName: FastEndpoints.Endpoint(Of TRequest, TResponse).Claims
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint`2.Claims(System.Boolean,System.String[])
  commentId: M:FastEndpoints.Endpoint`2.Claims(System.Boolean,System.String[])
  isExternal: true
  name: Claims(Boolean, String[])
  nameWithType: Endpoint<TRequest, TResponse>.Claims(Boolean, String[])
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Claims(System.Boolean, System.String[])
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Claims(Boolean, String())
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Claims(System.Boolean, System.String())
  name.vb: Claims(Boolean, String())
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.Claims(System.Boolean,System.String[])
    name: Claims
    nameWithType: Endpoint<TRequest, TResponse>.Claims
    fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Claims
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.Claims(System.Boolean,System.String[])
    name: Claims
    nameWithType: Endpoint(Of TRequest, TResponse).Claims
    fullName: FastEndpoints.Endpoint(Of TRequest, TResponse).Claims
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint`2.AnyClaim(System.String[])
  commentId: M:FastEndpoints.Endpoint`2.AnyClaim(System.String[])
  isExternal: true
  name: AnyClaim(String[])
  nameWithType: Endpoint<TRequest, TResponse>.AnyClaim(String[])
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.AnyClaim(System.String[])
  nameWithType.vb: Endpoint(Of TRequest, TResponse).AnyClaim(String())
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).AnyClaim(System.String())
  name.vb: AnyClaim(String())
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.AnyClaim(System.String[])
    name: AnyClaim
    nameWithType: Endpoint<TRequest, TResponse>.AnyClaim
    fullName: FastEndpoints.Endpoint<TRequest, TResponse>.AnyClaim
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.AnyClaim(System.String[])
    name: AnyClaim
    nameWithType: Endpoint(Of TRequest, TResponse).AnyClaim
    fullName: FastEndpoints.Endpoint(Of TRequest, TResponse).AnyClaim
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint`2.PreProcessors(FastEndpoints.IPreProcessor{`0}[])
  commentId: M:FastEndpoints.Endpoint`2.PreProcessors(FastEndpoints.IPreProcessor{`0}[])
  name: PreProcessors(IPreProcessor<TRequest>[])
  nameWithType: Endpoint<TRequest, TResponse>.PreProcessors(IPreProcessor<TRequest>[])
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.PreProcessors(FastEndpoints.IPreProcessor<TRequest>[])
  nameWithType.vb: Endpoint(Of TRequest, TResponse).PreProcessors(IPreProcessor(Of TRequest)())
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).PreProcessors(FastEndpoints.IPreProcessor(Of TRequest)())
  name.vb: PreProcessors(IPreProcessor(Of TRequest)())
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.PreProcessors(FastEndpoints.IPreProcessor{`0}[])
    name: PreProcessors
    nameWithType: Endpoint<TRequest, TResponse>.PreProcessors
    fullName: FastEndpoints.Endpoint<TRequest, TResponse>.PreProcessors
  - name: (
    nameWithType: (
    fullName: (
  - uid: FastEndpoints.IPreProcessor`1
    name: IPreProcessor
    nameWithType: IPreProcessor
    fullName: FastEndpoints.IPreProcessor
  - name: <
    nameWithType: <
    fullName: <
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.PreProcessors(FastEndpoints.IPreProcessor{`0}[])
    name: PreProcessors
    nameWithType: Endpoint(Of TRequest, TResponse).PreProcessors
    fullName: FastEndpoints.Endpoint(Of TRequest, TResponse).PreProcessors
  - name: (
    nameWithType: (
    fullName: (
  - uid: FastEndpoints.IPreProcessor`1
    name: IPreProcessor
    nameWithType: IPreProcessor
    fullName: FastEndpoints.IPreProcessor
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: )
    nameWithType: )
    fullName: )
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint`2.PostProcessors(FastEndpoints.IPostProcessor{`0,`1}[])
  commentId: M:FastEndpoints.Endpoint`2.PostProcessors(FastEndpoints.IPostProcessor{`0,`1}[])
  name: PostProcessors(IPostProcessor<TRequest, TResponse>[])
  nameWithType: Endpoint<TRequest, TResponse>.PostProcessors(IPostProcessor<TRequest, TResponse>[])
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.PostProcessors(FastEndpoints.IPostProcessor<TRequest, TResponse>[])
  nameWithType.vb: Endpoint(Of TRequest, TResponse).PostProcessors(IPostProcessor(Of TRequest, TResponse)())
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).PostProcessors(FastEndpoints.IPostProcessor(Of TRequest, TResponse)())
  name.vb: PostProcessors(IPostProcessor(Of TRequest, TResponse)())
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.PostProcessors(FastEndpoints.IPostProcessor{`0,`1}[])
    name: PostProcessors
    nameWithType: Endpoint<TRequest, TResponse>.PostProcessors
    fullName: FastEndpoints.Endpoint<TRequest, TResponse>.PostProcessors
  - name: (
    nameWithType: (
    fullName: (
  - uid: FastEndpoints.IPostProcessor`2
    name: IPostProcessor
    nameWithType: IPostProcessor
    fullName: FastEndpoints.IPostProcessor
  - name: <
    nameWithType: <
    fullName: <
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.PostProcessors(FastEndpoints.IPostProcessor{`0,`1}[])
    name: PostProcessors
    nameWithType: Endpoint(Of TRequest, TResponse).PostProcessors
    fullName: FastEndpoints.Endpoint(Of TRequest, TResponse).PostProcessors
  - name: (
    nameWithType: (
    fullName: (
  - uid: FastEndpoints.IPostProcessor`2
    name: IPostProcessor
    nameWithType: IPostProcessor
    fullName: FastEndpoints.IPostProcessor
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: )
    nameWithType: )
    fullName: )
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint`2.Options(Action{Microsoft.AspNetCore.Builder.RouteHandlerBuilder})
  commentId: M:FastEndpoints.Endpoint`2.Options(Action{Microsoft.AspNetCore.Builder.RouteHandlerBuilder})
  isExternal: true
  name: Options(Action<RouteHandlerBuilder>)
  nameWithType: Endpoint<TRequest, TResponse>.Options(Action<RouteHandlerBuilder>)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Options(Action<Microsoft.AspNetCore.Builder.RouteHandlerBuilder>)
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Options(Action(Of RouteHandlerBuilder))
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Options(Action(Of Microsoft.AspNetCore.Builder.RouteHandlerBuilder))
  name.vb: Options(Action(Of RouteHandlerBuilder))
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.Options(Action{Microsoft.AspNetCore.Builder.RouteHandlerBuilder})
    name: Options
    nameWithType: Endpoint<TRequest, TResponse>.Options
    fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Options
  - name: (
    nameWithType: (
    fullName: (
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Builder.RouteHandlerBuilder
    name: RouteHandlerBuilder
    nameWithType: RouteHandlerBuilder
    fullName: Microsoft.AspNetCore.Builder.RouteHandlerBuilder
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.Options(Action{Microsoft.AspNetCore.Builder.RouteHandlerBuilder})
    name: Options
    nameWithType: Endpoint(Of TRequest, TResponse).Options
    fullName: FastEndpoints.Endpoint(Of TRequest, TResponse).Options
  - name: (
    nameWithType: (
    fullName: (
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Builder.RouteHandlerBuilder
    name: RouteHandlerBuilder
    nameWithType: RouteHandlerBuilder
    fullName: Microsoft.AspNetCore.Builder.RouteHandlerBuilder
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint`2.HandleAsync(`0,CancellationToken)
  commentId: M:FastEndpoints.Endpoint`2.HandleAsync(`0,CancellationToken)
  isExternal: true
  name: HandleAsync(TRequest, CancellationToken)
  nameWithType: Endpoint<TRequest, TResponse>.HandleAsync(TRequest, CancellationToken)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.HandleAsync(TRequest, CancellationToken)
  nameWithType.vb: Endpoint(Of TRequest, TResponse).HandleAsync(TRequest, CancellationToken)
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).HandleAsync(TRequest, CancellationToken)
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.HandleAsync(`0,CancellationToken)
    name: HandleAsync
    nameWithType: Endpoint<TRequest, TResponse>.HandleAsync
    fullName: FastEndpoints.Endpoint<TRequest, TResponse>.HandleAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.HandleAsync(`0,CancellationToken)
    name: HandleAsync
    nameWithType: Endpoint(Of TRequest, TResponse).HandleAsync
    fullName: FastEndpoints.Endpoint(Of TRequest, TResponse).HandleAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint`2.AddError(System.String)
  commentId: M:FastEndpoints.Endpoint`2.AddError(System.String)
  isExternal: true
  name: AddError(String)
  nameWithType: Endpoint<TRequest, TResponse>.AddError(String)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.AddError(System.String)
  nameWithType.vb: Endpoint(Of TRequest, TResponse).AddError(String)
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).AddError(System.String)
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.AddError(System.String)
    name: AddError
    nameWithType: Endpoint<TRequest, TResponse>.AddError
    fullName: FastEndpoints.Endpoint<TRequest, TResponse>.AddError
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.AddError(System.String)
    name: AddError
    nameWithType: Endpoint(Of TRequest, TResponse).AddError
    fullName: FastEndpoints.Endpoint(Of TRequest, TResponse).AddError
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint`2.AddError(System.Linq.Expressions.Expression{Func{`0,System.Object}},System.String)
  commentId: M:FastEndpoints.Endpoint`2.AddError(System.Linq.Expressions.Expression{Func{`0,System.Object}},System.String)
  isExternal: true
  name: AddError(Expression<Func<TRequest, Object>>, String)
  nameWithType: Endpoint<TRequest, TResponse>.AddError(Expression<Func<TRequest, Object>>, String)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.AddError(System.Linq.Expressions.Expression<Func<TRequest, System.Object>>, System.String)
  nameWithType.vb: Endpoint(Of TRequest, TResponse).AddError(Expression(Of Func(Of TRequest, Object)), String)
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).AddError(System.Linq.Expressions.Expression(Of Func(Of TRequest, System.Object)), System.String)
  name.vb: AddError(Expression(Of Func(Of TRequest, Object)), String)
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.AddError(System.Linq.Expressions.Expression{Func{`0,System.Object}},System.String)
    name: AddError
    nameWithType: Endpoint<TRequest, TResponse>.AddError
    fullName: FastEndpoints.Endpoint<TRequest, TResponse>.AddError
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.AddError(System.Linq.Expressions.Expression{Func{`0,System.Object}},System.String)
    name: AddError
    nameWithType: Endpoint(Of TRequest, TResponse).AddError
    fullName: FastEndpoints.Endpoint(Of TRequest, TResponse).AddError
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint`2.ThrowIfAnyErrors
  commentId: M:FastEndpoints.Endpoint`2.ThrowIfAnyErrors
  name: ThrowIfAnyErrors()
  nameWithType: Endpoint<TRequest, TResponse>.ThrowIfAnyErrors()
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.ThrowIfAnyErrors()
  nameWithType.vb: Endpoint(Of TRequest, TResponse).ThrowIfAnyErrors()
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).ThrowIfAnyErrors()
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.ThrowIfAnyErrors
    name: ThrowIfAnyErrors
    nameWithType: Endpoint<TRequest, TResponse>.ThrowIfAnyErrors
    fullName: FastEndpoints.Endpoint<TRequest, TResponse>.ThrowIfAnyErrors
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.ThrowIfAnyErrors
    name: ThrowIfAnyErrors
    nameWithType: Endpoint(Of TRequest, TResponse).ThrowIfAnyErrors
    fullName: FastEndpoints.Endpoint(Of TRequest, TResponse).ThrowIfAnyErrors
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint`2.ThrowError(System.String)
  commentId: M:FastEndpoints.Endpoint`2.ThrowError(System.String)
  isExternal: true
  name: ThrowError(String)
  nameWithType: Endpoint<TRequest, TResponse>.ThrowError(String)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.ThrowError(System.String)
  nameWithType.vb: Endpoint(Of TRequest, TResponse).ThrowError(String)
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).ThrowError(System.String)
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.ThrowError(System.String)
    name: ThrowError
    nameWithType: Endpoint<TRequest, TResponse>.ThrowError
    fullName: FastEndpoints.Endpoint<TRequest, TResponse>.ThrowError
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.ThrowError(System.String)
    name: ThrowError
    nameWithType: Endpoint(Of TRequest, TResponse).ThrowError
    fullName: FastEndpoints.Endpoint(Of TRequest, TResponse).ThrowError
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint`2.ThrowError(System.Linq.Expressions.Expression{Func{`0,System.Object}},System.String)
  commentId: M:FastEndpoints.Endpoint`2.ThrowError(System.Linq.Expressions.Expression{Func{`0,System.Object}},System.String)
  isExternal: true
  name: ThrowError(Expression<Func<TRequest, Object>>, String)
  nameWithType: Endpoint<TRequest, TResponse>.ThrowError(Expression<Func<TRequest, Object>>, String)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.ThrowError(System.Linq.Expressions.Expression<Func<TRequest, System.Object>>, System.String)
  nameWithType.vb: Endpoint(Of TRequest, TResponse).ThrowError(Expression(Of Func(Of TRequest, Object)), String)
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).ThrowError(System.Linq.Expressions.Expression(Of Func(Of TRequest, System.Object)), System.String)
  name.vb: ThrowError(Expression(Of Func(Of TRequest, Object)), String)
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.ThrowError(System.Linq.Expressions.Expression{Func{`0,System.Object}},System.String)
    name: ThrowError
    nameWithType: Endpoint<TRequest, TResponse>.ThrowError
    fullName: FastEndpoints.Endpoint<TRequest, TResponse>.ThrowError
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.ThrowError(System.Linq.Expressions.Expression{Func{`0,System.Object}},System.String)
    name: ThrowError
    nameWithType: Endpoint(Of TRequest, TResponse).ThrowError
    fullName: FastEndpoints.Endpoint(Of TRequest, TResponse).ThrowError
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint`2.SendAsync(`1,System.Int32,CancellationToken)
  commentId: M:FastEndpoints.Endpoint`2.SendAsync(`1,System.Int32,CancellationToken)
  isExternal: true
  name: SendAsync(TResponse, Int32, CancellationToken)
  nameWithType: Endpoint<TRequest, TResponse>.SendAsync(TResponse, Int32, CancellationToken)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.SendAsync(TResponse, System.Int32, CancellationToken)
  nameWithType.vb: Endpoint(Of TRequest, TResponse).SendAsync(TResponse, Int32, CancellationToken)
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).SendAsync(TResponse, System.Int32, CancellationToken)
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.SendAsync(`1,System.Int32,CancellationToken)
    name: SendAsync
    nameWithType: Endpoint<TRequest, TResponse>.SendAsync
    fullName: FastEndpoints.Endpoint<TRequest, TResponse>.SendAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.SendAsync(`1,System.Int32,CancellationToken)
    name: SendAsync
    nameWithType: Endpoint(Of TRequest, TResponse).SendAsync
    fullName: FastEndpoints.Endpoint(Of TRequest, TResponse).SendAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: TResponse
    nameWithType: TResponse
    fullName: TResponse
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint`2.SendOkAsync
  commentId: M:FastEndpoints.Endpoint`2.SendOkAsync
  name: SendOkAsync()
  nameWithType: Endpoint<TRequest, TResponse>.SendOkAsync()
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.SendOkAsync()
  nameWithType.vb: Endpoint(Of TRequest, TResponse).SendOkAsync()
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).SendOkAsync()
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.SendOkAsync
    name: SendOkAsync
    nameWithType: Endpoint<TRequest, TResponse>.SendOkAsync
    fullName: FastEndpoints.Endpoint<TRequest, TResponse>.SendOkAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.SendOkAsync
    name: SendOkAsync
    nameWithType: Endpoint(Of TRequest, TResponse).SendOkAsync
    fullName: FastEndpoints.Endpoint(Of TRequest, TResponse).SendOkAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint`2.SendErrorsAsync(CancellationToken)
  commentId: M:FastEndpoints.Endpoint`2.SendErrorsAsync(CancellationToken)
  isExternal: true
  name: SendErrorsAsync(CancellationToken)
  nameWithType: Endpoint<TRequest, TResponse>.SendErrorsAsync(CancellationToken)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.SendErrorsAsync(CancellationToken)
  nameWithType.vb: Endpoint(Of TRequest, TResponse).SendErrorsAsync(CancellationToken)
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).SendErrorsAsync(CancellationToken)
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.SendErrorsAsync(CancellationToken)
    name: SendErrorsAsync
    nameWithType: Endpoint<TRequest, TResponse>.SendErrorsAsync
    fullName: FastEndpoints.Endpoint<TRequest, TResponse>.SendErrorsAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.SendErrorsAsync(CancellationToken)
    name: SendErrorsAsync
    nameWithType: Endpoint(Of TRequest, TResponse).SendErrorsAsync
    fullName: FastEndpoints.Endpoint(Of TRequest, TResponse).SendErrorsAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint`2.SendNoContentAsync
  commentId: M:FastEndpoints.Endpoint`2.SendNoContentAsync
  name: SendNoContentAsync()
  nameWithType: Endpoint<TRequest, TResponse>.SendNoContentAsync()
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.SendNoContentAsync()
  nameWithType.vb: Endpoint(Of TRequest, TResponse).SendNoContentAsync()
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).SendNoContentAsync()
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.SendNoContentAsync
    name: SendNoContentAsync
    nameWithType: Endpoint<TRequest, TResponse>.SendNoContentAsync
    fullName: FastEndpoints.Endpoint<TRequest, TResponse>.SendNoContentAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.SendNoContentAsync
    name: SendNoContentAsync
    nameWithType: Endpoint(Of TRequest, TResponse).SendNoContentAsync
    fullName: FastEndpoints.Endpoint(Of TRequest, TResponse).SendNoContentAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint`2.SendNotFoundAsync
  commentId: M:FastEndpoints.Endpoint`2.SendNotFoundAsync
  name: SendNotFoundAsync()
  nameWithType: Endpoint<TRequest, TResponse>.SendNotFoundAsync()
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.SendNotFoundAsync()
  nameWithType.vb: Endpoint(Of TRequest, TResponse).SendNotFoundAsync()
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).SendNotFoundAsync()
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.SendNotFoundAsync
    name: SendNotFoundAsync
    nameWithType: Endpoint<TRequest, TResponse>.SendNotFoundAsync
    fullName: FastEndpoints.Endpoint<TRequest, TResponse>.SendNotFoundAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.SendNotFoundAsync
    name: SendNotFoundAsync
    nameWithType: Endpoint(Of TRequest, TResponse).SendNotFoundAsync
    fullName: FastEndpoints.Endpoint(Of TRequest, TResponse).SendNotFoundAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint`2.SendUnauthorizedAsync
  commentId: M:FastEndpoints.Endpoint`2.SendUnauthorizedAsync
  name: SendUnauthorizedAsync()
  nameWithType: Endpoint<TRequest, TResponse>.SendUnauthorizedAsync()
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.SendUnauthorizedAsync()
  nameWithType.vb: Endpoint(Of TRequest, TResponse).SendUnauthorizedAsync()
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).SendUnauthorizedAsync()
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.SendUnauthorizedAsync
    name: SendUnauthorizedAsync
    nameWithType: Endpoint<TRequest, TResponse>.SendUnauthorizedAsync
    fullName: FastEndpoints.Endpoint<TRequest, TResponse>.SendUnauthorizedAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.SendUnauthorizedAsync
    name: SendUnauthorizedAsync
    nameWithType: Endpoint(Of TRequest, TResponse).SendUnauthorizedAsync
    fullName: FastEndpoints.Endpoint(Of TRequest, TResponse).SendUnauthorizedAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint`2.SendForbiddenAsync
  commentId: M:FastEndpoints.Endpoint`2.SendForbiddenAsync
  name: SendForbiddenAsync()
  nameWithType: Endpoint<TRequest, TResponse>.SendForbiddenAsync()
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.SendForbiddenAsync()
  nameWithType.vb: Endpoint(Of TRequest, TResponse).SendForbiddenAsync()
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).SendForbiddenAsync()
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.SendForbiddenAsync
    name: SendForbiddenAsync
    nameWithType: Endpoint<TRequest, TResponse>.SendForbiddenAsync
    fullName: FastEndpoints.Endpoint<TRequest, TResponse>.SendForbiddenAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.SendForbiddenAsync
    name: SendForbiddenAsync
    nameWithType: Endpoint(Of TRequest, TResponse).SendForbiddenAsync
    fullName: FastEndpoints.Endpoint(Of TRequest, TResponse).SendForbiddenAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint`2.SendBytesAsync(System.Byte[],System.String,System.String,CancellationToken)
  commentId: M:FastEndpoints.Endpoint`2.SendBytesAsync(System.Byte[],System.String,System.String,CancellationToken)
  isExternal: true
  name: SendBytesAsync(Byte[], String, String, CancellationToken)
  nameWithType: Endpoint<TRequest, TResponse>.SendBytesAsync(Byte[], String, String, CancellationToken)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.SendBytesAsync(System.Byte[], System.String, System.String, CancellationToken)
  nameWithType.vb: Endpoint(Of TRequest, TResponse).SendBytesAsync(Byte(), String, String, CancellationToken)
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).SendBytesAsync(System.Byte(), System.String, System.String, CancellationToken)
  name.vb: SendBytesAsync(Byte(), String, String, CancellationToken)
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.SendBytesAsync(System.Byte[],System.String,System.String,CancellationToken)
    name: SendBytesAsync
    nameWithType: Endpoint<TRequest, TResponse>.SendBytesAsync
    fullName: FastEndpoints.Endpoint<TRequest, TResponse>.SendBytesAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.SendBytesAsync(System.Byte[],System.String,System.String,CancellationToken)
    name: SendBytesAsync
    nameWithType: Endpoint(Of TRequest, TResponse).SendBytesAsync
    fullName: FastEndpoints.Endpoint(Of TRequest, TResponse).SendBytesAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint`2.SendFileAsync(FileInfo,System.String,CancellationToken)
  commentId: M:FastEndpoints.Endpoint`2.SendFileAsync(FileInfo,System.String,CancellationToken)
  isExternal: true
  name: SendFileAsync(FileInfo, String, CancellationToken)
  nameWithType: Endpoint<TRequest, TResponse>.SendFileAsync(FileInfo, String, CancellationToken)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.SendFileAsync(FileInfo, System.String, CancellationToken)
  nameWithType.vb: Endpoint(Of TRequest, TResponse).SendFileAsync(FileInfo, String, CancellationToken)
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).SendFileAsync(FileInfo, System.String, CancellationToken)
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.SendFileAsync(FileInfo,System.String,CancellationToken)
    name: SendFileAsync
    nameWithType: Endpoint<TRequest, TResponse>.SendFileAsync
    fullName: FastEndpoints.Endpoint<TRequest, TResponse>.SendFileAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: FileInfo
    name: FileInfo
    nameWithType: FileInfo
    fullName: FileInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.SendFileAsync(FileInfo,System.String,CancellationToken)
    name: SendFileAsync
    nameWithType: Endpoint(Of TRequest, TResponse).SendFileAsync
    fullName: FastEndpoints.Endpoint(Of TRequest, TResponse).SendFileAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: FileInfo
    name: FileInfo
    nameWithType: FileInfo
    fullName: FileInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint`2.SendStreamAsync(Stream,System.String,System.Nullable{System.Int64},System.String,CancellationToken)
  commentId: M:FastEndpoints.Endpoint`2.SendStreamAsync(Stream,System.String,System.Nullable{System.Int64},System.String,CancellationToken)
  isExternal: true
  name: SendStreamAsync(Stream, String, Nullable<Int64>, String, CancellationToken)
  nameWithType: Endpoint<TRequest, TResponse>.SendStreamAsync(Stream, String, Nullable<Int64>, String, CancellationToken)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.SendStreamAsync(Stream, System.String, System.Nullable<System.Int64>, System.String, CancellationToken)
  nameWithType.vb: Endpoint(Of TRequest, TResponse).SendStreamAsync(Stream, String, Nullable(Of Int64), String, CancellationToken)
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).SendStreamAsync(Stream, System.String, System.Nullable(Of System.Int64), System.String, CancellationToken)
  name.vb: SendStreamAsync(Stream, String, Nullable(Of Int64), String, CancellationToken)
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.SendStreamAsync(Stream,System.String,System.Nullable{System.Int64},System.String,CancellationToken)
    name: SendStreamAsync
    nameWithType: Endpoint<TRequest, TResponse>.SendStreamAsync
    fullName: FastEndpoints.Endpoint<TRequest, TResponse>.SendStreamAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Stream
    name: Stream
    nameWithType: Stream
    fullName: Stream
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.SendStreamAsync(Stream,System.String,System.Nullable{System.Int64},System.String,CancellationToken)
    name: SendStreamAsync
    nameWithType: Endpoint(Of TRequest, TResponse).SendStreamAsync
    fullName: FastEndpoints.Endpoint(Of TRequest, TResponse).SendStreamAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Stream
    name: Stream
    nameWithType: Stream
    fullName: Stream
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint`2.PublishAsync``1(``0,FastEndpoints.Mode,CancellationToken)
  commentId: M:FastEndpoints.Endpoint`2.PublishAsync``1(``0,FastEndpoints.Mode,CancellationToken)
  isExternal: true
  name: PublishAsync<TEvent>(TEvent, Mode, CancellationToken)
  nameWithType: Endpoint<TRequest, TResponse>.PublishAsync<TEvent>(TEvent, Mode, CancellationToken)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.PublishAsync<TEvent>(TEvent, FastEndpoints.Mode, CancellationToken)
  nameWithType.vb: Endpoint(Of TRequest, TResponse).PublishAsync(Of TEvent)(TEvent, Mode, CancellationToken)
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).PublishAsync(Of TEvent)(TEvent, FastEndpoints.Mode, CancellationToken)
  name.vb: PublishAsync(Of TEvent)(TEvent, Mode, CancellationToken)
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.PublishAsync``1(``0,FastEndpoints.Mode,CancellationToken)
    name: PublishAsync<TEvent>
    nameWithType: Endpoint<TRequest, TResponse>.PublishAsync<TEvent>
    fullName: FastEndpoints.Endpoint<TRequest, TResponse>.PublishAsync<TEvent>
  - name: (
    nameWithType: (
    fullName: (
  - name: TEvent
    nameWithType: TEvent
    fullName: TEvent
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: FastEndpoints.Mode
    name: Mode
    nameWithType: Mode
    fullName: FastEndpoints.Mode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.PublishAsync``1(``0,FastEndpoints.Mode,CancellationToken)
    name: PublishAsync(Of TEvent)
    nameWithType: Endpoint(Of TRequest, TResponse).PublishAsync(Of TEvent)
    fullName: FastEndpoints.Endpoint(Of TRequest, TResponse).PublishAsync(Of TEvent)
  - name: (
    nameWithType: (
    fullName: (
  - name: TEvent
    nameWithType: TEvent
    fullName: TEvent
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: FastEndpoints.Mode
    name: Mode
    nameWithType: Mode
    fullName: FastEndpoints.Mode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint`2.TryResolve``1
  commentId: M:FastEndpoints.Endpoint`2.TryResolve``1
  name: TryResolve<TService>()
  nameWithType: Endpoint<TRequest, TResponse>.TryResolve<TService>()
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.TryResolve<TService>()
  nameWithType.vb: Endpoint(Of TRequest, TResponse).TryResolve(Of TService)()
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).TryResolve(Of TService)()
  name.vb: TryResolve(Of TService)()
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.TryResolve``1
    name: TryResolve<TService>
    nameWithType: Endpoint<TRequest, TResponse>.TryResolve<TService>
    fullName: FastEndpoints.Endpoint<TRequest, TResponse>.TryResolve<TService>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.TryResolve``1
    name: TryResolve(Of TService)
    nameWithType: Endpoint(Of TRequest, TResponse).TryResolve(Of TService)
    fullName: FastEndpoints.Endpoint(Of TRequest, TResponse).TryResolve(Of TService)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint`2.TryResolve(Type)
  commentId: M:FastEndpoints.Endpoint`2.TryResolve(Type)
  isExternal: true
  name: TryResolve(Type)
  nameWithType: Endpoint<TRequest, TResponse>.TryResolve(Type)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.TryResolve(Type)
  nameWithType.vb: Endpoint(Of TRequest, TResponse).TryResolve(Type)
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).TryResolve(Type)
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.TryResolve(Type)
    name: TryResolve
    nameWithType: Endpoint<TRequest, TResponse>.TryResolve
    fullName: FastEndpoints.Endpoint<TRequest, TResponse>.TryResolve
  - name: (
    nameWithType: (
    fullName: (
  - uid: Type
    name: Type
    nameWithType: Type
    fullName: Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.TryResolve(Type)
    name: TryResolve
    nameWithType: Endpoint(Of TRequest, TResponse).TryResolve
    fullName: FastEndpoints.Endpoint(Of TRequest, TResponse).TryResolve
  - name: (
    nameWithType: (
    fullName: (
  - uid: Type
    name: Type
    nameWithType: Type
    fullName: Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint`2.Resolve``1
  commentId: M:FastEndpoints.Endpoint`2.Resolve``1
  name: Resolve<TService>()
  nameWithType: Endpoint<TRequest, TResponse>.Resolve<TService>()
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Resolve<TService>()
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Resolve(Of TService)()
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Resolve(Of TService)()
  name.vb: Resolve(Of TService)()
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.Resolve``1
    name: Resolve<TService>
    nameWithType: Endpoint<TRequest, TResponse>.Resolve<TService>
    fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Resolve<TService>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.Resolve``1
    name: Resolve(Of TService)
    nameWithType: Endpoint(Of TRequest, TResponse).Resolve(Of TService)
    fullName: FastEndpoints.Endpoint(Of TRequest, TResponse).Resolve(Of TService)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: FastEndpoints.Endpoint`2.Resolve(Type)
  commentId: M:FastEndpoints.Endpoint`2.Resolve(Type)
  isExternal: true
  name: Resolve(Type)
  nameWithType: Endpoint<TRequest, TResponse>.Resolve(Type)
  fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Resolve(Type)
  nameWithType.vb: Endpoint(Of TRequest, TResponse).Resolve(Type)
  fullName.vb: FastEndpoints.Endpoint(Of TRequest, TResponse).Resolve(Type)
  spec.csharp:
  - uid: FastEndpoints.Endpoint`2.Resolve(Type)
    name: Resolve
    nameWithType: Endpoint<TRequest, TResponse>.Resolve
    fullName: FastEndpoints.Endpoint<TRequest, TResponse>.Resolve
  - name: (
    nameWithType: (
    fullName: (
  - uid: Type
    name: Type
    nameWithType: Type
    fullName: Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FastEndpoints.Endpoint`2.Resolve(Type)
    name: Resolve
    nameWithType: Endpoint(Of TRequest, TResponse).Resolve
    fullName: FastEndpoints.Endpoint(Of TRequest, TResponse).Resolve
  - name: (
    nameWithType: (
    fullName: (
  - uid: Type
    name: Type
    nameWithType: Type
    fullName: Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
